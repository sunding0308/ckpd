[ 2019-12-12T09:58:02+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.003717s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.004216s ]
INFO: [ app_begin ] --END-- [ RunTime:0.004247s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000023s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000061s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.029142s ]
INFO: [ view_parse ] --END-- [ RunTime:0.029175s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.003277s ]
INFO: [ view_filter ] --END-- [ RunTime:0.003299s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.004550s ]
INFO: [ app_end ] --END-- [ RunTime:0.004570s ]

[ 2019-12-12T09:58:02+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000058s ]
INFO: [ app_init ] --END-- [ RunTime:0.001399s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000892s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000921s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0014s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0015s ]

[ 2019-12-12T10:34:13+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000006s ]
INFO: [ app_init ] --END-- [ RunTime:0.003318s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.003650s ]
INFO: [ app_begin ] --END-- [ RunTime:0.003671s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000021s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000044s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.025546s ]
INFO: [ view_parse ] --END-- [ RunTime:0.025575s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.002555s ]
INFO: [ view_filter ] --END-- [ RunTime:0.002572s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.003698s ]
INFO: [ app_end ] --END-- [ RunTime:0.003716s ]

[ 2019-12-12T10:34:13+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000006s ]
INFO: [ app_init ] --END-- [ RunTime:0.000671s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000748s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000769s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0010s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0010s ]

[ 2019-12-12T10:34:15+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000489s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000519s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000533s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0009s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0009s ]

[ 2019-12-12T10:34:28+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000433s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000482s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000496s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000034s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000105s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.010258s ]
INFO: [ view_parse ] --END-- [ RunTime:0.010282s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000465s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000493s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000598s ]
INFO: [ app_end ] --END-- [ RunTime:0.000612s ]

[ 2019-12-12T10:34:28+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.000752s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000967s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000993s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0011s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0013s ]

[ 2019-12-12T10:34:34+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000505s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000573s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000592s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0009s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0012s ]

[ 2019-12-12T10:47:10+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000006s ]
INFO: [ app_init ] --END-- [ RunTime:0.000725s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000732s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000750s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000070s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000138s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.011727s ]
INFO: [ view_parse ] --END-- [ RunTime:0.011752s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000723s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000739s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000841s ]
INFO: [ app_end ] --END-- [ RunTime:0.000856s ]

[ 2019-12-12T10:47:10+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000012s ]
INFO: [ app_init ] --END-- [ RunTime:0.001906s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000876s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000899s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0010s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0013s ]

[ 2019-12-12T10:47:12+08:00 ] ::1 /Home/Index/detail?id=11
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000581s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000620s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000640s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0010s ]
SQL: SELECT * FROM `articles` WHERE `id` = 11 LIMIT 1   [ RunTime:0.0004s ]
SQL: UPDATE `articles` SET `origin_url`='https://js.aizhan.com/data/oracle/10558.html',`title`='oracle如何使用nvl函数',`text`='<div class=\"container\">
							
<p>关于nvl<a href=\"https://js.aizhan.com/tags/hanshu.html\" target=\"_blank\"><span style=\"color:#002FD9\"><a href=\"https://js.aizhan.com/tags/hanshu.html\" target=\"_blank\"><span style=\"color:#002FD9\">函数</span></a></span></a>的了解你知道多少呢？在oracle中难免会需要使用到nvl函数，那么你知道oracle如何使用nvl函数吗？今天小编就将为大家解答oracle如何使用nvl函数这个问题，大家可以参考一下。</p>

<p><a href=\"https://js.aizhan.com/tags/oracle.html\" target=\"_blank\"><span style=\"color:#002FD9\"><a href=\"https://js.aizhan.com/tags/oracle.html\" target=\"_blank\"><span style=\"color:#002FD9\">Oracle</span></a></span></a>的Nvl函数</p>

<p>nvl( ) 函数</p>

<p>从两个表达式返回一个非null 值。</p>

<p>语法</p>

<p>NVL(eExpression1, eExpression2)<br><br>
参数</p>

<p>eExpression1, eExpression2</p>

<p>如 果 eExpression1 的计算结果为 null 值，则 NVL( ) 返回 eExpression2。如果 eExpression1 的计算结果不是 null 值，则返回 eExpression1。eExpression1 和 eExpression2 可以是任意一种数据类型。如果 eExpression1 与 eExpression2 的结果皆为 null 值，则 NVL( ) 返回 .NULL.。</p>

<p>返回值类型</p>

<p>字符型、日期型、日期时间型、数值型、货币型、逻辑型或 null 值</p>

<p>说明</p>

<p>在不支持 null 值或 null 值无关紧要的情况下，可以使用 NVL( ) 来移去计算或操作中的 null 值。</p>

<p>select nvl(a.name,\'空得\') as name from student a joinschool b on a.ID=b.ID</p>

<p>注意：两个参数得类型要匹配</p>

<p>问：什么是NULL？</p>

<p>答：在我们不知道具体有什么数据的时候，也即未知，可以用NULL，</p>

<p>我们称它为空，ORACLE中，含有空值的表列长度为零。</p>

<p>ORACLE允许任何一种数据类型的字段为空，除了以下两种情况：</p>

<p>1、主键字段（primary key），</p>

<p>2、定义时已经加了NOT NULL限制条件的字段</p>

<p>说明：</p>

<p>1、等价于没有任何值、是未知数。</p>

<p>2、NULL与0、空字符串、空格都不同。</p>

<p>3、对空值做加、减、乘、除等运算操作，结果仍为空。</p>

<p>4、NULL的处理使用NVL函数。</p>

<p>5、比较时使用关键字用“is null”和“is not null”。</p>

<p>6、空值不能被索引，所以查询时有些符合条件的数据可能查不出来，</p>

<p>count(*)中，用nvl(列名,0)处理后再查。</p>

<p>7、排序时比其他数据都大（索引默认是降序排列，小→大），</p>

<p>所以NULL值总是排在最后。</p>

<p>以上就是关于oracle如何使用nvl函数的内容，在上文中，小编为大家做了简单的介绍。其实，在日常的操作oracle过程中是经常使可以使用的。</p>
						</div>
					',`creator`='admin',`created_at`='2019-12-12 10:47:00',`updated_at`='2019-12-12 10:47:00',`click`='1' WHERE `id` = 11 [ RunTime:0.0005s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000021s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000043s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.012721s ]
INFO: [ view_parse ] --END-- [ RunTime:0.012745s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000542s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000561s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000644s ]
INFO: [ app_end ] --END-- [ RunTime:0.000660s ]

[ 2019-12-12T10:47:12+08:00 ] ::1 /Home/Index/ShowDetail?id=11
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000022s ]
INFO: [ app_init ] --END-- [ RunTime:0.000674s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000983s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001009s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0019s ]
SQL: SELECT * FROM `articles` WHERE `id` = 11 LIMIT 1   [ RunTime:0.0004s ]

[ 2019-12-12T10:48:39+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000012s ]
INFO: [ app_init ] --END-- [ RunTime:0.000725s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000750s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000777s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000020s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000045s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.009752s ]
INFO: [ view_parse ] --END-- [ RunTime:0.009782s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000582s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000602s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000801s ]
INFO: [ app_end ] --END-- [ RunTime:0.000822s ]

[ 2019-12-12T10:48:39+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000693s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000869s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000909s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0009s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0013s ]

[ 2019-12-12T10:48:45+08:00 ] 127.0.0.1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000006s ]
INFO: [ app_init ] --END-- [ RunTime:0.000515s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000558s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000575s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000017s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000034s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.010181s ]
INFO: [ view_parse ] --END-- [ RunTime:0.010238s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000520s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000536s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000723s ]
INFO: [ app_end ] --END-- [ RunTime:0.000740s ]

[ 2019-12-12T10:48:45+08:00 ] 127.0.0.1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000711s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000822s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000844s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0011s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0014s ]

[ 2019-12-12T10:48:51+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000006s ]
INFO: [ app_init ] --END-- [ RunTime:0.000439s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000578s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000593s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0009s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0009s ]

[ 2019-12-12T10:48:54+08:00 ] ::1 /Home/Index/detail?id=3
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000570s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000639s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000657s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0008s ]
SQL: SELECT * FROM `articles` WHERE `id` = 3 LIMIT 1   [ RunTime:0.0005s ]
SQL: UPDATE `articles` SET `origin_url`='https://js.aizhan.com/data/oracle/10600.html',`title`='oracle如何实现发送邮件',`text`='<div class=\"container\">
							
<div class=\"codebody\"><pre>
在oracle中我们经常会因为任务需要发送<a href=\"https://js.aizhan.com/tags/youjian.html\" target=\"_blank\"><span style=\"color:#002FD9\"><a href=\"https://js.aizhan.com/tags/youjian.html\" target=\"_blank\"><span style=\"color:#002FD9\">邮件</span></a></span></a>，但是有很多新手小伙伴们不知道oracle如何实现发送邮件，接下来的内容中就让爱站小编为大家介绍oracle发送邮件的方法吧，希望对你有所帮助。
CREATE OR REPLACE PROCEDURE PROCSENDEMAIL(P_TXT        VARCHAR2,
                                           P_SUB        VARCHAR2,
                                           P_SENDOR     VARCHAR2,
                                           P_RECEIVER   VARCHAR2,
                                           P_SERVER     VARCHAR2,
                                           P_PORT       NUMBER DEFAULT 25,
                                           P_NEED_SMTP INT DEFAULT 0,
                                           P_USER       VARCHAR2 DEFAULT NULL,
                                           P_PASS       VARCHAR2 DEFAULT NULL,
                                           P_FILENAME   VARCHAR2 DEFAULT NULL,
                                           P_ENCODE     VARCHAR2 DEFAULT \'bit 7\')
   AUTHID CURRENT_USER IS
   /*
   作用：用oracle发送邮件
   主要功能：1、支持多收件人。
             2、支持中文
             3、支持抄送人
             4、支持大于32K的附件
             5、支持多行正文
             6、支持多附件
             7、支持文本附件和二进制附件
             8、支持HTML格式
             8、支持
   作者：suk
   参数说明：
             p_txt :邮件正文
             p_sub: 邮件标题
             p_SendorAddress : 发送人邮件地址
             p_ReceiverAddress : 接收地址，可以同时发送到多个地址上，地址之间用\",\"或者\";\"隔开
             p_EmailServer : 邮件服务器地址，可以是域名或者IP
             p_Port ：邮件服务器端口
             p_need_smtp：是否需要smtp认证，0表示不需要，1表示需要
             p_user：smtp验证需要的用户名
             p_pass：smtp验证需要的密码
             p_filename：附件名称，必须包含完整的路径，如\"d:tempa.txt\"。
                         可以有多个附件，附件名称只见用逗号或者分号分隔
             p_encode：附件编码转换格式，其中 p_encode=\'bit 7\' 表示文本类型附件
                                              p_encode=\'base64\' 表示二进制类型附件
   注意：
         1、对于文本类型的附件，不能用base64的方式发送，否则出错
         2、对于多个附件只能用同一种格式发送
   */
   L_CRLF VARCHAR2(2) := UTL_TCP.CRLF;
   L_SENDORADDRESS VARCHAR2(4000);
   L_SPLITE         VARCHAR2(10) := \'++\';
   BOUNDARY             CONSTANT VARCHAR2(256) := \'-----BYSUK\';
   FIRST_BOUNDARY       CONSTANT VARCHAR2(256) := \'--\' || BOUNDARY || L_CRLF;
   LAST_BOUNDARY        CONSTANT VARCHAR2(256) := \'--\' || BOUNDARY || \'--\' ||
                                                 L_CRLF;
   MULTIPART_MIME_TYPE CONSTANT VARCHAR2(256) := \'multipart/mixed; boundary=\"\' ||
                                                 BOUNDARY || \'\"\';
   /* 以下部分是发送大二进制附件时用到的变量 */
   L_FIL                  BFILE;
   L_FILE_LEN             NUMBER;
   L_MODULO               NUMBER;
   L_PIECES               NUMBER;
   L_FILE_HANDLE          UTL_FILE.FILE_TYPE;
   L_AMT                  BINARY_INTEGER := 672 * 3; /* ensures proper format;   2016 */
   L_FILEPOS              PLS_INTEGER := 1; /* pointer for the file */
   L_CHUNKS               NUMBER;
   L_BUF                  RAW(2100);
   L_DATA                 RAW(2100);
   L_MAX_LINE_WIDTH       NUMBER := 54;
   L_DIRECTORY_BASE_NAME VARCHAR2(100) := \'DIR_FOR_SEND_MAIL\';
   L_LINE                 VARCHAR2(1000);
   L_MESG                 VARCHAR2(32767);
   /* 以上部分是发送大二进制附件时用到的变量 */
   TYPE ADDRESS_LIST IS TABLE OF VARCHAR2(100) INDEX BY BINARY_INTEGER;
   MY_ADDRESS_LIST ADDRESS_LIST;
   TYPE ACCT_LIST IS TABLE OF VARCHAR2(100) INDEX BY BINARY_INTEGER;
   MY_ACCT_LIST ACCT_LIST;
   -------------------------------------返回附件源文件所在目录或者名称--------------------------------------
   FUNCTION GET_FILE(P_FILE VARCHAR2,
                     P_GET   INT) RETURN VARCHAR2 IS
     --p_get=1 表示返回目录
     --p_get=2 表示返回文件名
     L_FILE VARCHAR2(1000);
   BEGIN
     IF INSTR(P_FILE, \'\') > 0 THEN
       --windows
       IF P_GET = 1 THEN
         L_FILE := SUBSTR(P_FILE, 1, INSTR(P_FILE, \'\', -1) - 1);
       ELSIF P_GET = 2 THEN
         L_FILE := SUBSTR(P_FILE, - (LENGTH(P_FILE) - INSTR(P_FILE, \'\', -1)));
       END IF;
     ELSIF INSTR(P_FILE, \'/\') > 0 THEN
       --linux/unix
       IF P_GET = 1 THEN
         L_FILE := SUBSTR(P_FILE, 1, INSTR(P_FILE, \'/\', -1) - 1);
       ELSIF P_GET = 2 THEN
         L_FILE := SUBSTR(P_FILE, - (LENGTH(P_FILE) - INSTR(P_FILE, \'/\', -1)));
       END IF;
     END IF;
     RETURN L_FILE;
   END;
   ---------------------------------------------删除directory------------------------------------
   PROCEDURE DROP_DIRECTORY(P_DIRECTORY_NAME VARCHAR2) IS
   BEGIN
     EXECUTE IMMEDIATE \'drop directory \' || P_DIRECTORY_NAME;
   EXCEPTION
     WHEN OTHERS THEN
       NULL;
   END;
   --------------------------------------------------创建directory-----------------------------------------
   PROCEDURE CREATE_DIRECTORY(P_DIRECTORY_NAME VARCHAR2,
                              P_DIR             VARCHAR2) IS
   BEGIN
     EXECUTE IMMEDIATE \'create directory \' || P_DIRECTORY_NAME || \' as \'\'\' ||
                       P_DIR || \'\'\'\';
     EXECUTE IMMEDIATE \'grant read,write on directory \' || P_DIRECTORY_NAME ||
                       \' to public\';
     EXCEPTION
     WHEN OTHERS THEN
       RAISE;
   END;
   --------------------------------------------分割邮件地址或者附件地址-----------------------------------
   PROCEDURE P_SPLITE_STR(P_STR          VARCHAR2,
                          P_SPLITE_FLAG INT DEFAULT 1) IS
     L_ADDR VARCHAR2(254) := \'\';
     L_LEN   INT;
     L_STR   VARCHAR2(4000);
     J       INT := 0; --表示邮件地址或者附件的个数
   BEGIN
     /*处理接收邮件地址列表，包括去空格、将;转换为,等*/
     L_STR := TRIM(RTRIM(REPLACE(REPLACE(P_STR, \';\', \',\'), \' \', \'\'), \',\'));
     L_LEN := LENGTH(L_STR);
     FOR I IN 1 .. L_LEN LOOP
       IF SUBSTR(L_STR, I, 1) <> \',\' THEN
         L_ADDR := L_ADDR || SUBSTR(L_STR, I, 1);
       ELSE
         J := J + 1;
         IF P_SPLITE_FLAG = 1 THEN --表示处理邮件地址       
           --前后需要加上\'<>\'，否则很多邮箱将不能发送邮件
           L_ADDR := \'<\' || L_ADDR || \'>\';
           --调用邮件发送过程
           MY_ADDRESS_LIST(J) := L_ADDR;
         ELSIF P_SPLITE_FLAG = 2 THEN --表示处理附件名称
           MY_ACCT_LIST(J) := L_ADDR;
         END IF;
         L_ADDR := \'\';
       END IF;
       IF I = L_LEN THEN
         J := J + 1;
         IF P_SPLITE_FLAG = 1 THEN
           --调用邮件发送过程
           L_ADDR := \'<\' || L_ADDR || \'>\';
           MY_ADDRESS_LIST(J) := L_ADDR;
         ELSIF P_SPLITE_FLAG = 2 THEN
           MY_ACCT_LIST(J) := L_ADDR;
         END IF;
       END IF;
     END LOOP;
   END;
   ------------------------------------------------写邮件头和邮件内容------------------------------------------
   PROCEDURE WRITE_DATA(P_CONN    IN OUT NOCOPY UTL_SMTP.CONNECTION,
                        P_NAME    IN VARCHAR2,
                        P_VALUE   IN VARCHAR2,
                        P_SPLITE VARCHAR2 DEFAULT \':\',
                        P_CRLF    VARCHAR2 DEFAULT L_CRLF) IS
   BEGIN
     /* utl_raw.cast_to_raw 对解决中文乱码问题很重要*/
     UTL_SMTP.WRITE_RAW_DATA(P_CONN, UTL_RAW.CAST_TO_RAW(CONVERT(P_NAME ||
                                                          P_SPLITE ||
                                                          P_VALUE ||
                                                          P_CRLF, \'ZHS16GBK\')));
   END;
   ----------------------------------------写MIME邮件尾部-----------------------------------------------------
   PROCEDURE <span id=\"TheWorldHiLightStyleID\" style=\"BACKGROUND: #ffff00; COLOR: #000000\">END_BOUNDARY</span>(CONN IN OUT NOCOPY UTL_SMTP.CONNECTION,
                          LAST IN BOOLEAN DEFAULT FALSE) IS
   BEGIN
     UTL_SMTP.WRITE_DATA(CONN, UTL_TCP.CRLF);
     IF (LAST) THEN
       UTL_SMTP.WRITE_DATA(CONN, LAST_BOUNDARY);
     END IF;
   END;
   ----------------------------------------------发送附件----------------------------------------------------
   PROCEDURE ATTACHMENT(CONN          IN OUT NOCOPY UTL_SMTP.CONNECTION,
                        MIME_TYPE     IN VARCHAR2 DEFAULT \'text/plain\',
                        INLINE        IN BOOLEAN DEFAULT TRUE,
                        FILENAME      IN VARCHAR2 DEFAULT \'t.txt\',
                        TRANSFER_ENC IN VARCHAR2 DEFAULT \'7 bit\',
                        DT_NAME       IN VARCHAR2 DEFAULT \'0\') IS

     L_FILENAME VARCHAR2(1000);
   BEGIN
     --写附件头
     UTL_SMTP.WRITE_DATA(CONN, FIRST_BOUNDARY);
     --设置附件格式
     WRITE_DATA(CONN, \'Content-Type\', MIME_TYPE);
     --如果文件名称非空，表示有附件
     DROP_DIRECTORY(DT_NAME);
     --创建directory
     CREATE_DIRECTORY(DT_NAME, GET_FILE(FILENAME, 1));
     --得到附件文件名称
     L_FILENAME := GET_FILE(FILENAME, 2);
     IF (INLINE) THEN
       WRITE_DATA(CONN, \'Content-Disposition\', \'inline; filename=\"\' ||
                   L_FILENAME || \'\"\');
     ELSE
       WRITE_DATA(CONN, \'Content-Disposition\', \'attachment; filename=\"\' ||
                   L_FILENAME || \'\"\');
     END IF;
     --设置附件的转换格式
     IF (TRANSFER_ENC IS NOT NULL) THEN
       WRITE_DATA(CONN, \'Content-Transfer-Encoding\', TRANSFER_ENC);
     END IF;

     UTL_SMTP.WRITE_DATA(CONN, UTL_TCP.CRLF);

     --begin 贴附件内容
     IF TRANSFER_ENC = \'bit 7\' THEN
       --如果是文本类型的附件
       BEGIN
         L_FILE_HANDLE := UTL_FILE.FOPEN(DT_NAME, L_FILENAME, \'r\'); --打开文件
         --把附件分成多份，这样可以发送超过32K的附件
         LOOP
           UTL_FILE.GET_LINE(L_FILE_HANDLE, L_LINE);
           L_MESG := L_LINE || L_CRLF;
           WRITE_DATA(CONN, \'\', L_MESG, \'\', \'\');
         END LOOP;
         UTL_FILE.FCLOSE(L_FILE_HANDLE);
         <span id=\"TheWorldHiLightStyleID\" style=\"BACKGROUND: #ffff00; COLOR: #000000\">END_BOUNDARY</span>(CONN);
       EXCEPTION
         WHEN OTHERS THEN
           UTL_FILE.FCLOSE(L_FILE_HANDLE);
           <span id=\"TheWorldHiLightStyleID\" style=\"BACKGROUND: #ffff00; COLOR: #000000\">END_BOUNDARY</span>(CONN);
           NULL;
       END; --结束文本类型附件的处理

     ELSIF TRANSFER_ENC = \'base64\' THEN
       --如果是二进制类型的附件
       BEGIN
         --把附件分成多份，这样可以发送超过32K的附件
         L_FILEPOS   := 1;--重置offset，在发送多个附件时，必须重置
         L_FIL       := BFILENAME(DT_NAME, L_FILENAME);
         L_FILE_LEN := DBMS_LOB.GETLENGTH(L_FIL);
         L_MODULO    := MOD(L_FILE_LEN, L_AMT);
         L_PIECES    := TRUNC(L_FILE_LEN / L_AMT);
         IF (L_MODULO <> 0) THEN
           L_PIECES := L_PIECES + 1;
         END IF;
         DBMS_LOB.FILEOPEN(L_FIL, DBMS_LOB.FILE_READONLY);
         DBMS_LOB.READ(L_FIL, L_AMT, L_FILEPOS, L_BUF);
         L_DATA := NULL;
         FOR I IN 1 .. L_PIECES LOOP
           L_FILEPOS   := I * L_AMT + 1;
           L_FILE_LEN := L_FILE_LEN - L_AMT;
           L_DATA      := UTL_RAW.CONCAT(L_DATA, L_BUF);
           L_CHUNKS    := TRUNC(UTL_RAW.LENGTH(L_DATA) / L_MAX_LINE_WIDTH);
           IF (I <> L_PIECES) THEN
             L_CHUNKS := L_CHUNKS - 1;
           END IF;
           UTL_SMTP.WRITE_RAW_DATA(CONN, UTL_ENCODE.BASE64_ENCODE(L_DATA));
           L_DATA := NULL;
           IF (L_FILE_LEN < L_AMT AND L_FILE_LEN > 0) THEN
             L_AMT := L_FILE_LEN;
           END IF;
           DBMS_LOB.READ(L_FIL, L_AMT, L_FILEPOS, L_BUF);
         END LOOP;
         DBMS_LOB.FILECLOSE(L_FIL);
         <span id=\"TheWorldHiLightStyleID\" style=\"BACKGROUND: #ffff00; COLOR: #000000\">END_BOUNDARY</span>(CONN);
       EXCEPTION
         WHEN OTHERS THEN
           DBMS_LOB.FILECLOSE(L_FIL);
           <span id=\"TheWorldHiLightStyleID\" style=\"BACKGROUND: #ffff00; COLOR: #000000\">END_BOUNDARY</span>(CONN);
           RAISE;
       END; --结束处理二进制附件

     END IF; --结束处理附件内容
     DROP_DIRECTORY(DT_NAME);
   END; --结束过程ATTACHMENT
   ---------------------------------------------真正发送邮件的过程--------------------------------------------
   PROCEDURE P_EMAIL(P_SENDORADDRESS2    VARCHAR2, --发送地址
                     P_RECEIVERADDRESS2 VARCHAR2) --接受地址
    IS
     L_CONN UTL_SMTP.CONNECTION; --定义连接
   BEGIN
     /*初始化邮件服务器信息，连接邮件服务器*/
     L_CONN := UTL_SMTP.OPEN_CONNECTION(P_SERVER, P_PORT);
     UTL_SMTP.HELO(L_CONN, P_SERVER);
     /* smtp服务器登录校验 */
     IF P_NEED_SMTP = 1 THEN
       UTL_SMTP.COMMAND(L_CONN, \'AUTH LOGIN\', \'\');
       UTL_SMTP.COMMAND(L_CONN, UTL_RAW.CAST_TO_VARCHAR2(UTL_ENCODE.BASE64_ENCODE(UTL_RAW.CAST_TO_RAW(P_USER))));
       UTL_SMTP.COMMAND(L_CONN, UTL_RAW.CAST_TO_VARCHAR2(UTL_ENCODE.BASE64_ENCODE(UTL_RAW.CAST_TO_RAW(P_PASS))));
     END IF;

     /*设置发送地址和接收地址*/
     UTL_SMTP.MAIL(L_CONN, P_SENDORADDRESS2);
     UTL_SMTP.RCPT(L_CONN, P_RECEIVERADDRESS2);

     /*设置邮件头*/
     UTL_SMTP.OPEN_DATA(L_CONN);

     WRITE_DATA(L_CONN, \'Date\', TO_CHAR(SYSDATE, \'yyyy-mm-dd hh24:mi:ss\'));
     /*设置发送人*/
     WRITE_DATA(L_CONN, \'From\', P_SENDOR);
     /*设置接收人*/
     WRITE_DATA(L_CONN, \'To\', P_RECEIVER);
     /*设置邮件主题*/
     WRITE_DATA(L_CONN, \'Subject\', P_SUB);

     WRITE_DATA(L_CONN, \'Content-Type\', MULTIPART_MIME_TYPE);
     UTL_SMTP.WRITE_DATA(L_CONN, UTL_TCP.CRLF);
     UTL_SMTP.WRITE_DATA(L_CONN, FIRST_BOUNDARY);
     WRITE_DATA(L_CONN, \'Content-Type\', \'text/plain;charset=gb2312\');
     --单独空一行，否则，正文内容不显示
     UTL_SMTP.WRITE_DATA(L_CONN, UTL_TCP.CRLF);
     /* 设置邮件正文
       把分隔符还原成chr(10)。这主要是为了shell中调用该过程，如果有多行，则先把多行的内容合并成一行，</pre></div>

<div class=\"codebody\"><pre>
并用 l_splite分隔  然后用 l_crlf替换chr(10)。这一步是必须的，否则将不能发送邮件正文有多行的邮件

     */
     WRITE_DATA(L_CONN, \'\', REPLACE(REPLACE(P_TXT, L_SPLITE, CHR(10)), CHR(10), L_CRLF), \'\', \'\');
     <span id=\"TheWorldHiLightStyleID\" style=\"BACKGROUND: #ffff00; COLOR: #000000\">END_BOUNDARY</span>(L_CONN);

   --如果文件名称不为空，则发送附件
     IF (P_FILENAME IS NOT NULL) THEN
       --根据逗号或者分号拆分附件地址
       P_SPLITE_STR(P_FILENAME, 2);
       --循环发送附件(在同一个邮件中)
       FOR K IN 1 .. MY_ACCT_LIST.COUNT LOOP
         ATTACHMENT(CONN => L_CONN, FILENAME => MY_ACCT_LIST(K), TRANSFER_ENC => </pre></div>

<div class=\"codebody\"><pre>
P_ENCODE, DT_NAME => L_DIRECTORY_BASE_NAME ||
                                TO_CHAR(K));
       END LOOP;
     END IF;

     /*关闭数据写入*/
     UTL_SMTP.CLOSE_DATA(L_CONN);
     /*关闭连接*/
     UTL_SMTP.QUIT(L_CONN);

     /*异常处理*/
   EXCEPTION
     WHEN OTHERS THEN
       NULL;
       RAISE;

   END;
   ---------------------------------------------------主过程-----------------------------------------------------
BEGIN
   L_SENDORADDRESS := \'<\' || P_SENDOR || \'>\';
   P_SPLITE_STR(P_RECEIVER);--处理邮件地址
   FOR K IN 1 .. MY_ADDRESS_LIST.COUNT LOOP
     P_EMAIL(L_SENDORADDRESS, MY_ADDRESS_LIST(K));
   END LOOP;
   /*处理邮件地址，根据逗号分割邮件*/
EXCEPTION
   WHEN OTHERS THEN
     RAISE;
END;
</pre></div>

<div class=\"codebody\"><pre>

 </pre></div>

<div class=\"codebody\"><pre>
<span style=\"COLOR: #0000bb; FONT-FAMILY: Verdana\">使用实例：</span></pre></div>

<blockquote> 
<div class=\"codebody\"><pre>
<span style=\"FONT-SIZE: xx-small; FONT-FAMILY: Verdana\">代码:</span></pre></div>

<div class=\"codebody\"><pre>

 </pre></div>

<hr>
<br><br><br><span style=\"FONT-SIZE: xx-small\"><code><span style=\"COLOR: #000000\"><span style=\"COLOR: #0000bb\">SQL</span><span style=\"COLOR: #007700\">></span><span style=\"COLOR: #0000bb\">set serverout on<br><br><br>
SQL</span><span style=\"COLOR: #007700\">> </span><span style=\"COLOR: #0000bb\">exec PROCSENDEMAIL</span><span style=\"COLOR: #007700\">(</span><span style=\"COLOR: #dd0000\">\'中文测试邮件\'</span><span style=\"COLOR: #007700\">,</span><span style=\"COLOR: #dd0000\">\'中文主题\'</span><span style=\"COLOR: #007700\">,</span><span style=\"COLOR: #dd0000\">\'space6212@163.com\'</span><span style=\"COLOR: #007700\">,</span><span style=\"COLOR: #dd0000\">\'space6212@163.com</span></span></code></span>

<div class=\"codebody\"><pre>
<code><span style=\"COLOR: #000000\"><span style=\"COLOR: #dd0000\">,susk@souchang.com\'</span><span style=\"COLOR: #007700\">,</span><span style=\"COLOR: #dd0000\">\'202.108.5.85\'</span><span style=\"COLOR: #007700\">,</span><span style=\"COLOR: #0000bb\">25</span><span style=\"COLOR: #007700\">,</span><span style=\"COLOR: #0000bb\">1</span><span style=\"COLOR: #007700\">,</span><span style=\"COLOR: #dd0000\">\'xxxx\'</span><span style=\"COLOR: #007700\">,</span><span style=\"COLOR: #dd0000\">\'xxxx\'</span><span style=\"COLOR: #007700\">,</span><span style=\"COLOR: #dd0000\">\'/tmp/a.jpg,/tmp/b.jpg\'</span><span style=\"COLOR: #007700\">,</span><span style=\"COLOR: #dd0000\">\'base64\'</span><span style=\"COLOR: #007700\">);


</span><span style=\"COLOR: #0000bb\">PL</span><span style=\"COLOR: #007700\">/</span><span style=\"COLOR: #0000bb\">SQL procedure successfully completed</span><span style=\"COLOR: #007700\">.</span></span></code>
</pre></div>
</blockquote>

<p><code><span style=\"COLOR: #000000\"><span style=\"COLOR: #007700\">上文就是关于oracle如何实现发送邮件的内容，作为新手了解如何发送邮件是必需的能力，但可以不断通过学习，并结合自己的工作经验来进行提升。</span></span></code></p>
						</div>
					',`creator`='admin',`created_at`='2019-12-11 21:46:03',`updated_at`='2019-12-11 21:46:03',`click`='1' WHERE `id` = 3 [ RunTime:0.0011s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000027s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000050s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.009327s ]
INFO: [ view_parse ] --END-- [ RunTime:0.009353s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000562s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000584s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000742s ]
INFO: [ app_end ] --END-- [ RunTime:0.000760s ]

[ 2019-12-12T10:48:54+08:00 ] ::1 /Home/Index/ShowDetail?id=3
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000034s ]
INFO: [ app_init ] --END-- [ RunTime:0.000746s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000795s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000819s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0010s ]
SQL: SELECT * FROM `articles` WHERE `id` = 3 LIMIT 1   [ RunTime:0.0005s ]

[ 2019-12-12T10:51:00+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000006s ]
INFO: [ app_init ] --END-- [ RunTime:0.000636s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000707s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000728s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000017s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000036s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.009888s ]
INFO: [ view_parse ] --END-- [ RunTime:0.009915s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000675s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000692s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000810s ]
INFO: [ app_end ] --END-- [ RunTime:0.000827s ]

[ 2019-12-12T10:51:06+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000028s ]
INFO: [ app_init ] --END-- [ RunTime:0.000927s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000506s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000526s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000016s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000033s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.006866s ]
INFO: [ view_parse ] --END-- [ RunTime:0.006890s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000447s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000462s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000568s ]
INFO: [ app_end ] --END-- [ RunTime:0.000583s ]

[ 2019-12-12T10:51:32+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000004s ]
INFO: [ app_init ] --END-- [ RunTime:0.000436s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000529s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000545s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000016s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000036s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.008530s ]
INFO: [ view_parse ] --END-- [ RunTime:0.008548s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000400s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000412s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000606s ]
INFO: [ app_end ] --END-- [ RunTime:0.000619s ]

[ 2019-12-12T10:51:32+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000537s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000680s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000699s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0010s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0011s ]

[ 2019-12-12T10:52:00+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000006s ]
INFO: [ app_init ] --END-- [ RunTime:0.000487s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000525s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000553s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000031s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000064s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.007535s ]
INFO: [ view_parse ] --END-- [ RunTime:0.007559s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000409s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000423s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000557s ]
INFO: [ app_end ] --END-- [ RunTime:0.000571s ]

[ 2019-12-12T10:52:04+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000004s ]
INFO: [ app_init ] --END-- [ RunTime:0.000482s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000478s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000490s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000015s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000045s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.009479s ]
INFO: [ view_parse ] --END-- [ RunTime:0.009500s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000514s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000539s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000657s ]
INFO: [ app_end ] --END-- [ RunTime:0.000669s ]

[ 2019-12-12T10:52:05+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000003s ]
INFO: [ app_init ] --END-- [ RunTime:0.000383s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000454s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000467s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000014s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000028s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.008390s ]
INFO: [ view_parse ] --END-- [ RunTime:0.008410s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000446s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000457s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000501s ]
INFO: [ app_end ] --END-- [ RunTime:0.000514s ]

[ 2019-12-12T10:52:05+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000003s ]
INFO: [ app_init ] --END-- [ RunTime:0.000429s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000464s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000478s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000013s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000025s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.008015s ]
INFO: [ view_parse ] --END-- [ RunTime:0.008035s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000390s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000402s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000525s ]
INFO: [ app_end ] --END-- [ RunTime:0.000537s ]

[ 2019-12-12T10:52:05+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000004s ]
INFO: [ app_init ] --END-- [ RunTime:0.000358s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000409s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000422s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000015s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000031s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.007602s ]
INFO: [ view_parse ] --END-- [ RunTime:0.007623s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000409s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000421s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000686s ]
INFO: [ app_end ] --END-- [ RunTime:0.000707s ]

[ 2019-12-12T10:57:56+08:00 ] 192.168.3.35 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000567s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000633s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000648s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000018s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000034s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.009182s ]
INFO: [ view_parse ] --END-- [ RunTime:0.009204s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000569s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000581s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000712s ]
INFO: [ app_end ] --END-- [ RunTime:0.000723s ]

[ 2019-12-12T10:58:04+08:00 ] 192.168.3.35 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000004s ]
INFO: [ app_init ] --END-- [ RunTime:0.000464s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000482s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000495s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000016s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000031s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.007963s ]
INFO: [ view_parse ] --END-- [ RunTime:0.007987s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000427s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000440s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000547s ]
INFO: [ app_end ] --END-- [ RunTime:0.000559s ]

[ 2019-12-12T11:04:40+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000643s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000691s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000708s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000020s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000037s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.010371s ]
INFO: [ view_parse ] --END-- [ RunTime:0.010396s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000664s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000679s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000838s ]
INFO: [ app_end ] --END-- [ RunTime:0.000853s ]

[ 2019-12-12T11:06:01+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000476s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000579s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000598s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000019s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000038s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.009989s ]
INFO: [ view_parse ] --END-- [ RunTime:0.010018s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000464s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000482s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000677s ]
INFO: [ app_end ] --END-- [ RunTime:0.000695s ]

[ 2019-12-12T11:06:50+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000006s ]
INFO: [ app_init ] --END-- [ RunTime:0.000684s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000767s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000794s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000019s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000037s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.010460s ]
INFO: [ view_parse ] --END-- [ RunTime:0.010486s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000700s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000717s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000999s ]
INFO: [ app_end ] --END-- [ RunTime:0.001018s ]

[ 2019-12-12T11:06:50+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000010s ]
INFO: [ app_init ] --END-- [ RunTime:0.000768s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000864s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000891s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0011s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0012s ]

[ 2019-12-12T11:07:23+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000006s ]
INFO: [ app_init ] --END-- [ RunTime:0.000632s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000664s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000687s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000019s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000042s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.009293s ]
INFO: [ view_parse ] --END-- [ RunTime:0.009324s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000559s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000576s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000711s ]
INFO: [ app_end ] --END-- [ RunTime:0.000728s ]

[ 2019-12-12T11:07:25+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.000768s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000993s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001041s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000033s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000081s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.015241s ]
INFO: [ view_parse ] --END-- [ RunTime:0.015287s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000727s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000751s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001061s ]
INFO: [ app_end ] --END-- [ RunTime:0.001087s ]

[ 2019-12-12T11:07:25+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000009s ]
INFO: [ app_init ] --END-- [ RunTime:0.000767s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000884s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000913s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000062s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000163s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.012680s ]
INFO: [ view_parse ] --END-- [ RunTime:0.012758s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000692s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000713s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000867s ]
INFO: [ app_end ] --END-- [ RunTime:0.000888s ]

[ 2019-12-12T11:09:34+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000014s ]
INFO: [ app_init ] --END-- [ RunTime:0.001516s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001557s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001628s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000030s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000065s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.017365s ]
INFO: [ view_parse ] --END-- [ RunTime:0.017405s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000997s ]
INFO: [ view_filter ] --END-- [ RunTime:0.001022s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001371s ]
INFO: [ app_end ] --END-- [ RunTime:0.001404s ]

[ 2019-12-12T11:11:23+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000006s ]
INFO: [ app_init ] --END-- [ RunTime:0.000537s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000605s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000624s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000020s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000038s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.011124s ]
INFO: [ view_parse ] --END-- [ RunTime:0.011154s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000586s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000604s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000767s ]
INFO: [ app_end ] --END-- [ RunTime:0.000786s ]

[ 2019-12-12T11:11:23+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000049s ]
INFO: [ app_init ] --END-- [ RunTime:0.001906s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.002193s ]
INFO: [ app_begin ] --END-- [ RunTime:0.002346s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0014s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0019s ]

[ 2019-12-12T11:11:40+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.001112s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001205s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001240s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000023s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000051s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.014912s ]
INFO: [ view_parse ] --END-- [ RunTime:0.014950s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000966s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000989s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001158s ]
INFO: [ app_end ] --END-- [ RunTime:0.001188s ]

[ 2019-12-12T11:12:42+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000760s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000808s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000837s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000027s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000069s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.012308s ]
INFO: [ view_parse ] --END-- [ RunTime:0.012356s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000823s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000855s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001376s ]
INFO: [ app_end ] --END-- [ RunTime:0.001418s ]

[ 2019-12-12T11:12:42+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000010s ]
INFO: [ app_init ] --END-- [ RunTime:0.001318s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001659s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001742s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0014s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0017s ]

[ 2019-12-12T11:13:08+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000553s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000676s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000697s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000019s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000038s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.010527s ]
INFO: [ view_parse ] --END-- [ RunTime:0.010556s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000546s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000563s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000741s ]
INFO: [ app_end ] --END-- [ RunTime:0.000758s ]

[ 2019-12-12T11:13:08+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000012s ]
INFO: [ app_init ] --END-- [ RunTime:0.001033s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001482s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001536s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0024s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0016s ]

[ 2019-12-12T11:17:09+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000006s ]
INFO: [ app_init ] --END-- [ RunTime:0.000756s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000884s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000908s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000024s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000047s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.013161s ]
INFO: [ view_parse ] --END-- [ RunTime:0.013193s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000831s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000852s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.002365s ]
INFO: [ app_end ] --END-- [ RunTime:0.002478s ]

[ 2019-12-12T11:17:23+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000004s ]
INFO: [ app_init ] --END-- [ RunTime:0.000495s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000614s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000633s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000021s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000040s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.010809s ]
INFO: [ view_parse ] --END-- [ RunTime:0.010840s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000586s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000605s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000786s ]
INFO: [ app_end ] --END-- [ RunTime:0.000806s ]

[ 2019-12-12T11:17:23+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000010s ]
INFO: [ app_init ] --END-- [ RunTime:0.001114s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001114s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001146s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0013s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0017s ]

[ 2019-12-12T11:17:26+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000004s ]
INFO: [ app_init ] --END-- [ RunTime:0.000464s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000549s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000564s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0010s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0012s ]

[ 2019-12-12T11:18:13+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000006s ]
INFO: [ app_init ] --END-- [ RunTime:0.001212s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000628s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000647s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000021s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000041s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.010507s ]
INFO: [ view_parse ] --END-- [ RunTime:0.010538s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.001076s ]
INFO: [ view_filter ] --END-- [ RunTime:0.001124s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001660s ]
INFO: [ app_end ] --END-- [ RunTime:0.001702s ]

[ 2019-12-12T11:18:13+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000011s ]
INFO: [ app_init ] --END-- [ RunTime:0.001044s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001244s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001292s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0012s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0016s ]

[ 2019-12-12T11:18:25+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000503s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000632s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000650s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000021s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000040s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.011680s ]
INFO: [ view_parse ] --END-- [ RunTime:0.011710s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000563s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000579s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000730s ]
INFO: [ app_end ] --END-- [ RunTime:0.000748s ]

[ 2019-12-12T11:18:25+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000009s ]
INFO: [ app_init ] --END-- [ RunTime:0.000909s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.002089s ]
INFO: [ app_begin ] --END-- [ RunTime:0.002131s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0012s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0015s ]

[ 2019-12-12T11:19:36+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000006s ]
INFO: [ app_init ] --END-- [ RunTime:0.000794s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000864s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000889s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000023s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000044s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.015319s ]
INFO: [ view_parse ] --END-- [ RunTime:0.015351s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000863s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000883s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001051s ]
INFO: [ app_end ] --END-- [ RunTime:0.001071s ]

[ 2019-12-12T11:19:36+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000750s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001258s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001294s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0035s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0021s ]

[ 2019-12-12T11:21:09+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000461s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000538s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000558s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000021s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000039s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.011424s ]
INFO: [ view_parse ] --END-- [ RunTime:0.011532s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000806s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000827s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000687s ]
INFO: [ app_end ] --END-- [ RunTime:0.000704s ]

[ 2019-12-12T11:21:09+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000009s ]
INFO: [ app_init ] --END-- [ RunTime:0.000857s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000989s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001021s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0015s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0017s ]

[ 2019-12-12T11:21:58+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000730s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000819s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000841s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000022s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000045s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.012929s ]
INFO: [ view_parse ] --END-- [ RunTime:0.012959s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000789s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000808s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001992s ]
INFO: [ app_end ] --END-- [ RunTime:0.002073s ]

[ 2019-12-12T11:21:58+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000013s ]
INFO: [ app_init ] --END-- [ RunTime:0.000935s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001236s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001277s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0013s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0016s ]

[ 2019-12-12T11:22:00+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000004s ]
INFO: [ app_init ] --END-- [ RunTime:0.000472s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000545s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000559s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0009s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0011s ]

[ 2019-12-12T11:22:23+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000010s ]
INFO: [ app_init ] --END-- [ RunTime:0.000872s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001299s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001346s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000028s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000062s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.016259s ]
INFO: [ view_parse ] --END-- [ RunTime:0.016302s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000887s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000919s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001204s ]
INFO: [ app_end ] --END-- [ RunTime:0.001237s ]

[ 2019-12-12T11:22:23+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000024s ]
INFO: [ app_init ] --END-- [ RunTime:0.001128s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000983s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001012s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0012s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0022s ]

[ 2019-12-12T11:22:34+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.001193s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000686s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000705s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000020s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000041s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.011966s ]
INFO: [ view_parse ] --END-- [ RunTime:0.011996s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000631s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000650s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000831s ]
INFO: [ app_end ] --END-- [ RunTime:0.000852s ]

[ 2019-12-12T11:22:34+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000009s ]
INFO: [ app_init ] --END-- [ RunTime:0.000906s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001119s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001154s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0013s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0026s ]

[ 2019-12-12T11:22:39+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000583s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000671s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000692s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0010s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0012s ]

[ 2019-12-12T11:22:41+08:00 ] ::1 /Home/Index/detail?id=11
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.000841s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001534s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001600s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0011s ]
SQL: SELECT * FROM `articles` WHERE `id` = 11 LIMIT 1   [ RunTime:0.0005s ]
SQL: UPDATE `articles` SET `origin_url`='https://js.aizhan.com/data/oracle/10558.html',`title`='oracle如何使用nvl函数',`text`='<div class=\"container\">
							
<p>关于nvl<a href=\"https://js.aizhan.com/tags/hanshu.html\" target=\"_blank\"><span style=\"color:#002FD9\"><a href=\"https://js.aizhan.com/tags/hanshu.html\" target=\"_blank\"><span style=\"color:#002FD9\">函数</span></a></span></a>的了解你知道多少呢？在oracle中难免会需要使用到nvl函数，那么你知道oracle如何使用nvl函数吗？今天小编就将为大家解答oracle如何使用nvl函数这个问题，大家可以参考一下。</p>

<p><a href=\"https://js.aizhan.com/tags/oracle.html\" target=\"_blank\"><span style=\"color:#002FD9\"><a href=\"https://js.aizhan.com/tags/oracle.html\" target=\"_blank\"><span style=\"color:#002FD9\">Oracle</span></a></span></a>的Nvl函数</p>

<p>nvl( ) 函数</p>

<p>从两个表达式返回一个非null 值。</p>

<p>语法</p>

<p>NVL(eExpression1, eExpression2)<br><br>
参数</p>

<p>eExpression1, eExpression2</p>

<p>如 果 eExpression1 的计算结果为 null 值，则 NVL( ) 返回 eExpression2。如果 eExpression1 的计算结果不是 null 值，则返回 eExpression1。eExpression1 和 eExpression2 可以是任意一种数据类型。如果 eExpression1 与 eExpression2 的结果皆为 null 值，则 NVL( ) 返回 .NULL.。</p>

<p>返回值类型</p>

<p>字符型、日期型、日期时间型、数值型、货币型、逻辑型或 null 值</p>

<p>说明</p>

<p>在不支持 null 值或 null 值无关紧要的情况下，可以使用 NVL( ) 来移去计算或操作中的 null 值。</p>

<p>select nvl(a.name,\'空得\') as name from student a joinschool b on a.ID=b.ID</p>

<p>注意：两个参数得类型要匹配</p>

<p>问：什么是NULL？</p>

<p>答：在我们不知道具体有什么数据的时候，也即未知，可以用NULL，</p>

<p>我们称它为空，ORACLE中，含有空值的表列长度为零。</p>

<p>ORACLE允许任何一种数据类型的字段为空，除了以下两种情况：</p>

<p>1、主键字段（primary key），</p>

<p>2、定义时已经加了NOT NULL限制条件的字段</p>

<p>说明：</p>

<p>1、等价于没有任何值、是未知数。</p>

<p>2、NULL与0、空字符串、空格都不同。</p>

<p>3、对空值做加、减、乘、除等运算操作，结果仍为空。</p>

<p>4、NULL的处理使用NVL函数。</p>

<p>5、比较时使用关键字用“is null”和“is not null”。</p>

<p>6、空值不能被索引，所以查询时有些符合条件的数据可能查不出来，</p>

<p>count(*)中，用nvl(列名,0)处理后再查。</p>

<p>7、排序时比其他数据都大（索引默认是降序排列，小→大），</p>

<p>所以NULL值总是排在最后。</p>

<p>以上就是关于oracle如何使用nvl函数的内容，在上文中，小编为大家做了简单的介绍。其实，在日常的操作oracle过程中是经常使可以使用的。</p>
						</div>
					',`creator`='admin',`created_at`='2019-12-12 10:47:00',`updated_at`='2019-12-12 10:47:00',`click`='2' WHERE `id` = 11 [ RunTime:0.0007s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000034s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000066s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.013231s ]
INFO: [ view_parse ] --END-- [ RunTime:0.013268s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000697s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000721s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000971s ]
INFO: [ app_end ] --END-- [ RunTime:0.000994s ]

[ 2019-12-12T11:22:41+08:00 ] ::1 /Home/Index/ShowDetail?id=11
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000727s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000840s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000864s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0012s ]
SQL: SELECT * FROM `articles` WHERE `id` = 11 LIMIT 1   [ RunTime:0.0005s ]

[ 2019-12-12T11:22:55+08:00 ] ::1 /Home/Index/detail?id=7
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000009s ]
INFO: [ app_init ] --END-- [ RunTime:0.000813s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000930s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000961s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0012s ]
SQL: SELECT * FROM `articles` WHERE `id` = 7 LIMIT 1   [ RunTime:0.0006s ]
SQL: UPDATE `articles` SET `origin_url`='https://js.aizhan.com/data/oracle/10561.html',`title`='Excel怎么导入oracle',`text`='<div class=\"container\">
							
<p>在oracle中我们经常会需要导入一些文件或者数据，最近小编遇到一个问题，那么就是将<a href=\"https://js.aizhan.com/tags/excel.html\" target=\"_blank\"><span style=\"color:#002FD9\">Excel</span></a>导入oracle中，那么你知道Excel怎么导入oracle吗？下面就让小编为大家详细介绍吧。</p>

<p><strong><font style=\"COLOR: #ff0000\">方法一、使用SQL*Loader</font></strong><br>
这个是用的较多的方法，前提必须oracle数据中目的表已经存在。大体步骤如下：<br>
1、将excel文件另存为一个新文件比如文件名为text.txt，文件类型选文本文件（制表符分隔），这里选择类型为csv（逗号分隔）也行，但是在写后面的control.ctl时要将字段终止符改为\',\'(fields terminated by \',\'），假设保存到c盘根目录。<br><br>
2 、如果没有存在的表结构，则创建,假设表为test，有两列为dm，ms。<br><br>
3、用记事本创建SQL*Loader控制文件，网上说的文件名后缀为ctl，其实我自己发现就用txt后缀也行。比如命名为control.ctl，内容如下：(--后面的为注释，实际不需要）<br>
　　load data                   --控制文件标识<br>
　　infile \'c:\\text.txt\'        --要输入的数据文件名为test.txt<br>
　　append into table test      --向表test中追加记录<br>
　　fields terminated by X\'09\'  --字段终止于X\'09\'，是一个制表符（TAB）<br>
　　(dm,ms)                     --定义列对应顺序<br><br><strong>备注：数据导入的方式上例中用的append，有以下几种：</strong><font style=\"COLOR: #0000ff\">insert，为缺省方式，在数据装载开始时要求表为空；append，在表中追加新记录；replace，删除旧记录，替换成新装载的记录；truncate，同replace。</font><br><br>
4、在命令行提示符下使用SQL*Loader命令实现数据的输入。<br>
sqlldr userid=system/manager control=\'c:\\control.ctl\'</p>

<p><strong><font style=\"COLOR: #0000ff\">我来举个例子</font><br>
1.导出地区表的test.csv文件</strong><br>
\"01\",\"市区\"<br>
\"02\",\"柯桥\"<br>
\"03\",\"钱清\"<br>
\"04\",\"皋埠\"<br>
\"05\",\"漓渚\"<br>
\"06\",\"齐贤\"<br>
\"08\",\"袍江\"<br>
\"09\",\"平水\"<br>
\"12\",\"东浦\"<br>
....<br><strong>2.编辑sqlldr导出控制文件test.ctl内容如下：</strong><br>
load data<br>
infile \'e:\\test.csv\'<br>
replace into table test<br>
fields terminated by \',\' optionally enclosed by \'\"\'<br>
trailing nullcols<br>
(id,name)<br><strong>3.在cmd中执行:</strong><br>
E:\\>sqlldr userid=xxx/yyy@dbxx control=e:\\test.ctl log=e:\\log.txt bad=e:\\bad.txt<br>
SQL*Loader: Release 8.1.7.0.0 - Production on 星期三 7月 20 21:28:06 2005<br>
(c) Copyright 2000 <a href=\"https://js.aizhan.com/tags/oracle.html\" target=\"_blank\"><span style=\"color:#002FD9\">Oracle</span></a> Corporation.  All rights reserved.<br>
达到提交点，逻辑记录计数48</p>

<p><strong><font style=\"COLOR: #ff0000\">方法二、利用PLSQL Developer</font></strong><br>
使用PLSQL Developer工具，这个可是大名鼎鼎的Oracle DBA最常使用的工具。<br>
在单个文件不大的情况下(少于100000行)，并且目的表结构已经存在的情况下——对于excel而言肯定不会超过了，因为excel文件的最大行为65536—— 可以全选数据COPY ,然后用PLSQL Developer工具。<br>
  1 在PLSQL Developer的sql window里输入select * from test for update;<br>
  2 按F8执行<br>
  3 打开锁, 再按一下加号. 鼠标点到第一列的列头，使全列成选中状态，然后粘贴，最后COMMIT提交即可。<br>
还有很多第三方工具，Toad，PL/SQL Developer，SQL Navigator等等。</p>

<p><strong><font style=\"COLOR: #ff0000\">方法三 、使用其它数据转移工具作中转站。</font></strong><br>
我使用的是Sql Server 2000。<br>
先将excel表导入sqlserver数据库中，然后再从Sql server导入到oracle中。这两部操作都简单，如果不会随便查个帮助就可以了。<br><br><font style=\"COLOR: #ff0000\"><strong>这里有两个自己的经验：</strong></font><br><strong>一、是注意excel文件的版本和格式要与导入到sql server时的数据源匹配。</strong>如果导入到sql server时的数据源选Microsoft Excel 97-2000的话，而excel文件的版本为Micaosoft Excel 5.0/95 工作簿，则有可能出问题。关于如何看Excle文件格式，你打开excel文件，选择另存为，即可看到像Micaosoft Excel 5.0/95 工作簿或者是Microsoft Office Excle 工作簿等等其它的保存类型。<br><br><strong>二、就是由Sqlserver导入到oracle中时，记得将在oracle中的表名全部用大写。</strong>因为oracle的表名都是大写的，而sql的表可能是大小混写的，所以导入后在oracle里查不到该表，比如这个Products表在oracle里查询就应该写成select * from scott.\"Products\";</p>

<p>上文中小编对Excel怎么导入oracle的内容进行了详细介绍，爱站技术频道小编将会为大家整理更多oracle的知识，想要无时无刻都学习到这方面知识，就多多关注爱站技术频道的动态吧！</p>
						</div>
					',`creator`='admin',`created_at`='2019-12-11 21:46:07',`updated_at`='2019-12-11 21:46:07',`click`='1' WHERE `id` = 7 [ RunTime:0.0009s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000026s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000050s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.012153s ]
INFO: [ view_parse ] --END-- [ RunTime:0.012196s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000729s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000755s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000948s ]
INFO: [ app_end ] --END-- [ RunTime:0.000972s ]

[ 2019-12-12T11:22:55+08:00 ] ::1 /Home/Index/ShowDetail?id=7
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000732s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000874s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000897s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0011s ]
SQL: SELECT * FROM `articles` WHERE `id` = 7 LIMIT 1   [ RunTime:0.0005s ]

[ 2019-12-12T11:23:00+08:00 ] ::1 /Home/Index/detail?id=5
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000010s ]
INFO: [ app_init ] --END-- [ RunTime:0.001043s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001247s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001293s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0014s ]
SQL: SELECT * FROM `articles` WHERE `id` = 5 LIMIT 1   [ RunTime:0.0007s ]
SQL: UPDATE `articles` SET `origin_url`='https://js.aizhan.com/data/oracle/10598.html',`title`='设计大型Oracle数据库的方法',`text`='<div class=\"container\">
							
<p>　　<a href=\"https://js.aizhan.com/tags/oracle.html\" target=\"_blank\"><span style=\"color:#002FD9\"><a href=\"https://js.aizhan.com/tags/oracle.html\" target=\"_blank\"><span style=\"color:#002FD9\">Oracle</span></a></span></a><a href=\"https://js.aizhan.com/tags/shujuku.html\" target=\"_blank\"><span style=\"color:#002FD9\"><a href=\"https://js.aizhan.com/tags/shujuku.html\" target=\"_blank\"><span style=\"color:#002FD9\">数据库</span></a></span></a>可以为我们存储很多数重要数据，但是有时候数据过多的时候就会空间不足，那么你知道如何设计大型oracle数据吗?如果你还不知道的话就跟小编一起去看看设计大型Oracle数据库的方法。</p>

<p>　　<strong>一、概论</strong>　　超大型系统的特点为：</p>

<p>　　1、处理的用户数一般都超过百万，有的还超过千万，数据库的数据量一般超过1TB;</p>

<p>　　2、系统必须提供实时响应功能，系统需不停机运行，要求系统有很高的可用性及可扩展性。</p>

<p>　　为了能达到以上要求，除了需要性能优越的计算机和海量存储设备外，还需要先进的数据库结构设计和优化的应用系统。</p>

<p>　　一般的超大型系统采用双机或多机集群系统。下面以数据库采用Oracle 8.0.6并行服务器为例来谈谈超大型数据库设计方法：</p>

<p>　　确定系统的ORACLE并行服务器应用划分策略</p>

<p>　　数据库物理结构的设计</p>

<p>　　系统硬盘的划分及分配</p>

<p>　　备份及恢复策略的考虑</p>

<p>　　<strong>二、Oracle并行服务器应用划分策略</strong></p>

<p>　　Oracle并行服务器允许不同节点上的多个INSTANCE实例同时访问一个数据库，以提高系统的可用性、可扩展性及性能。Oracle并行服务器中的每个INSTANCE实例都可将共享数据库中的表或索引的数据块读入本地的缓冲区中，这就意味着一个数据块可存在于多个INSTANCE实例的SGA区中。那么保持这些缓冲区的数据的一致性就很重要。Oracle使用 PCM( Parallel Cache Management)锁维护缓冲区的一致性，Oracle同时通过I DLM(集成的分布式锁管理器)实现PCM 锁,并通过专门的LCK进程实现INSTANCE实例间的数据一致。</p>

<p>　　考虑这种情况：INSTANCE1对BLOCK X块修改，这时INSTANCE2对BLOCK X块也需要修改。Oracle并行服务器利用PCM锁机制，使BLOCK X从INSTANCE 1的SGA区写入数据库数据文件中，又从数据文件中把BLOCK X块读入INSTANCE2的SGA区中。发生这种情况即为一个PING。PING使原来1个MEMORY IO可以完成的工作变成2个DISK IO和1个 MEMORY IO才能够完成,如果系统中有过多的PING，将大大降低系统的性能。</p>

<p>　　Oracle并行服务器中的每个PCM锁可管理多个数据块。PCM锁管理的数据块的个数与分配给一个数据文件的PCM锁的个数及该数据文件的大小有关。当INSTANCE 1和INSTANCE 2要操作不同的BLOCK，如果这些BLOCK 是由同一个PCM锁管理的,仍然会发生PING。这些PING称为FALSE PING。当多个INSTANCE访问相同的BLOCK而产生的PING是TRUE PING。</p>

<p>　　合理的应用划分使不同的应用访问不同的数据，可避免或减少TRUE PING;通过给FALSE PING较多的数据文件分配更多的PCM锁可减少 FALSE PING的次数，增加PCM锁不能减少TRUE PING。</p>

<p>　　所以，Oracle并行服务器设计的目的是使系统交易处理合理的分布在INSTANCE实例间，以最小化PING，同时合理的分配PCM锁，减少FALSE PING。设计的关键是找出可能产生的冲突，从而决定应用划分的策略。应用划分有如下四种方法：</p>

<p>　　1、根据功能模块划分，不同的节点运行不同的应用</p>

<p>　　2、根据用户划分，不同类型的用户运行在不同的节点上</p>

<p>　　3、根据数据划分，不同的节点访问不同的数据或索引</p>

<p>　　4、根据时间划分，不同的应用在不同的时间段运行</p>

<p>　　应用划分的两个重要原则是使PING最小化及使各节点的负载大致均衡。</p>

<p>　　<strong>三、数据库物理结构的设计</strong></p>

<p>　　数据库物理结构设计包括确定表及索引的物理存储参数，确定及分配数据库表空间，确定初始的回滚段，临时表空间，redo log files等，并确定主要的初始化参数。物理设计的目的是提高系统的性能。整个物理设计的参数可以根据实际运行情况作调整。</p>

<p>　　表及索引数据量估算及物理存储参数的设置</p>

<p>　　表及索引的存储容量估算是根据其记录长度及估算的最大记录数确定的。在容量计算中考虑了数据块的头开销及记录和字段的头开销等等。表及索引的initial和next存储参数一般设为相等，pctincrease设为0。</p>

<p>　　上文就是小编为大家介绍设计大型Oracle数据库的方法，如果你也有这样的需要，那就赶快来学习一下吧。如果大家喜欢爱站技术频道的话，不妨可以推荐更多的朋友来哟!</p>
						</div>
					',`creator`='admin',`created_at`='2019-12-11 21:46:05',`updated_at`='2019-12-11 21:46:05',`click`='1' WHERE `id` = 5 [ RunTime:0.0009s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000061s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000103s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.015683s ]
INFO: [ view_parse ] --END-- [ RunTime:0.015726s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000856s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000889s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001134s ]
INFO: [ app_end ] --END-- [ RunTime:0.001164s ]

[ 2019-12-12T11:23:00+08:00 ] ::1 /Home/Index/ShowDetail?id=5
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.000741s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000836s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000860s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0011s ]
SQL: SELECT * FROM `articles` WHERE `id` = 5 LIMIT 1   [ RunTime:0.0005s ]

[ 2019-12-12T11:23:13+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.000580s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000666s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000687s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000020s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000040s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.009253s ]
INFO: [ view_parse ] --END-- [ RunTime:0.009280s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000569s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000588s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000753s ]
INFO: [ app_end ] --END-- [ RunTime:0.000772s ]

[ 2019-12-12T11:23:13+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000006s ]
INFO: [ app_init ] --END-- [ RunTime:0.000741s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000778s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000800s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0010s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0012s ]

[ 2019-12-12T11:23:35+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000006s ]
INFO: [ app_init ] --END-- [ RunTime:0.000613s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000711s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000734s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000022s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000048s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.011183s ]
INFO: [ view_parse ] --END-- [ RunTime:0.011214s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000664s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000684s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000804s ]
INFO: [ app_end ] --END-- [ RunTime:0.000825s ]

[ 2019-12-12T11:23:35+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000009s ]
INFO: [ app_init ] --END-- [ RunTime:0.000915s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001805s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001852s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0039s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0028s ]

[ 2019-12-12T11:23:46+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.000768s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000881s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000909s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000043s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000109s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.013704s ]
INFO: [ view_parse ] --END-- [ RunTime:0.013741s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000701s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000722s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000927s ]
INFO: [ app_end ] --END-- [ RunTime:0.000950s ]

[ 2019-12-12T11:23:49+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.000685s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000772s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000795s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000023s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000049s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.011573s ]
INFO: [ view_parse ] --END-- [ RunTime:0.011612s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000615s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000635s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000818s ]
INFO: [ app_end ] --END-- [ RunTime:0.000839s ]

[ 2019-12-12T11:23:51+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000814s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000630s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000652s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000019s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000039s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.009325s ]
INFO: [ view_parse ] --END-- [ RunTime:0.009353s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000580s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000600s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000825s ]
INFO: [ app_end ] --END-- [ RunTime:0.000844s ]

[ 2019-12-12T11:23:52+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000775s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001677s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001748s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0011s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0013s ]

[ 2019-12-12T11:24:14+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000009s ]
INFO: [ app_init ] --END-- [ RunTime:0.000883s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001337s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001375s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000030s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000065s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.018639s ]
INFO: [ view_parse ] --END-- [ RunTime:0.018686s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.001329s ]
INFO: [ view_filter ] --END-- [ RunTime:0.001357s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001413s ]
INFO: [ app_end ] --END-- [ RunTime:0.001443s ]

[ 2019-12-12T11:24:18+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000808s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001859s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001897s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000027s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000059s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.015414s ]
INFO: [ view_parse ] --END-- [ RunTime:0.015456s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000842s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000872s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001064s ]
INFO: [ app_end ] --END-- [ RunTime:0.001091s ]

[ 2019-12-12T11:24:39+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000009s ]
INFO: [ app_init ] --END-- [ RunTime:0.000878s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000938s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000972s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000029s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000062s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.014740s ]
INFO: [ view_parse ] --END-- [ RunTime:0.014785s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000732s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000759s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001037s ]
INFO: [ app_end ] --END-- [ RunTime:0.001069s ]

[ 2019-12-12T11:24:40+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000010s ]
INFO: [ app_init ] --END-- [ RunTime:0.000994s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001069s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001106s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000032s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000071s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.017537s ]
INFO: [ view_parse ] --END-- [ RunTime:0.017583s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000736s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000760s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001135s ]
INFO: [ app_end ] --END-- [ RunTime:0.001174s ]

[ 2019-12-12T11:24:52+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000763s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000877s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000906s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000026s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000072s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.013995s ]
INFO: [ view_parse ] --END-- [ RunTime:0.014061s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000722s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000746s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000996s ]
INFO: [ app_end ] --END-- [ RunTime:0.001024s ]

[ 2019-12-12T11:25:33+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000619s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000641s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000661s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000023s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000045s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.011770s ]
INFO: [ view_parse ] --END-- [ RunTime:0.011803s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000657s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000678s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000841s ]
INFO: [ app_end ] --END-- [ RunTime:0.000862s ]

[ 2019-12-12T11:25:33+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000767s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000820s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000844s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0011s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0015s ]

[ 2019-12-12T11:25:55+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000004s ]
INFO: [ app_init ] --END-- [ RunTime:0.000578s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001860s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001885s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000020s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000039s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.009982s ]
INFO: [ view_parse ] --END-- [ RunTime:0.010010s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000563s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000581s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000815s ]
INFO: [ app_end ] --END-- [ RunTime:0.000835s ]

[ 2019-12-12T11:25:56+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.000734s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000814s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000837s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0012s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0014s ]

[ 2019-12-12T11:25:58+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000753s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001666s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001714s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000028s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000061s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.015470s ]
INFO: [ view_parse ] --END-- [ RunTime:0.015510s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000766s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000791s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001002s ]
INFO: [ app_end ] --END-- [ RunTime:0.001026s ]

[ 2019-12-12T11:25:59+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.000734s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000838s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000884s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0011s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0014s ]

[ 2019-12-12T11:26:03+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000014s ]
INFO: [ app_init ] --END-- [ RunTime:0.001631s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001164s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001215s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000033s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000070s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.015966s ]
INFO: [ view_parse ] --END-- [ RunTime:0.016018s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000821s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000850s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001079s ]
INFO: [ app_end ] --END-- [ RunTime:0.001108s ]

[ 2019-12-12T11:26:04+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000743s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000780s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000802s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0011s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0014s ]

[ 2019-12-12T11:26:06+08:00 ] 192.168.3.91 /Home/Index/detail?id=11
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000014s ]
INFO: [ app_init ] --END-- [ RunTime:0.001596s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001538s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001589s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0018s ]
SQL: SELECT * FROM `articles` WHERE `id` = 11 LIMIT 1   [ RunTime:0.0012s ]
SQL: UPDATE `articles` SET `origin_url`='https://js.aizhan.com/data/oracle/10558.html',`title`='oracle如何使用nvl函数',`text`='<div class=\"container\">
							
<p>关于nvl<a href=\"https://js.aizhan.com/tags/hanshu.html\" target=\"_blank\"><span style=\"color:#002FD9\"><a href=\"https://js.aizhan.com/tags/hanshu.html\" target=\"_blank\"><span style=\"color:#002FD9\">函数</span></a></span></a>的了解你知道多少呢？在oracle中难免会需要使用到nvl函数，那么你知道oracle如何使用nvl函数吗？今天小编就将为大家解答oracle如何使用nvl函数这个问题，大家可以参考一下。</p>

<p><a href=\"https://js.aizhan.com/tags/oracle.html\" target=\"_blank\"><span style=\"color:#002FD9\"><a href=\"https://js.aizhan.com/tags/oracle.html\" target=\"_blank\"><span style=\"color:#002FD9\">Oracle</span></a></span></a>的Nvl函数</p>

<p>nvl( ) 函数</p>

<p>从两个表达式返回一个非null 值。</p>

<p>语法</p>

<p>NVL(eExpression1, eExpression2)<br><br>
参数</p>

<p>eExpression1, eExpression2</p>

<p>如 果 eExpression1 的计算结果为 null 值，则 NVL( ) 返回 eExpression2。如果 eExpression1 的计算结果不是 null 值，则返回 eExpression1。eExpression1 和 eExpression2 可以是任意一种数据类型。如果 eExpression1 与 eExpression2 的结果皆为 null 值，则 NVL( ) 返回 .NULL.。</p>

<p>返回值类型</p>

<p>字符型、日期型、日期时间型、数值型、货币型、逻辑型或 null 值</p>

<p>说明</p>

<p>在不支持 null 值或 null 值无关紧要的情况下，可以使用 NVL( ) 来移去计算或操作中的 null 值。</p>

<p>select nvl(a.name,\'空得\') as name from student a joinschool b on a.ID=b.ID</p>

<p>注意：两个参数得类型要匹配</p>

<p>问：什么是NULL？</p>

<p>答：在我们不知道具体有什么数据的时候，也即未知，可以用NULL，</p>

<p>我们称它为空，ORACLE中，含有空值的表列长度为零。</p>

<p>ORACLE允许任何一种数据类型的字段为空，除了以下两种情况：</p>

<p>1、主键字段（primary key），</p>

<p>2、定义时已经加了NOT NULL限制条件的字段</p>

<p>说明：</p>

<p>1、等价于没有任何值、是未知数。</p>

<p>2、NULL与0、空字符串、空格都不同。</p>

<p>3、对空值做加、减、乘、除等运算操作，结果仍为空。</p>

<p>4、NULL的处理使用NVL函数。</p>

<p>5、比较时使用关键字用“is null”和“is not null”。</p>

<p>6、空值不能被索引，所以查询时有些符合条件的数据可能查不出来，</p>

<p>count(*)中，用nvl(列名,0)处理后再查。</p>

<p>7、排序时比其他数据都大（索引默认是降序排列，小→大），</p>

<p>所以NULL值总是排在最后。</p>

<p>以上就是关于oracle如何使用nvl函数的内容，在上文中，小编为大家做了简单的介绍。其实，在日常的操作oracle过程中是经常使可以使用的。</p>
						</div>
					',`creator`='admin',`created_at`='2019-12-12 10:47:00',`updated_at`='2019-12-12 10:47:00',`click`='3' WHERE `id` = 11 [ RunTime:0.0014s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000042s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000086s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.021242s ]
INFO: [ view_parse ] --END-- [ RunTime:0.021313s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000945s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000977s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001226s ]
INFO: [ app_end ] --END-- [ RunTime:0.001259s ]

[ 2019-12-12T11:26:06+08:00 ] 192.168.3.91 /Home/Index/ShowDetail?id=11
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000009s ]
INFO: [ app_init ] --END-- [ RunTime:0.000935s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001053s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001082s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0012s ]
SQL: SELECT * FROM `articles` WHERE `id` = 11 LIMIT 1   [ RunTime:0.0005s ]

[ 2019-12-12T11:26:12+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000006s ]
INFO: [ app_init ] --END-- [ RunTime:0.000600s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000718s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000737s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0010s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0012s ]

[ 2019-12-12T11:27:19+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000010s ]
INFO: [ app_init ] --END-- [ RunTime:0.000871s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.002172s ]
INFO: [ app_begin ] --END-- [ RunTime:0.002264s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000032s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000069s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.020056s ]
INFO: [ view_parse ] --END-- [ RunTime:0.020104s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.001264s ]
INFO: [ view_filter ] --END-- [ RunTime:0.001304s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001514s ]
INFO: [ app_end ] --END-- [ RunTime:0.001547s ]

[ 2019-12-12T11:27:22+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000016s ]
INFO: [ app_init ] --END-- [ RunTime:0.001782s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001268s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001316s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000045s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000108s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.023273s ]
INFO: [ view_parse ] --END-- [ RunTime:0.023342s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.001166s ]
INFO: [ view_filter ] --END-- [ RunTime:0.001210s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001367s ]
INFO: [ app_end ] --END-- [ RunTime:0.001401s ]

[ 2019-12-12T11:27:48+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000011s ]
INFO: [ app_init ] --END-- [ RunTime:0.001270s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001312s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001365s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000064s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000126s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.018128s ]
INFO: [ view_parse ] --END-- [ RunTime:0.018179s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000880s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000920s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001287s ]
INFO: [ app_end ] --END-- [ RunTime:0.001322s ]

[ 2019-12-12T11:27:50+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.000796s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000812s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000838s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0013s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0015s ]

[ 2019-12-12T11:30:19+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000009s ]
INFO: [ app_init ] --END-- [ RunTime:0.001160s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001306s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001339s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000032s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000067s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.016451s ]
INFO: [ view_parse ] --END-- [ RunTime:0.016491s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.001117s ]
INFO: [ view_filter ] --END-- [ RunTime:0.001143s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001818s ]
INFO: [ app_end ] --END-- [ RunTime:0.001872s ]

[ 2019-12-12T11:30:20+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000524s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000612s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000627s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0011s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0012s ]

[ 2019-12-12T11:31:05+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.001027s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.002036s ]
INFO: [ app_begin ] --END-- [ RunTime:0.002102s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000029s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000063s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.014999s ]
INFO: [ view_parse ] --END-- [ RunTime:0.015043s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000839s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000867s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001145s ]
INFO: [ app_end ] --END-- [ RunTime:0.001173s ]

[ 2019-12-12T11:31:07+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000006s ]
INFO: [ app_init ] --END-- [ RunTime:0.000514s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000628s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000648s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0010s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0011s ]

[ 2019-12-12T11:32:24+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000995s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001158s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001191s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000025s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000057s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.016302s ]
INFO: [ view_parse ] --END-- [ RunTime:0.016343s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.001090s ]
INFO: [ view_filter ] --END-- [ RunTime:0.001118s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001436s ]
INFO: [ app_end ] --END-- [ RunTime:0.001467s ]

[ 2019-12-12T11:32:25+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000009s ]
INFO: [ app_init ] --END-- [ RunTime:0.000761s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000849s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000875s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0009s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0013s ]

[ 2019-12-12T11:32:29+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000523s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000640s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000656s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0010s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0013s ]

[ 2019-12-12T11:32:32+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000009s ]
INFO: [ app_init ] --END-- [ RunTime:0.000838s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000996s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001034s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000025s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000053s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.014754s ]
INFO: [ view_parse ] --END-- [ RunTime:0.014792s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000691s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000713s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000913s ]
INFO: [ app_end ] --END-- [ RunTime:0.000936s ]

[ 2019-12-12T11:32:33+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.000775s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000886s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000910s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0012s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0014s ]

[ 2019-12-12T11:32:58+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000550s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000621s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000640s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000018s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000037s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.010759s ]
INFO: [ view_parse ] --END-- [ RunTime:0.010790s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000602s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000622s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000832s ]
INFO: [ app_end ] --END-- [ RunTime:0.000852s ]

[ 2019-12-12T11:32:59+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000029s ]
INFO: [ app_init ] --END-- [ RunTime:0.000936s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000962s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000991s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0013s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0015s ]

[ 2019-12-12T11:33:00+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000544s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000610s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000629s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000020s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000041s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.010751s ]
INFO: [ view_parse ] --END-- [ RunTime:0.010779s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000568s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000584s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000702s ]
INFO: [ app_end ] --END-- [ RunTime:0.000720s ]

[ 2019-12-12T11:33:00+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.000764s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000859s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000884s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0010s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0015s ]

[ 2019-12-12T11:33:05+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.000614s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001283s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001351s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000021s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000041s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.009349s ]
INFO: [ view_parse ] --END-- [ RunTime:0.009376s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000601s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000621s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000855s ]
INFO: [ app_end ] --END-- [ RunTime:0.000874s ]

[ 2019-12-12T11:33:05+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000691s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000896s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000920s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0010s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0012s ]

[ 2019-12-12T11:33:42+08:00 ] 192.168.3.35 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000004s ]
INFO: [ app_init ] --END-- [ RunTime:0.000422s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000540s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000556s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000014s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000029s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.007734s ]
INFO: [ view_parse ] --END-- [ RunTime:0.007759s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000460s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000475s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000623s ]
INFO: [ app_end ] --END-- [ RunTime:0.000638s ]

[ 2019-12-12T11:33:43+08:00 ] 192.168.3.35 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000003s ]
INFO: [ app_init ] --END-- [ RunTime:0.000463s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000547s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000561s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0010s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0010s ]

[ 2019-12-12T11:34:10+08:00 ] 192.168.3.35 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000004s ]
INFO: [ app_init ] --END-- [ RunTime:0.000500s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000571s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000587s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000018s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000034s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.008399s ]
INFO: [ view_parse ] --END-- [ RunTime:0.008423s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000534s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000551s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000710s ]
INFO: [ app_end ] --END-- [ RunTime:0.000725s ]

[ 2019-12-12T11:34:10+08:00 ] 192.168.3.35 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000464s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000576s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000591s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0011s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0010s ]

[ 2019-12-12T11:34:14+08:00 ] 192.168.3.35 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000018s ]
INFO: [ app_init ] --END-- [ RunTime:0.000573s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000484s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000496s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0010s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0008s ]

[ 2019-12-12T11:35:58+08:00 ] 192.168.3.35 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000004s ]
INFO: [ app_init ] --END-- [ RunTime:0.000619s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000697s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000714s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000017s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000034s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.009834s ]
INFO: [ view_parse ] --END-- [ RunTime:0.009859s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000689s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000706s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000776s ]
INFO: [ app_end ] --END-- [ RunTime:0.000793s ]

[ 2019-12-12T11:35:58+08:00 ] 192.168.3.35 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000003s ]
INFO: [ app_init ] --END-- [ RunTime:0.000411s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000468s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000480s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0010s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0009s ]

[ 2019-12-12T11:36:20+08:00 ] 192.168.3.35 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000004s ]
INFO: [ app_init ] --END-- [ RunTime:0.000391s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000450s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000464s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000015s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000029s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.007388s ]
INFO: [ view_parse ] --END-- [ RunTime:0.007411s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000439s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000453s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000555s ]
INFO: [ app_end ] --END-- [ RunTime:0.000567s ]

[ 2019-12-12T11:36:20+08:00 ] 192.168.3.35 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000006s ]
INFO: [ app_init ] --END-- [ RunTime:0.000484s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000516s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000530s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0008s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0011s ]

[ 2019-12-12T11:36:30+08:00 ] 192.168.3.35 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000004s ]
INFO: [ app_init ] --END-- [ RunTime:0.000467s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000505s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000520s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000015s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000030s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.007606s ]
INFO: [ view_parse ] --END-- [ RunTime:0.007625s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000445s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000459s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000597s ]
INFO: [ app_end ] --END-- [ RunTime:0.000611s ]

[ 2019-12-12T11:36:31+08:00 ] 192.168.3.35 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000003s ]
INFO: [ app_init ] --END-- [ RunTime:0.000441s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000477s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000489s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0008s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0010s ]

[ 2019-12-12T11:36:33+08:00 ] 192.168.3.35 /Home/Index/detail?id=11
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000003s ]
INFO: [ app_init ] --END-- [ RunTime:0.000453s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000573s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000587s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0010s ]
SQL: SELECT * FROM `articles` WHERE `id` = 11 LIMIT 1   [ RunTime:0.0003s ]
SQL: UPDATE `articles` SET `origin_url`='https://js.aizhan.com/data/oracle/10558.html',`title`='oracle如何使用nvl函数',`text`='<div class=\"container\">
							
<p>关于nvl<a href=\"https://js.aizhan.com/tags/hanshu.html\" target=\"_blank\"><span style=\"color:#002FD9\"><a href=\"https://js.aizhan.com/tags/hanshu.html\" target=\"_blank\"><span style=\"color:#002FD9\">函数</span></a></span></a>的了解你知道多少呢？在oracle中难免会需要使用到nvl函数，那么你知道oracle如何使用nvl函数吗？今天小编就将为大家解答oracle如何使用nvl函数这个问题，大家可以参考一下。</p>

<p><a href=\"https://js.aizhan.com/tags/oracle.html\" target=\"_blank\"><span style=\"color:#002FD9\"><a href=\"https://js.aizhan.com/tags/oracle.html\" target=\"_blank\"><span style=\"color:#002FD9\">Oracle</span></a></span></a>的Nvl函数</p>

<p>nvl( ) 函数</p>

<p>从两个表达式返回一个非null 值。</p>

<p>语法</p>

<p>NVL(eExpression1, eExpression2)<br><br>
参数</p>

<p>eExpression1, eExpression2</p>

<p>如 果 eExpression1 的计算结果为 null 值，则 NVL( ) 返回 eExpression2。如果 eExpression1 的计算结果不是 null 值，则返回 eExpression1。eExpression1 和 eExpression2 可以是任意一种数据类型。如果 eExpression1 与 eExpression2 的结果皆为 null 值，则 NVL( ) 返回 .NULL.。</p>

<p>返回值类型</p>

<p>字符型、日期型、日期时间型、数值型、货币型、逻辑型或 null 值</p>

<p>说明</p>

<p>在不支持 null 值或 null 值无关紧要的情况下，可以使用 NVL( ) 来移去计算或操作中的 null 值。</p>

<p>select nvl(a.name,\'空得\') as name from student a joinschool b on a.ID=b.ID</p>

<p>注意：两个参数得类型要匹配</p>

<p>问：什么是NULL？</p>

<p>答：在我们不知道具体有什么数据的时候，也即未知，可以用NULL，</p>

<p>我们称它为空，ORACLE中，含有空值的表列长度为零。</p>

<p>ORACLE允许任何一种数据类型的字段为空，除了以下两种情况：</p>

<p>1、主键字段（primary key），</p>

<p>2、定义时已经加了NOT NULL限制条件的字段</p>

<p>说明：</p>

<p>1、等价于没有任何值、是未知数。</p>

<p>2、NULL与0、空字符串、空格都不同。</p>

<p>3、对空值做加、减、乘、除等运算操作，结果仍为空。</p>

<p>4、NULL的处理使用NVL函数。</p>

<p>5、比较时使用关键字用“is null”和“is not null”。</p>

<p>6、空值不能被索引，所以查询时有些符合条件的数据可能查不出来，</p>

<p>count(*)中，用nvl(列名,0)处理后再查。</p>

<p>7、排序时比其他数据都大（索引默认是降序排列，小→大），</p>

<p>所以NULL值总是排在最后。</p>

<p>以上就是关于oracle如何使用nvl函数的内容，在上文中，小编为大家做了简单的介绍。其实，在日常的操作oracle过程中是经常使可以使用的。</p>
						</div>
					',`creator`='admin',`created_at`='2019-12-12 10:47:00',`updated_at`='2019-12-12 10:47:00',`click`='4' WHERE `id` = 11 [ RunTime:0.0004s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000015s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000030s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.007925s ]
INFO: [ view_parse ] --END-- [ RunTime:0.007944s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000442s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000456s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000581s ]
INFO: [ app_end ] --END-- [ RunTime:0.000594s ]

[ 2019-12-12T11:36:33+08:00 ] 192.168.3.35 /Home/Index/ShowDetail?id=11
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000003s ]
INFO: [ app_init ] --END-- [ RunTime:0.000450s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000522s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000535s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0010s ]
SQL: SELECT * FROM `articles` WHERE `id` = 11 LIMIT 1   [ RunTime:0.0003s ]

[ 2019-12-12T11:37:37+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000006s ]
INFO: [ app_init ] --END-- [ RunTime:0.000624s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000653s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000676s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000022s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000044s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.010603s ]
INFO: [ view_parse ] --END-- [ RunTime:0.010650s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000520s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000538s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000733s ]
INFO: [ app_end ] --END-- [ RunTime:0.000752s ]

[ 2019-12-12T11:37:37+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.000789s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000977s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001007s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0015s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0014s ]

[ 2019-12-12T12:04:12+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000889s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000859s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000880s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000024s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000047s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.013655s ]
INFO: [ view_parse ] --END-- [ RunTime:0.013686s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000861s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000882s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001092s ]
INFO: [ app_end ] --END-- [ RunTime:0.001113s ]

[ 2019-12-12T12:04:12+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000011s ]
INFO: [ app_init ] --END-- [ RunTime:0.000973s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001112s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001167s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0014s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0016s ]

[ 2019-12-12T12:06:32+08:00 ] 192.168.3.35 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000616s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000714s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000734s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000018s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000038s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.010363s ]
INFO: [ view_parse ] --END-- [ RunTime:0.010391s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000682s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000699s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000872s ]
INFO: [ app_end ] --END-- [ RunTime:0.000890s ]

[ 2019-12-12T12:06:32+08:00 ] 192.168.3.35 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000524s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000622s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000642s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0011s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0013s ]

[ 2019-12-12T12:16:39+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000703s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001047s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001096s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000023s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000045s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.012516s ]
INFO: [ view_parse ] --END-- [ RunTime:0.012548s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000837s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000866s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001032s ]
INFO: [ app_end ] --END-- [ RunTime:0.001052s ]

[ 2019-12-12T12:16:39+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.000735s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001409s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001465s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0015s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0016s ]

[ 2019-12-12T12:16:41+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000646s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000736s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000770s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0011s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0014s ]

[ 2019-12-12T12:31:38+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000681s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000647s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000669s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000016s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000031s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.009365s ]
INFO: [ view_parse ] --END-- [ RunTime:0.009388s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000650s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000669s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000967s ]
INFO: [ app_end ] --END-- [ RunTime:0.000989s ]

[ 2019-12-12T12:31:38+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000600s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000669s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000687s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0010s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0009s ]

[ 2019-12-12T12:32:12+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000003s ]
INFO: [ app_init ] --END-- [ RunTime:0.000451s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000521s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000535s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0010s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0008s ]

[ 2019-12-12T12:32:14+08:00 ] ::1 /Home/Index/detail?id=3
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000495s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000563s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000580s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0009s ]
SQL: SELECT * FROM `articles` WHERE `id` = 3 LIMIT 1   [ RunTime:0.0005s ]
SQL: UPDATE `articles` SET `origin_url`='https://js.aizhan.com/data/oracle/10600.html',`title`='oracle如何实现发送邮件',`text`='<div class=\"container\">
							
<div class=\"codebody\"><pre>
在oracle中我们经常会因为任务需要发送<a href=\"https://js.aizhan.com/tags/youjian.html\" target=\"_blank\"><span style=\"color:#002FD9\"><a href=\"https://js.aizhan.com/tags/youjian.html\" target=\"_blank\"><span style=\"color:#002FD9\">邮件</span></a></span></a>，但是有很多新手小伙伴们不知道oracle如何实现发送邮件，接下来的内容中就让爱站小编为大家介绍oracle发送邮件的方法吧，希望对你有所帮助。
CREATE OR REPLACE PROCEDURE PROCSENDEMAIL(P_TXT        VARCHAR2,
                                           P_SUB        VARCHAR2,
                                           P_SENDOR     VARCHAR2,
                                           P_RECEIVER   VARCHAR2,
                                           P_SERVER     VARCHAR2,
                                           P_PORT       NUMBER DEFAULT 25,
                                           P_NEED_SMTP INT DEFAULT 0,
                                           P_USER       VARCHAR2 DEFAULT NULL,
                                           P_PASS       VARCHAR2 DEFAULT NULL,
                                           P_FILENAME   VARCHAR2 DEFAULT NULL,
                                           P_ENCODE     VARCHAR2 DEFAULT \'bit 7\')
   AUTHID CURRENT_USER IS
   /*
   作用：用oracle发送邮件
   主要功能：1、支持多收件人。
             2、支持中文
             3、支持抄送人
             4、支持大于32K的附件
             5、支持多行正文
             6、支持多附件
             7、支持文本附件和二进制附件
             8、支持HTML格式
             8、支持
   作者：suk
   参数说明：
             p_txt :邮件正文
             p_sub: 邮件标题
             p_SendorAddress : 发送人邮件地址
             p_ReceiverAddress : 接收地址，可以同时发送到多个地址上，地址之间用\",\"或者\";\"隔开
             p_EmailServer : 邮件服务器地址，可以是域名或者IP
             p_Port ：邮件服务器端口
             p_need_smtp：是否需要smtp认证，0表示不需要，1表示需要
             p_user：smtp验证需要的用户名
             p_pass：smtp验证需要的密码
             p_filename：附件名称，必须包含完整的路径，如\"d:tempa.txt\"。
                         可以有多个附件，附件名称只见用逗号或者分号分隔
             p_encode：附件编码转换格式，其中 p_encode=\'bit 7\' 表示文本类型附件
                                              p_encode=\'base64\' 表示二进制类型附件
   注意：
         1、对于文本类型的附件，不能用base64的方式发送，否则出错
         2、对于多个附件只能用同一种格式发送
   */
   L_CRLF VARCHAR2(2) := UTL_TCP.CRLF;
   L_SENDORADDRESS VARCHAR2(4000);
   L_SPLITE         VARCHAR2(10) := \'++\';
   BOUNDARY             CONSTANT VARCHAR2(256) := \'-----BYSUK\';
   FIRST_BOUNDARY       CONSTANT VARCHAR2(256) := \'--\' || BOUNDARY || L_CRLF;
   LAST_BOUNDARY        CONSTANT VARCHAR2(256) := \'--\' || BOUNDARY || \'--\' ||
                                                 L_CRLF;
   MULTIPART_MIME_TYPE CONSTANT VARCHAR2(256) := \'multipart/mixed; boundary=\"\' ||
                                                 BOUNDARY || \'\"\';
   /* 以下部分是发送大二进制附件时用到的变量 */
   L_FIL                  BFILE;
   L_FILE_LEN             NUMBER;
   L_MODULO               NUMBER;
   L_PIECES               NUMBER;
   L_FILE_HANDLE          UTL_FILE.FILE_TYPE;
   L_AMT                  BINARY_INTEGER := 672 * 3; /* ensures proper format;   2016 */
   L_FILEPOS              PLS_INTEGER := 1; /* pointer for the file */
   L_CHUNKS               NUMBER;
   L_BUF                  RAW(2100);
   L_DATA                 RAW(2100);
   L_MAX_LINE_WIDTH       NUMBER := 54;
   L_DIRECTORY_BASE_NAME VARCHAR2(100) := \'DIR_FOR_SEND_MAIL\';
   L_LINE                 VARCHAR2(1000);
   L_MESG                 VARCHAR2(32767);
   /* 以上部分是发送大二进制附件时用到的变量 */
   TYPE ADDRESS_LIST IS TABLE OF VARCHAR2(100) INDEX BY BINARY_INTEGER;
   MY_ADDRESS_LIST ADDRESS_LIST;
   TYPE ACCT_LIST IS TABLE OF VARCHAR2(100) INDEX BY BINARY_INTEGER;
   MY_ACCT_LIST ACCT_LIST;
   -------------------------------------返回附件源文件所在目录或者名称--------------------------------------
   FUNCTION GET_FILE(P_FILE VARCHAR2,
                     P_GET   INT) RETURN VARCHAR2 IS
     --p_get=1 表示返回目录
     --p_get=2 表示返回文件名
     L_FILE VARCHAR2(1000);
   BEGIN
     IF INSTR(P_FILE, \'\') > 0 THEN
       --windows
       IF P_GET = 1 THEN
         L_FILE := SUBSTR(P_FILE, 1, INSTR(P_FILE, \'\', -1) - 1);
       ELSIF P_GET = 2 THEN
         L_FILE := SUBSTR(P_FILE, - (LENGTH(P_FILE) - INSTR(P_FILE, \'\', -1)));
       END IF;
     ELSIF INSTR(P_FILE, \'/\') > 0 THEN
       --linux/unix
       IF P_GET = 1 THEN
         L_FILE := SUBSTR(P_FILE, 1, INSTR(P_FILE, \'/\', -1) - 1);
       ELSIF P_GET = 2 THEN
         L_FILE := SUBSTR(P_FILE, - (LENGTH(P_FILE) - INSTR(P_FILE, \'/\', -1)));
       END IF;
     END IF;
     RETURN L_FILE;
   END;
   ---------------------------------------------删除directory------------------------------------
   PROCEDURE DROP_DIRECTORY(P_DIRECTORY_NAME VARCHAR2) IS
   BEGIN
     EXECUTE IMMEDIATE \'drop directory \' || P_DIRECTORY_NAME;
   EXCEPTION
     WHEN OTHERS THEN
       NULL;
   END;
   --------------------------------------------------创建directory-----------------------------------------
   PROCEDURE CREATE_DIRECTORY(P_DIRECTORY_NAME VARCHAR2,
                              P_DIR             VARCHAR2) IS
   BEGIN
     EXECUTE IMMEDIATE \'create directory \' || P_DIRECTORY_NAME || \' as \'\'\' ||
                       P_DIR || \'\'\'\';
     EXECUTE IMMEDIATE \'grant read,write on directory \' || P_DIRECTORY_NAME ||
                       \' to public\';
     EXCEPTION
     WHEN OTHERS THEN
       RAISE;
   END;
   --------------------------------------------分割邮件地址或者附件地址-----------------------------------
   PROCEDURE P_SPLITE_STR(P_STR          VARCHAR2,
                          P_SPLITE_FLAG INT DEFAULT 1) IS
     L_ADDR VARCHAR2(254) := \'\';
     L_LEN   INT;
     L_STR   VARCHAR2(4000);
     J       INT := 0; --表示邮件地址或者附件的个数
   BEGIN
     /*处理接收邮件地址列表，包括去空格、将;转换为,等*/
     L_STR := TRIM(RTRIM(REPLACE(REPLACE(P_STR, \';\', \',\'), \' \', \'\'), \',\'));
     L_LEN := LENGTH(L_STR);
     FOR I IN 1 .. L_LEN LOOP
       IF SUBSTR(L_STR, I, 1) <> \',\' THEN
         L_ADDR := L_ADDR || SUBSTR(L_STR, I, 1);
       ELSE
         J := J + 1;
         IF P_SPLITE_FLAG = 1 THEN --表示处理邮件地址       
           --前后需要加上\'<>\'，否则很多邮箱将不能发送邮件
           L_ADDR := \'<\' || L_ADDR || \'>\';
           --调用邮件发送过程
           MY_ADDRESS_LIST(J) := L_ADDR;
         ELSIF P_SPLITE_FLAG = 2 THEN --表示处理附件名称
           MY_ACCT_LIST(J) := L_ADDR;
         END IF;
         L_ADDR := \'\';
       END IF;
       IF I = L_LEN THEN
         J := J + 1;
         IF P_SPLITE_FLAG = 1 THEN
           --调用邮件发送过程
           L_ADDR := \'<\' || L_ADDR || \'>\';
           MY_ADDRESS_LIST(J) := L_ADDR;
         ELSIF P_SPLITE_FLAG = 2 THEN
           MY_ACCT_LIST(J) := L_ADDR;
         END IF;
       END IF;
     END LOOP;
   END;
   ------------------------------------------------写邮件头和邮件内容------------------------------------------
   PROCEDURE WRITE_DATA(P_CONN    IN OUT NOCOPY UTL_SMTP.CONNECTION,
                        P_NAME    IN VARCHAR2,
                        P_VALUE   IN VARCHAR2,
                        P_SPLITE VARCHAR2 DEFAULT \':\',
                        P_CRLF    VARCHAR2 DEFAULT L_CRLF) IS
   BEGIN
     /* utl_raw.cast_to_raw 对解决中文乱码问题很重要*/
     UTL_SMTP.WRITE_RAW_DATA(P_CONN, UTL_RAW.CAST_TO_RAW(CONVERT(P_NAME ||
                                                          P_SPLITE ||
                                                          P_VALUE ||
                                                          P_CRLF, \'ZHS16GBK\')));
   END;
   ----------------------------------------写MIME邮件尾部-----------------------------------------------------
   PROCEDURE <span id=\"TheWorldHiLightStyleID\" style=\"BACKGROUND: #ffff00; COLOR: #000000\">END_BOUNDARY</span>(CONN IN OUT NOCOPY UTL_SMTP.CONNECTION,
                          LAST IN BOOLEAN DEFAULT FALSE) IS
   BEGIN
     UTL_SMTP.WRITE_DATA(CONN, UTL_TCP.CRLF);
     IF (LAST) THEN
       UTL_SMTP.WRITE_DATA(CONN, LAST_BOUNDARY);
     END IF;
   END;
   ----------------------------------------------发送附件----------------------------------------------------
   PROCEDURE ATTACHMENT(CONN          IN OUT NOCOPY UTL_SMTP.CONNECTION,
                        MIME_TYPE     IN VARCHAR2 DEFAULT \'text/plain\',
                        INLINE        IN BOOLEAN DEFAULT TRUE,
                        FILENAME      IN VARCHAR2 DEFAULT \'t.txt\',
                        TRANSFER_ENC IN VARCHAR2 DEFAULT \'7 bit\',
                        DT_NAME       IN VARCHAR2 DEFAULT \'0\') IS

     L_FILENAME VARCHAR2(1000);
   BEGIN
     --写附件头
     UTL_SMTP.WRITE_DATA(CONN, FIRST_BOUNDARY);
     --设置附件格式
     WRITE_DATA(CONN, \'Content-Type\', MIME_TYPE);
     --如果文件名称非空，表示有附件
     DROP_DIRECTORY(DT_NAME);
     --创建directory
     CREATE_DIRECTORY(DT_NAME, GET_FILE(FILENAME, 1));
     --得到附件文件名称
     L_FILENAME := GET_FILE(FILENAME, 2);
     IF (INLINE) THEN
       WRITE_DATA(CONN, \'Content-Disposition\', \'inline; filename=\"\' ||
                   L_FILENAME || \'\"\');
     ELSE
       WRITE_DATA(CONN, \'Content-Disposition\', \'attachment; filename=\"\' ||
                   L_FILENAME || \'\"\');
     END IF;
     --设置附件的转换格式
     IF (TRANSFER_ENC IS NOT NULL) THEN
       WRITE_DATA(CONN, \'Content-Transfer-Encoding\', TRANSFER_ENC);
     END IF;

     UTL_SMTP.WRITE_DATA(CONN, UTL_TCP.CRLF);

     --begin 贴附件内容
     IF TRANSFER_ENC = \'bit 7\' THEN
       --如果是文本类型的附件
       BEGIN
         L_FILE_HANDLE := UTL_FILE.FOPEN(DT_NAME, L_FILENAME, \'r\'); --打开文件
         --把附件分成多份，这样可以发送超过32K的附件
         LOOP
           UTL_FILE.GET_LINE(L_FILE_HANDLE, L_LINE);
           L_MESG := L_LINE || L_CRLF;
           WRITE_DATA(CONN, \'\', L_MESG, \'\', \'\');
         END LOOP;
         UTL_FILE.FCLOSE(L_FILE_HANDLE);
         <span id=\"TheWorldHiLightStyleID\" style=\"BACKGROUND: #ffff00; COLOR: #000000\">END_BOUNDARY</span>(CONN);
       EXCEPTION
         WHEN OTHERS THEN
           UTL_FILE.FCLOSE(L_FILE_HANDLE);
           <span id=\"TheWorldHiLightStyleID\" style=\"BACKGROUND: #ffff00; COLOR: #000000\">END_BOUNDARY</span>(CONN);
           NULL;
       END; --结束文本类型附件的处理

     ELSIF TRANSFER_ENC = \'base64\' THEN
       --如果是二进制类型的附件
       BEGIN
         --把附件分成多份，这样可以发送超过32K的附件
         L_FILEPOS   := 1;--重置offset，在发送多个附件时，必须重置
         L_FIL       := BFILENAME(DT_NAME, L_FILENAME);
         L_FILE_LEN := DBMS_LOB.GETLENGTH(L_FIL);
         L_MODULO    := MOD(L_FILE_LEN, L_AMT);
         L_PIECES    := TRUNC(L_FILE_LEN / L_AMT);
         IF (L_MODULO <> 0) THEN
           L_PIECES := L_PIECES + 1;
         END IF;
         DBMS_LOB.FILEOPEN(L_FIL, DBMS_LOB.FILE_READONLY);
         DBMS_LOB.READ(L_FIL, L_AMT, L_FILEPOS, L_BUF);
         L_DATA := NULL;
         FOR I IN 1 .. L_PIECES LOOP
           L_FILEPOS   := I * L_AMT + 1;
           L_FILE_LEN := L_FILE_LEN - L_AMT;
           L_DATA      := UTL_RAW.CONCAT(L_DATA, L_BUF);
           L_CHUNKS    := TRUNC(UTL_RAW.LENGTH(L_DATA) / L_MAX_LINE_WIDTH);
           IF (I <> L_PIECES) THEN
             L_CHUNKS := L_CHUNKS - 1;
           END IF;
           UTL_SMTP.WRITE_RAW_DATA(CONN, UTL_ENCODE.BASE64_ENCODE(L_DATA));
           L_DATA := NULL;
           IF (L_FILE_LEN < L_AMT AND L_FILE_LEN > 0) THEN
             L_AMT := L_FILE_LEN;
           END IF;
           DBMS_LOB.READ(L_FIL, L_AMT, L_FILEPOS, L_BUF);
         END LOOP;
         DBMS_LOB.FILECLOSE(L_FIL);
         <span id=\"TheWorldHiLightStyleID\" style=\"BACKGROUND: #ffff00; COLOR: #000000\">END_BOUNDARY</span>(CONN);
       EXCEPTION
         WHEN OTHERS THEN
           DBMS_LOB.FILECLOSE(L_FIL);
           <span id=\"TheWorldHiLightStyleID\" style=\"BACKGROUND: #ffff00; COLOR: #000000\">END_BOUNDARY</span>(CONN);
           RAISE;
       END; --结束处理二进制附件

     END IF; --结束处理附件内容
     DROP_DIRECTORY(DT_NAME);
   END; --结束过程ATTACHMENT
   ---------------------------------------------真正发送邮件的过程--------------------------------------------
   PROCEDURE P_EMAIL(P_SENDORADDRESS2    VARCHAR2, --发送地址
                     P_RECEIVERADDRESS2 VARCHAR2) --接受地址
    IS
     L_CONN UTL_SMTP.CONNECTION; --定义连接
   BEGIN
     /*初始化邮件服务器信息，连接邮件服务器*/
     L_CONN := UTL_SMTP.OPEN_CONNECTION(P_SERVER, P_PORT);
     UTL_SMTP.HELO(L_CONN, P_SERVER);
     /* smtp服务器登录校验 */
     IF P_NEED_SMTP = 1 THEN
       UTL_SMTP.COMMAND(L_CONN, \'AUTH LOGIN\', \'\');
       UTL_SMTP.COMMAND(L_CONN, UTL_RAW.CAST_TO_VARCHAR2(UTL_ENCODE.BASE64_ENCODE(UTL_RAW.CAST_TO_RAW(P_USER))));
       UTL_SMTP.COMMAND(L_CONN, UTL_RAW.CAST_TO_VARCHAR2(UTL_ENCODE.BASE64_ENCODE(UTL_RAW.CAST_TO_RAW(P_PASS))));
     END IF;

     /*设置发送地址和接收地址*/
     UTL_SMTP.MAIL(L_CONN, P_SENDORADDRESS2);
     UTL_SMTP.RCPT(L_CONN, P_RECEIVERADDRESS2);

     /*设置邮件头*/
     UTL_SMTP.OPEN_DATA(L_CONN);

     WRITE_DATA(L_CONN, \'Date\', TO_CHAR(SYSDATE, \'yyyy-mm-dd hh24:mi:ss\'));
     /*设置发送人*/
     WRITE_DATA(L_CONN, \'From\', P_SENDOR);
     /*设置接收人*/
     WRITE_DATA(L_CONN, \'To\', P_RECEIVER);
     /*设置邮件主题*/
     WRITE_DATA(L_CONN, \'Subject\', P_SUB);

     WRITE_DATA(L_CONN, \'Content-Type\', MULTIPART_MIME_TYPE);
     UTL_SMTP.WRITE_DATA(L_CONN, UTL_TCP.CRLF);
     UTL_SMTP.WRITE_DATA(L_CONN, FIRST_BOUNDARY);
     WRITE_DATA(L_CONN, \'Content-Type\', \'text/plain;charset=gb2312\');
     --单独空一行，否则，正文内容不显示
     UTL_SMTP.WRITE_DATA(L_CONN, UTL_TCP.CRLF);
     /* 设置邮件正文
       把分隔符还原成chr(10)。这主要是为了shell中调用该过程，如果有多行，则先把多行的内容合并成一行，</pre></div>

<div class=\"codebody\"><pre>
并用 l_splite分隔  然后用 l_crlf替换chr(10)。这一步是必须的，否则将不能发送邮件正文有多行的邮件

     */
     WRITE_DATA(L_CONN, \'\', REPLACE(REPLACE(P_TXT, L_SPLITE, CHR(10)), CHR(10), L_CRLF), \'\', \'\');
     <span id=\"TheWorldHiLightStyleID\" style=\"BACKGROUND: #ffff00; COLOR: #000000\">END_BOUNDARY</span>(L_CONN);

   --如果文件名称不为空，则发送附件
     IF (P_FILENAME IS NOT NULL) THEN
       --根据逗号或者分号拆分附件地址
       P_SPLITE_STR(P_FILENAME, 2);
       --循环发送附件(在同一个邮件中)
       FOR K IN 1 .. MY_ACCT_LIST.COUNT LOOP
         ATTACHMENT(CONN => L_CONN, FILENAME => MY_ACCT_LIST(K), TRANSFER_ENC => </pre></div>

<div class=\"codebody\"><pre>
P_ENCODE, DT_NAME => L_DIRECTORY_BASE_NAME ||
                                TO_CHAR(K));
       END LOOP;
     END IF;

     /*关闭数据写入*/
     UTL_SMTP.CLOSE_DATA(L_CONN);
     /*关闭连接*/
     UTL_SMTP.QUIT(L_CONN);

     /*异常处理*/
   EXCEPTION
     WHEN OTHERS THEN
       NULL;
       RAISE;

   END;
   ---------------------------------------------------主过程-----------------------------------------------------
BEGIN
   L_SENDORADDRESS := \'<\' || P_SENDOR || \'>\';
   P_SPLITE_STR(P_RECEIVER);--处理邮件地址
   FOR K IN 1 .. MY_ADDRESS_LIST.COUNT LOOP
     P_EMAIL(L_SENDORADDRESS, MY_ADDRESS_LIST(K));
   END LOOP;
   /*处理邮件地址，根据逗号分割邮件*/
EXCEPTION
   WHEN OTHERS THEN
     RAISE;
END;
</pre></div>

<div class=\"codebody\"><pre>

 </pre></div>

<div class=\"codebody\"><pre>
<span style=\"COLOR: #0000bb; FONT-FAMILY: Verdana\">使用实例：</span></pre></div>

<blockquote> 
<div class=\"codebody\"><pre>
<span style=\"FONT-SIZE: xx-small; FONT-FAMILY: Verdana\">代码:</span></pre></div>

<div class=\"codebody\"><pre>

 </pre></div>

<hr>
<br><br><br><span style=\"FONT-SIZE: xx-small\"><code><span style=\"COLOR: #000000\"><span style=\"COLOR: #0000bb\">SQL</span><span style=\"COLOR: #007700\">></span><span style=\"COLOR: #0000bb\">set serverout on<br><br><br>
SQL</span><span style=\"COLOR: #007700\">> </span><span style=\"COLOR: #0000bb\">exec PROCSENDEMAIL</span><span style=\"COLOR: #007700\">(</span><span style=\"COLOR: #dd0000\">\'中文测试邮件\'</span><span style=\"COLOR: #007700\">,</span><span style=\"COLOR: #dd0000\">\'中文主题\'</span><span style=\"COLOR: #007700\">,</span><span style=\"COLOR: #dd0000\">\'space6212@163.com\'</span><span style=\"COLOR: #007700\">,</span><span style=\"COLOR: #dd0000\">\'space6212@163.com</span></span></code></span>

<div class=\"codebody\"><pre>
<code><span style=\"COLOR: #000000\"><span style=\"COLOR: #dd0000\">,susk@souchang.com\'</span><span style=\"COLOR: #007700\">,</span><span style=\"COLOR: #dd0000\">\'202.108.5.85\'</span><span style=\"COLOR: #007700\">,</span><span style=\"COLOR: #0000bb\">25</span><span style=\"COLOR: #007700\">,</span><span style=\"COLOR: #0000bb\">1</span><span style=\"COLOR: #007700\">,</span><span style=\"COLOR: #dd0000\">\'xxxx\'</span><span style=\"COLOR: #007700\">,</span><span style=\"COLOR: #dd0000\">\'xxxx\'</span><span style=\"COLOR: #007700\">,</span><span style=\"COLOR: #dd0000\">\'/tmp/a.jpg,/tmp/b.jpg\'</span><span style=\"COLOR: #007700\">,</span><span style=\"COLOR: #dd0000\">\'base64\'</span><span style=\"COLOR: #007700\">);


</span><span style=\"COLOR: #0000bb\">PL</span><span style=\"COLOR: #007700\">/</span><span style=\"COLOR: #0000bb\">SQL procedure successfully completed</span><span style=\"COLOR: #007700\">.</span></span></code>
</pre></div>
</blockquote>

<p><code><span style=\"COLOR: #000000\"><span style=\"COLOR: #007700\">上文就是关于oracle如何实现发送邮件的内容，作为新手了解如何发送邮件是必需的能力，但可以不断通过学习，并结合自己的工作经验来进行提升。</span></span></code></p>
						</div>
					',`creator`='admin',`created_at`='2019-12-11 21:46:03',`updated_at`='2019-12-11 21:46:03',`click`='2' WHERE `id` = 3 [ RunTime:0.0009s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000023s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000040s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.008472s ]
INFO: [ view_parse ] --END-- [ RunTime:0.008493s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000440s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000455s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000596s ]
INFO: [ app_end ] --END-- [ RunTime:0.000610s ]

[ 2019-12-12T12:32:14+08:00 ] ::1 /Home/Index/ShowDetail?id=3
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000679s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000821s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000845s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0021s ]
SQL: SELECT * FROM `articles` WHERE `id` = 3 LIMIT 1   [ RunTime:0.0006s ]

[ 2019-12-12T12:33:02+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000004s ]
INFO: [ app_init ] --END-- [ RunTime:0.000482s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000567s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000583s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000020s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000039s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.008787s ]
INFO: [ view_parse ] --END-- [ RunTime:0.008814s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000542s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000558s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000720s ]
INFO: [ app_end ] --END-- [ RunTime:0.000736s ]

[ 2019-12-12T12:33:03+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000021s ]
INFO: [ app_init ] --END-- [ RunTime:0.001347s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000738s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000757s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0017s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0024s ]

[ 2019-12-12T12:33:05+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000004s ]
INFO: [ app_init ] --END-- [ RunTime:0.000455s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000561s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000575s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0012s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0009s ]

[ 2019-12-12T12:33:07+08:00 ] ::1 /Home/Index/detail?id=3
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000529s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000666s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000686s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0014s ]
SQL: SELECT * FROM `articles` WHERE `id` = 3 LIMIT 1   [ RunTime:0.0005s ]
SQL: UPDATE `articles` SET `origin_url`='https://js.aizhan.com/data/oracle/10600.html',`title`='oracle如何实现发送邮件',`text`='<div class=\"container\">
							
<div class=\"codebody\"><pre>
在oracle中我们经常会因为任务需要发送<a href=\"https://js.aizhan.com/tags/youjian.html\" target=\"_blank\"><span style=\"color:#002FD9\"><a href=\"https://js.aizhan.com/tags/youjian.html\" target=\"_blank\"><span style=\"color:#002FD9\">邮件</span></a></span></a>，但是有很多新手小伙伴们不知道oracle如何实现发送邮件，接下来的内容中就让小编为大家介绍oracle发送邮件的方法吧，希望对你有所帮助。
CREATE OR REPLACE PROCEDURE PROCSENDEMAIL(P_TXT        VARCHAR2,
                                           P_SUB        VARCHAR2,
                                           P_SENDOR     VARCHAR2,
                                           P_RECEIVER   VARCHAR2,
                                           P_SERVER     VARCHAR2,
                                           P_PORT       NUMBER DEFAULT 25,
                                           P_NEED_SMTP INT DEFAULT 0,
                                           P_USER       VARCHAR2 DEFAULT NULL,
                                           P_PASS       VARCHAR2 DEFAULT NULL,
                                           P_FILENAME   VARCHAR2 DEFAULT NULL,
                                           P_ENCODE     VARCHAR2 DEFAULT \'bit 7\')
   AUTHID CURRENT_USER IS
   /*
   作用：用oracle发送邮件
   主要功能：1、支持多收件人。
             2、支持中文
             3、支持抄送人
             4、支持大于32K的附件
             5、支持多行正文
             6、支持多附件
             7、支持文本附件和二进制附件
             8、支持HTML格式
             8、支持
   作者：suk
   参数说明：
             p_txt :邮件正文
             p_sub: 邮件标题
             p_SendorAddress : 发送人邮件地址
             p_ReceiverAddress : 接收地址，可以同时发送到多个地址上，地址之间用\",\"或者\";\"隔开
             p_EmailServer : 邮件服务器地址，可以是域名或者IP
             p_Port ：邮件服务器端口
             p_need_smtp：是否需要smtp认证，0表示不需要，1表示需要
             p_user：smtp验证需要的用户名
             p_pass：smtp验证需要的密码
             p_filename：附件名称，必须包含完整的路径，如\"d:tempa.txt\"。
                         可以有多个附件，附件名称只见用逗号或者分号分隔
             p_encode：附件编码转换格式，其中 p_encode=\'bit 7\' 表示文本类型附件
                                              p_encode=\'base64\' 表示二进制类型附件
   注意：
         1、对于文本类型的附件，不能用base64的方式发送，否则出错
         2、对于多个附件只能用同一种格式发送
   */
   L_CRLF VARCHAR2(2) := UTL_TCP.CRLF;
   L_SENDORADDRESS VARCHAR2(4000);
   L_SPLITE         VARCHAR2(10) := \'++\';
   BOUNDARY             CONSTANT VARCHAR2(256) := \'-----BYSUK\';
   FIRST_BOUNDARY       CONSTANT VARCHAR2(256) := \'--\' || BOUNDARY || L_CRLF;
   LAST_BOUNDARY        CONSTANT VARCHAR2(256) := \'--\' || BOUNDARY || \'--\' ||
                                                 L_CRLF;
   MULTIPART_MIME_TYPE CONSTANT VARCHAR2(256) := \'multipart/mixed; boundary=\"\' ||
                                                 BOUNDARY || \'\"\';
   /* 以下部分是发送大二进制附件时用到的变量 */
   L_FIL                  BFILE;
   L_FILE_LEN             NUMBER;
   L_MODULO               NUMBER;
   L_PIECES               NUMBER;
   L_FILE_HANDLE          UTL_FILE.FILE_TYPE;
   L_AMT                  BINARY_INTEGER := 672 * 3; /* ensures proper format;   2016 */
   L_FILEPOS              PLS_INTEGER := 1; /* pointer for the file */
   L_CHUNKS               NUMBER;
   L_BUF                  RAW(2100);
   L_DATA                 RAW(2100);
   L_MAX_LINE_WIDTH       NUMBER := 54;
   L_DIRECTORY_BASE_NAME VARCHAR2(100) := \'DIR_FOR_SEND_MAIL\';
   L_LINE                 VARCHAR2(1000);
   L_MESG                 VARCHAR2(32767);
   /* 以上部分是发送大二进制附件时用到的变量 */
   TYPE ADDRESS_LIST IS TABLE OF VARCHAR2(100) INDEX BY BINARY_INTEGER;
   MY_ADDRESS_LIST ADDRESS_LIST;
   TYPE ACCT_LIST IS TABLE OF VARCHAR2(100) INDEX BY BINARY_INTEGER;
   MY_ACCT_LIST ACCT_LIST;
   -------------------------------------返回附件源文件所在目录或者名称--------------------------------------
   FUNCTION GET_FILE(P_FILE VARCHAR2,
                     P_GET   INT) RETURN VARCHAR2 IS
     --p_get=1 表示返回目录
     --p_get=2 表示返回文件名
     L_FILE VARCHAR2(1000);
   BEGIN
     IF INSTR(P_FILE, \'\') > 0 THEN
       --windows
       IF P_GET = 1 THEN
         L_FILE := SUBSTR(P_FILE, 1, INSTR(P_FILE, \'\', -1) - 1);
       ELSIF P_GET = 2 THEN
         L_FILE := SUBSTR(P_FILE, - (LENGTH(P_FILE) - INSTR(P_FILE, \'\', -1)));
       END IF;
     ELSIF INSTR(P_FILE, \'/\') > 0 THEN
       --linux/unix
       IF P_GET = 1 THEN
         L_FILE := SUBSTR(P_FILE, 1, INSTR(P_FILE, \'/\', -1) - 1);
       ELSIF P_GET = 2 THEN
         L_FILE := SUBSTR(P_FILE, - (LENGTH(P_FILE) - INSTR(P_FILE, \'/\', -1)));
       END IF;
     END IF;
     RETURN L_FILE;
   END;
   ---------------------------------------------删除directory------------------------------------
   PROCEDURE DROP_DIRECTORY(P_DIRECTORY_NAME VARCHAR2) IS
   BEGIN
     EXECUTE IMMEDIATE \'drop directory \' || P_DIRECTORY_NAME;
   EXCEPTION
     WHEN OTHERS THEN
       NULL;
   END;
   --------------------------------------------------创建directory-----------------------------------------
   PROCEDURE CREATE_DIRECTORY(P_DIRECTORY_NAME VARCHAR2,
                              P_DIR             VARCHAR2) IS
   BEGIN
     EXECUTE IMMEDIATE \'create directory \' || P_DIRECTORY_NAME || \' as \'\'\' ||
                       P_DIR || \'\'\'\';
     EXECUTE IMMEDIATE \'grant read,write on directory \' || P_DIRECTORY_NAME ||
                       \' to public\';
     EXCEPTION
     WHEN OTHERS THEN
       RAISE;
   END;
   --------------------------------------------分割邮件地址或者附件地址-----------------------------------
   PROCEDURE P_SPLITE_STR(P_STR          VARCHAR2,
                          P_SPLITE_FLAG INT DEFAULT 1) IS
     L_ADDR VARCHAR2(254) := \'\';
     L_LEN   INT;
     L_STR   VARCHAR2(4000);
     J       INT := 0; --表示邮件地址或者附件的个数
   BEGIN
     /*处理接收邮件地址列表，包括去空格、将;转换为,等*/
     L_STR := TRIM(RTRIM(REPLACE(REPLACE(P_STR, \';\', \',\'), \' \', \'\'), \',\'));
     L_LEN := LENGTH(L_STR);
     FOR I IN 1 .. L_LEN LOOP
       IF SUBSTR(L_STR, I, 1) <> \',\' THEN
         L_ADDR := L_ADDR || SUBSTR(L_STR, I, 1);
       ELSE
         J := J + 1;
         IF P_SPLITE_FLAG = 1 THEN --表示处理邮件地址       
           --前后需要加上\'<>\'，否则很多邮箱将不能发送邮件
           L_ADDR := \'<\' || L_ADDR || \'>\';
           --调用邮件发送过程
           MY_ADDRESS_LIST(J) := L_ADDR;
         ELSIF P_SPLITE_FLAG = 2 THEN --表示处理附件名称
           MY_ACCT_LIST(J) := L_ADDR;
         END IF;
         L_ADDR := \'\';
       END IF;
       IF I = L_LEN THEN
         J := J + 1;
         IF P_SPLITE_FLAG = 1 THEN
           --调用邮件发送过程
           L_ADDR := \'<\' || L_ADDR || \'>\';
           MY_ADDRESS_LIST(J) := L_ADDR;
         ELSIF P_SPLITE_FLAG = 2 THEN
           MY_ACCT_LIST(J) := L_ADDR;
         END IF;
       END IF;
     END LOOP;
   END;
   ------------------------------------------------写邮件头和邮件内容------------------------------------------
   PROCEDURE WRITE_DATA(P_CONN    IN OUT NOCOPY UTL_SMTP.CONNECTION,
                        P_NAME    IN VARCHAR2,
                        P_VALUE   IN VARCHAR2,
                        P_SPLITE VARCHAR2 DEFAULT \':\',
                        P_CRLF    VARCHAR2 DEFAULT L_CRLF) IS
   BEGIN
     /* utl_raw.cast_to_raw 对解决中文乱码问题很重要*/
     UTL_SMTP.WRITE_RAW_DATA(P_CONN, UTL_RAW.CAST_TO_RAW(CONVERT(P_NAME ||
                                                          P_SPLITE ||
                                                          P_VALUE ||
                                                          P_CRLF, \'ZHS16GBK\')));
   END;
   ----------------------------------------写MIME邮件尾部-----------------------------------------------------
   PROCEDURE <span id=\"TheWorldHiLightStyleID\" style=\"BACKGROUND: #ffff00; COLOR: #000000\">END_BOUNDARY</span>(CONN IN OUT NOCOPY UTL_SMTP.CONNECTION,
                          LAST IN BOOLEAN DEFAULT FALSE) IS
   BEGIN
     UTL_SMTP.WRITE_DATA(CONN, UTL_TCP.CRLF);
     IF (LAST) THEN
       UTL_SMTP.WRITE_DATA(CONN, LAST_BOUNDARY);
     END IF;
   END;
   ----------------------------------------------发送附件----------------------------------------------------
   PROCEDURE ATTACHMENT(CONN          IN OUT NOCOPY UTL_SMTP.CONNECTION,
                        MIME_TYPE     IN VARCHAR2 DEFAULT \'text/plain\',
                        INLINE        IN BOOLEAN DEFAULT TRUE,
                        FILENAME      IN VARCHAR2 DEFAULT \'t.txt\',
                        TRANSFER_ENC IN VARCHAR2 DEFAULT \'7 bit\',
                        DT_NAME       IN VARCHAR2 DEFAULT \'0\') IS

     L_FILENAME VARCHAR2(1000);
   BEGIN
     --写附件头
     UTL_SMTP.WRITE_DATA(CONN, FIRST_BOUNDARY);
     --设置附件格式
     WRITE_DATA(CONN, \'Content-Type\', MIME_TYPE);
     --如果文件名称非空，表示有附件
     DROP_DIRECTORY(DT_NAME);
     --创建directory
     CREATE_DIRECTORY(DT_NAME, GET_FILE(FILENAME, 1));
     --得到附件文件名称
     L_FILENAME := GET_FILE(FILENAME, 2);
     IF (INLINE) THEN
       WRITE_DATA(CONN, \'Content-Disposition\', \'inline; filename=\"\' ||
                   L_FILENAME || \'\"\');
     ELSE
       WRITE_DATA(CONN, \'Content-Disposition\', \'attachment; filename=\"\' ||
                   L_FILENAME || \'\"\');
     END IF;
     --设置附件的转换格式
     IF (TRANSFER_ENC IS NOT NULL) THEN
       WRITE_DATA(CONN, \'Content-Transfer-Encoding\', TRANSFER_ENC);
     END IF;

     UTL_SMTP.WRITE_DATA(CONN, UTL_TCP.CRLF);

     --begin 贴附件内容
     IF TRANSFER_ENC = \'bit 7\' THEN
       --如果是文本类型的附件
       BEGIN
         L_FILE_HANDLE := UTL_FILE.FOPEN(DT_NAME, L_FILENAME, \'r\'); --打开文件
         --把附件分成多份，这样可以发送超过32K的附件
         LOOP
           UTL_FILE.GET_LINE(L_FILE_HANDLE, L_LINE);
           L_MESG := L_LINE || L_CRLF;
           WRITE_DATA(CONN, \'\', L_MESG, \'\', \'\');
         END LOOP;
         UTL_FILE.FCLOSE(L_FILE_HANDLE);
         <span id=\"TheWorldHiLightStyleID\" style=\"BACKGROUND: #ffff00; COLOR: #000000\">END_BOUNDARY</span>(CONN);
       EXCEPTION
         WHEN OTHERS THEN
           UTL_FILE.FCLOSE(L_FILE_HANDLE);
           <span id=\"TheWorldHiLightStyleID\" style=\"BACKGROUND: #ffff00; COLOR: #000000\">END_BOUNDARY</span>(CONN);
           NULL;
       END; --结束文本类型附件的处理

     ELSIF TRANSFER_ENC = \'base64\' THEN
       --如果是二进制类型的附件
       BEGIN
         --把附件分成多份，这样可以发送超过32K的附件
         L_FILEPOS   := 1;--重置offset，在发送多个附件时，必须重置
         L_FIL       := BFILENAME(DT_NAME, L_FILENAME);
         L_FILE_LEN := DBMS_LOB.GETLENGTH(L_FIL);
         L_MODULO    := MOD(L_FILE_LEN, L_AMT);
         L_PIECES    := TRUNC(L_FILE_LEN / L_AMT);
         IF (L_MODULO <> 0) THEN
           L_PIECES := L_PIECES + 1;
         END IF;
         DBMS_LOB.FILEOPEN(L_FIL, DBMS_LOB.FILE_READONLY);
         DBMS_LOB.READ(L_FIL, L_AMT, L_FILEPOS, L_BUF);
         L_DATA := NULL;
         FOR I IN 1 .. L_PIECES LOOP
           L_FILEPOS   := I * L_AMT + 1;
           L_FILE_LEN := L_FILE_LEN - L_AMT;
           L_DATA      := UTL_RAW.CONCAT(L_DATA, L_BUF);
           L_CHUNKS    := TRUNC(UTL_RAW.LENGTH(L_DATA) / L_MAX_LINE_WIDTH);
           IF (I <> L_PIECES) THEN
             L_CHUNKS := L_CHUNKS - 1;
           END IF;
           UTL_SMTP.WRITE_RAW_DATA(CONN, UTL_ENCODE.BASE64_ENCODE(L_DATA));
           L_DATA := NULL;
           IF (L_FILE_LEN < L_AMT AND L_FILE_LEN > 0) THEN
             L_AMT := L_FILE_LEN;
           END IF;
           DBMS_LOB.READ(L_FIL, L_AMT, L_FILEPOS, L_BUF);
         END LOOP;
         DBMS_LOB.FILECLOSE(L_FIL);
         <span id=\"TheWorldHiLightStyleID\" style=\"BACKGROUND: #ffff00; COLOR: #000000\">END_BOUNDARY</span>(CONN);
       EXCEPTION
         WHEN OTHERS THEN
           DBMS_LOB.FILECLOSE(L_FIL);
           <span id=\"TheWorldHiLightStyleID\" style=\"BACKGROUND: #ffff00; COLOR: #000000\">END_BOUNDARY</span>(CONN);
           RAISE;
       END; --结束处理二进制附件

     END IF; --结束处理附件内容
     DROP_DIRECTORY(DT_NAME);
   END; --结束过程ATTACHMENT
   ---------------------------------------------真正发送邮件的过程--------------------------------------------
   PROCEDURE P_EMAIL(P_SENDORADDRESS2    VARCHAR2, --发送地址
                     P_RECEIVERADDRESS2 VARCHAR2) --接受地址
    IS
     L_CONN UTL_SMTP.CONNECTION; --定义连接
   BEGIN
     /*初始化邮件服务器信息，连接邮件服务器*/
     L_CONN := UTL_SMTP.OPEN_CONNECTION(P_SERVER, P_PORT);
     UTL_SMTP.HELO(L_CONN, P_SERVER);
     /* smtp服务器登录校验 */
     IF P_NEED_SMTP = 1 THEN
       UTL_SMTP.COMMAND(L_CONN, \'AUTH LOGIN\', \'\');
       UTL_SMTP.COMMAND(L_CONN, UTL_RAW.CAST_TO_VARCHAR2(UTL_ENCODE.BASE64_ENCODE(UTL_RAW.CAST_TO_RAW(P_USER))));
       UTL_SMTP.COMMAND(L_CONN, UTL_RAW.CAST_TO_VARCHAR2(UTL_ENCODE.BASE64_ENCODE(UTL_RAW.CAST_TO_RAW(P_PASS))));
     END IF;

     /*设置发送地址和接收地址*/
     UTL_SMTP.MAIL(L_CONN, P_SENDORADDRESS2);
     UTL_SMTP.RCPT(L_CONN, P_RECEIVERADDRESS2);

     /*设置邮件头*/
     UTL_SMTP.OPEN_DATA(L_CONN);

     WRITE_DATA(L_CONN, \'Date\', TO_CHAR(SYSDATE, \'yyyy-mm-dd hh24:mi:ss\'));
     /*设置发送人*/
     WRITE_DATA(L_CONN, \'From\', P_SENDOR);
     /*设置接收人*/
     WRITE_DATA(L_CONN, \'To\', P_RECEIVER);
     /*设置邮件主题*/
     WRITE_DATA(L_CONN, \'Subject\', P_SUB);

     WRITE_DATA(L_CONN, \'Content-Type\', MULTIPART_MIME_TYPE);
     UTL_SMTP.WRITE_DATA(L_CONN, UTL_TCP.CRLF);
     UTL_SMTP.WRITE_DATA(L_CONN, FIRST_BOUNDARY);
     WRITE_DATA(L_CONN, \'Content-Type\', \'text/plain;charset=gb2312\');
     --单独空一行，否则，正文内容不显示
     UTL_SMTP.WRITE_DATA(L_CONN, UTL_TCP.CRLF);
     /* 设置邮件正文
       把分隔符还原成chr(10)。这主要是为了shell中调用该过程，如果有多行，则先把多行的内容合并成一行，</pre></div>

<div class=\"codebody\"><pre>
并用 l_splite分隔  然后用 l_crlf替换chr(10)。这一步是必须的，否则将不能发送邮件正文有多行的邮件

     */
     WRITE_DATA(L_CONN, \'\', REPLACE(REPLACE(P_TXT, L_SPLITE, CHR(10)), CHR(10), L_CRLF), \'\', \'\');
     <span id=\"TheWorldHiLightStyleID\" style=\"BACKGROUND: #ffff00; COLOR: #000000\">END_BOUNDARY</span>(L_CONN);

   --如果文件名称不为空，则发送附件
     IF (P_FILENAME IS NOT NULL) THEN
       --根据逗号或者分号拆分附件地址
       P_SPLITE_STR(P_FILENAME, 2);
       --循环发送附件(在同一个邮件中)
       FOR K IN 1 .. MY_ACCT_LIST.COUNT LOOP
         ATTACHMENT(CONN => L_CONN, FILENAME => MY_ACCT_LIST(K), TRANSFER_ENC => </pre></div>

<div class=\"codebody\"><pre>
P_ENCODE, DT_NAME => L_DIRECTORY_BASE_NAME ||
                                TO_CHAR(K));
       END LOOP;
     END IF;

     /*关闭数据写入*/
     UTL_SMTP.CLOSE_DATA(L_CONN);
     /*关闭连接*/
     UTL_SMTP.QUIT(L_CONN);

     /*异常处理*/
   EXCEPTION
     WHEN OTHERS THEN
       NULL;
       RAISE;

   END;
   ---------------------------------------------------主过程-----------------------------------------------------
BEGIN
   L_SENDORADDRESS := \'<\' || P_SENDOR || \'>\';
   P_SPLITE_STR(P_RECEIVER);--处理邮件地址
   FOR K IN 1 .. MY_ADDRESS_LIST.COUNT LOOP
     P_EMAIL(L_SENDORADDRESS, MY_ADDRESS_LIST(K));
   END LOOP;
   /*处理邮件地址，根据逗号分割邮件*/
EXCEPTION
   WHEN OTHERS THEN
     RAISE;
END;
</pre></div>

<div class=\"codebody\"><pre>

 </pre></div>

<div class=\"codebody\"><pre>
<span style=\"COLOR: #0000bb; FONT-FAMILY: Verdana\">使用实例：</span></pre></div>

<blockquote> 
<div class=\"codebody\"><pre>
<span style=\"FONT-SIZE: xx-small; FONT-FAMILY: Verdana\">代码:</span></pre></div>

<div class=\"codebody\"><pre>

 </pre></div>

<hr>
<br><br><br><span style=\"FONT-SIZE: xx-small\"><code><span style=\"COLOR: #000000\"><span style=\"COLOR: #0000bb\">SQL</span><span style=\"COLOR: #007700\">></span><span style=\"COLOR: #0000bb\">set serverout on<br><br><br>
SQL</span><span style=\"COLOR: #007700\">> </span><span style=\"COLOR: #0000bb\">exec PROCSENDEMAIL</span><span style=\"COLOR: #007700\">(</span><span style=\"COLOR: #dd0000\">\'中文测试邮件\'</span><span style=\"COLOR: #007700\">,</span><span style=\"COLOR: #dd0000\">\'中文主题\'</span><span style=\"COLOR: #007700\">,</span><span style=\"COLOR: #dd0000\">\'space6212@163.com\'</span><span style=\"COLOR: #007700\">,</span><span style=\"COLOR: #dd0000\">\'space6212@163.com</span></span></code></span>

<div class=\"codebody\"><pre>
<code><span style=\"COLOR: #000000\"><span style=\"COLOR: #dd0000\">,susk@souchang.com\'</span><span style=\"COLOR: #007700\">,</span><span style=\"COLOR: #dd0000\">\'202.108.5.85\'</span><span style=\"COLOR: #007700\">,</span><span style=\"COLOR: #0000bb\">25</span><span style=\"COLOR: #007700\">,</span><span style=\"COLOR: #0000bb\">1</span><span style=\"COLOR: #007700\">,</span><span style=\"COLOR: #dd0000\">\'xxxx\'</span><span style=\"COLOR: #007700\">,</span><span style=\"COLOR: #dd0000\">\'xxxx\'</span><span style=\"COLOR: #007700\">,</span><span style=\"COLOR: #dd0000\">\'/tmp/a.jpg,/tmp/b.jpg\'</span><span style=\"COLOR: #007700\">,</span><span style=\"COLOR: #dd0000\">\'base64\'</span><span style=\"COLOR: #007700\">);


</span><span style=\"COLOR: #0000bb\">PL</span><span style=\"COLOR: #007700\">/</span><span style=\"COLOR: #0000bb\">SQL procedure successfully completed</span><span style=\"COLOR: #007700\">.</span></span></code>
</pre></div>
</blockquote>

<p><code><span style=\"COLOR: #000000\"><span style=\"COLOR: #007700\">上文就是关于oracle如何实现发送邮件的内容，作为新手了解如何发送邮件是必需的能力，但可以不断通过学习，并结合自己的工作经验来进行提升。</span></span></code></p>
						</div>
					',`creator`='admin',`created_at`='2019-12-12 12:32:41',`updated_at`='2019-12-12 12:32:41',`click`='1' WHERE `id` = 3 [ RunTime:0.0010s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000021s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000038s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.008931s ]
INFO: [ view_parse ] --END-- [ RunTime:0.008954s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000543s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000562s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000732s ]
INFO: [ app_end ] --END-- [ RunTime:0.000750s ]

[ 2019-12-12T12:33:07+08:00 ] ::1 /Home/Index/ShowDetail?id=3
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000641s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000649s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000666s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0024s ]
SQL: SELECT * FROM `articles` WHERE `id` = 3 LIMIT 1   [ RunTime:0.0006s ]

[ 2019-12-12T13:20:57+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000006s ]
INFO: [ app_init ] --END-- [ RunTime:0.000790s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001006s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001032s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000036s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000087s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.015433s ]
INFO: [ view_parse ] --END-- [ RunTime:0.015472s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.001041s ]
INFO: [ view_filter ] --END-- [ RunTime:0.001065s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001293s ]
INFO: [ app_end ] --END-- [ RunTime:0.001321s ]

[ 2019-12-12T13:20:57+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000718s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000796s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000817s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0018s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0014s ]

[ 2019-12-12T13:34:30+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000006s ]
INFO: [ app_init ] --END-- [ RunTime:0.000800s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000842s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000864s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000026s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000055s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.012343s ]
INFO: [ view_parse ] --END-- [ RunTime:0.012370s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000707s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000724s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000847s ]
INFO: [ app_end ] --END-- [ RunTime:0.000864s ]

[ 2019-12-12T13:34:30+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.001328s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000862s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000886s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0021s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0014s ]

[ 2019-12-12T13:35:10+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000523s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000899s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000937s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000021s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000041s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.009906s ]
INFO: [ view_parse ] --END-- [ RunTime:0.010013s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000633s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000653s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000741s ]
INFO: [ app_end ] --END-- [ RunTime:0.000758s ]

[ 2019-12-12T13:35:10+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.000850s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000936s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000964s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0017s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0013s ]

[ 2019-12-12T13:35:42+08:00 ] 192.168.3.35 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.000762s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000782s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000808s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000042s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000075s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.017050s ]
INFO: [ view_parse ] --END-- [ RunTime:0.017086s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000595s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000615s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000755s ]
INFO: [ app_end ] --END-- [ RunTime:0.000775s ]

[ 2019-12-12T13:35:43+08:00 ] 192.168.3.35 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000003s ]
INFO: [ app_init ] --END-- [ RunTime:0.000423s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000537s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000551s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0013s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0009s ]

[ 2019-12-12T13:35:47+08:00 ] 192.168.3.35 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000004s ]
INFO: [ app_init ] --END-- [ RunTime:0.000460s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000531s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000547s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000016s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000031s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.008703s ]
INFO: [ view_parse ] --END-- [ RunTime:0.008728s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000428s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000441s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000577s ]
INFO: [ app_end ] --END-- [ RunTime:0.000591s ]

[ 2019-12-12T13:35:47+08:00 ] 192.168.3.35 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000004s ]
INFO: [ app_init ] --END-- [ RunTime:0.000506s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000591s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000605s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0013s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0011s ]

[ 2019-12-12T13:35:50+08:00 ] 192.168.3.35 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000003s ]
INFO: [ app_init ] --END-- [ RunTime:0.000448s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000503s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000518s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000015s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000029s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.007947s ]
INFO: [ view_parse ] --END-- [ RunTime:0.007970s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000491s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000507s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000649s ]
INFO: [ app_end ] --END-- [ RunTime:0.000665s ]

[ 2019-12-12T13:35:50+08:00 ] 192.168.3.35 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000004s ]
INFO: [ app_init ] --END-- [ RunTime:0.000465s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000526s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000539s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0012s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0009s ]

[ 2019-12-12T13:35:59+08:00 ] 192.168.3.35 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000004s ]
INFO: [ app_init ] --END-- [ RunTime:0.000467s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000541s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000557s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000015s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000029s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.008077s ]
INFO: [ view_parse ] --END-- [ RunTime:0.008103s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000506s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000521s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000633s ]
INFO: [ app_end ] --END-- [ RunTime:0.000648s ]

[ 2019-12-12T13:35:59+08:00 ] 192.168.3.35 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000004s ]
INFO: [ app_init ] --END-- [ RunTime:0.000474s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000526s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000541s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0015s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0010s ]

[ 2019-12-12T13:36:01+08:00 ] 192.168.3.35 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.000471s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000505s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000519s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000017s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000033s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.008199s ]
INFO: [ view_parse ] --END-- [ RunTime:0.008220s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000469s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000483s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000640s ]
INFO: [ app_end ] --END-- [ RunTime:0.000655s ]

[ 2019-12-12T13:36:01+08:00 ] 192.168.3.35 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000004s ]
INFO: [ app_init ] --END-- [ RunTime:0.000473s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000514s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000527s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0014s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0009s ]

[ 2019-12-12T13:39:33+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000006s ]
INFO: [ app_init ] --END-- [ RunTime:0.000891s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000934s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000957s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000023s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000045s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.013328s ]
INFO: [ view_parse ] --END-- [ RunTime:0.013400s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000875s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000894s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001086s ]
INFO: [ app_end ] --END-- [ RunTime:0.001107s ]

[ 2019-12-12T13:39:33+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000587s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000644s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000662s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0010s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0011s ]

[ 2019-12-12T13:45:10+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000004s ]
INFO: [ app_init ] --END-- [ RunTime:0.000651s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000903s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000930s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000024s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000060s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.011822s ]
INFO: [ view_parse ] --END-- [ RunTime:0.011848s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000805s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000833s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001000s ]
INFO: [ app_end ] --END-- [ RunTime:0.001019s ]

[ 2019-12-12T13:45:10+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.000744s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.002081s ]
INFO: [ app_begin ] --END-- [ RunTime:0.002121s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0014s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0014s ]

[ 2019-12-12T13:45:35+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000606s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000657s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000681s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000024s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000053s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.011642s ]
INFO: [ view_parse ] --END-- [ RunTime:0.011672s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000535s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000555s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000735s ]
INFO: [ app_end ] --END-- [ RunTime:0.000755s ]

[ 2019-12-12T13:45:35+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000013s ]
INFO: [ app_init ] --END-- [ RunTime:0.000919s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000874s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000900s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0012s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0015s ]

[ 2019-12-12T13:45:44+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000504s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000613s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000647s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000062s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000148s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.010568s ]
INFO: [ view_parse ] --END-- [ RunTime:0.010659s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000672s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000695s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000774s ]
INFO: [ app_end ] --END-- [ RunTime:0.000792s ]

[ 2019-12-12T13:45:44+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000799s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000853s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000879s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0012s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0015s ]

[ 2019-12-12T13:47:59+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000018s ]
INFO: [ app_init ] --END-- [ RunTime:0.000743s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000807s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000832s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000020s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000043s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.012299s ]
INFO: [ view_parse ] --END-- [ RunTime:0.012426s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.001992s ]
INFO: [ view_filter ] --END-- [ RunTime:0.002018s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000996s ]
INFO: [ app_end ] --END-- [ RunTime:0.001014s ]

[ 2019-12-12T13:47:59+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.000775s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000926s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000955s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0022s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0013s ]

[ 2019-12-12T13:48:10+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000006s ]
INFO: [ app_init ] --END-- [ RunTime:0.000562s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000635s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000655s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000022s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000050s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.011507s ]
INFO: [ view_parse ] --END-- [ RunTime:0.011550s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000519s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000538s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000796s ]
INFO: [ app_end ] --END-- [ RunTime:0.000814s ]

[ 2019-12-12T13:48:10+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000009s ]
INFO: [ app_init ] --END-- [ RunTime:0.000844s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000944s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000985s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0013s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0014s ]

[ 2019-12-12T13:54:56+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000698s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000796s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000816s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000023s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000044s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.012469s ]
INFO: [ view_parse ] --END-- [ RunTime:0.012521s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000779s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000796s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000947s ]
INFO: [ app_end ] --END-- [ RunTime:0.000965s ]

[ 2019-12-12T13:54:56+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.000801s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000911s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000979s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0014s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0028s ]

[ 2019-12-12T13:56:46+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000006s ]
INFO: [ app_init ] --END-- [ RunTime:0.000544s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001689s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001760s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000018s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000036s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.010253s ]
INFO: [ view_parse ] --END-- [ RunTime:0.010302s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000536s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000552s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000709s ]
INFO: [ app_end ] --END-- [ RunTime:0.000726s ]

[ 2019-12-12T13:56:47+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000703s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000782s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000807s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0012s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0014s ]

[ 2019-12-12T13:57:36+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000026s ]
INFO: [ app_init ] --END-- [ RunTime:0.001436s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000865s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000888s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000021s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000044s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.012111s ]
INFO: [ view_parse ] --END-- [ RunTime:0.012141s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000747s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000765s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000913s ]
INFO: [ app_end ] --END-- [ RunTime:0.000931s ]

[ 2019-12-12T13:57:36+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000009s ]
INFO: [ app_init ] --END-- [ RunTime:0.000751s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000981s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001008s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0032s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0013s ]

[ 2019-12-12T13:57:59+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000004s ]
INFO: [ app_init ] --END-- [ RunTime:0.000463s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000529s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000545s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000018s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000034s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.008732s ]
INFO: [ view_parse ] --END-- [ RunTime:0.008769s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000475s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000491s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000666s ]
INFO: [ app_end ] --END-- [ RunTime:0.000682s ]

[ 2019-12-12T13:57:59+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000661s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000776s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000798s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0010s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0011s ]

[ 2019-12-12T13:59:16+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000531s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000638s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000660s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000024s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000048s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.010523s ]
INFO: [ view_parse ] --END-- [ RunTime:0.010569s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000568s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000584s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000707s ]
INFO: [ app_end ] --END-- [ RunTime:0.000724s ]

[ 2019-12-12T13:59:16+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.000920s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001026s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001053s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0011s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0015s ]

[ 2019-12-12T14:00:24+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000713s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000968s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000995s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000022s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000043s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.011788s ]
INFO: [ view_parse ] --END-- [ RunTime:0.011835s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000799s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000818s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001034s ]
INFO: [ app_end ] --END-- [ RunTime:0.001062s ]

[ 2019-12-12T14:00:24+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.001465s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000782s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000804s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0012s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0014s ]

[ 2019-12-12T14:00:51+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000507s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000580s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000597s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000020s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000040s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.009004s ]
INFO: [ view_parse ] --END-- [ RunTime:0.009047s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.001380s ]
INFO: [ view_filter ] --END-- [ RunTime:0.001429s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001320s ]
INFO: [ app_end ] --END-- [ RunTime:0.001357s ]

[ 2019-12-12T14:00:51+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.000747s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000858s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000882s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0010s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0013s ]

[ 2019-12-12T14:01:18+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000490s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000567s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000581s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0011s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0009s ]

[ 2019-12-12T14:01:20+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000011s ]
INFO: [ app_init ] --END-- [ RunTime:0.001556s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000595s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000615s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000018s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000035s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.009822s ]
INFO: [ view_parse ] --END-- [ RunTime:0.009851s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.001184s ]
INFO: [ view_filter ] --END-- [ RunTime:0.001201s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000721s ]
INFO: [ app_end ] --END-- [ RunTime:0.000739s ]

[ 2019-12-12T14:01:20+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000751s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000847s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000874s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0017s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0013s ]

[ 2019-12-12T14:01:24+08:00 ] ::1 /Home/Index/detail?id=10
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000572s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000657s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000677s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0011s ]
SQL: SELECT * FROM `articles` WHERE `id` = 10 LIMIT 1   [ RunTime:0.0004s ]
SQL: UPDATE `articles` SET `origin_url`='https://js.aizhan.com/data/oracle/10558.html',`title`='oracle如何使用nvl函数',`text`='<div class=\"container\">
							
<p>关于nvl<a href=\"https://js.aizhan.com/tags/hanshu.html\" target=\"_blank\"><span style=\"color:#002FD9\"><a href=\"https://js.aizhan.com/tags/hanshu.html\" target=\"_blank\"><span style=\"color:#002FD9\">函数</span></a></span></a>的了解你知道多少呢？在oracle中难免会需要使用到nvl函数，那么你知道oracle如何使用nvl函数吗？今天小编就将为大家解答oracle如何使用nvl函数这个问题，大家可以参考一下。</p>

<p><a href=\"https://js.aizhan.com/tags/oracle.html\" target=\"_blank\"><span style=\"color:#002FD9\"><a href=\"https://js.aizhan.com/tags/oracle.html\" target=\"_blank\"><span style=\"color:#002FD9\">Oracle</span></a></span></a>的Nvl函数</p>

<p>nvl( ) 函数</p>

<p>从两个表达式返回一个非null 值。</p>

<p>语法</p>

<p>NVL(eExpression1, eExpression2)<br><br>
参数</p>

<p>eExpression1, eExpression2</p>

<p>如 果 eExpression1 的计算结果为 null 值，则 NVL( ) 返回 eExpression2。如果 eExpression1 的计算结果不是 null 值，则返回 eExpression1。eExpression1 和 eExpression2 可以是任意一种数据类型。如果 eExpression1 与 eExpression2 的结果皆为 null 值，则 NVL( ) 返回 .NULL.。</p>

<p>返回值类型</p>

<p>字符型、日期型、日期时间型、数值型、货币型、逻辑型或 null 值</p>

<p>说明</p>

<p>在不支持 null 值或 null 值无关紧要的情况下，可以使用 NVL( ) 来移去计算或操作中的 null 值。</p>

<p>select nvl(a.name,\'空得\') as name from student a joinschool b on a.ID=b.ID</p>

<p>注意：两个参数得类型要匹配</p>

<p>问：什么是NULL？</p>

<p>答：在我们不知道具体有什么数据的时候，也即未知，可以用NULL，</p>

<p>我们称它为空，ORACLE中，含有空值的表列长度为零。</p>

<p>ORACLE允许任何一种数据类型的字段为空，除了以下两种情况：</p>

<p>1、主键字段（primary key），</p>

<p>2、定义时已经加了NOT NULL限制条件的字段</p>

<p>说明：</p>

<p>1、等价于没有任何值、是未知数。</p>

<p>2、NULL与0、空字符串、空格都不同。</p>

<p>3、对空值做加、减、乘、除等运算操作，结果仍为空。</p>

<p>4、NULL的处理使用NVL函数。</p>

<p>5、比较时使用关键字用“is null”和“is not null”。</p>

<p>6、空值不能被索引，所以查询时有些符合条件的数据可能查不出来，</p>

<p>count(*)中，用nvl(列名,0)处理后再查。</p>

<p>7、排序时比其他数据都大（索引默认是降序排列，小→大），</p>

<p>所以NULL值总是排在最后。</p>

<p>以上就是关于oracle如何使用nvl函数的内容，在上文中，小编为大家做了简单的介绍。其实，在日常的操作oracle过程中是经常使可以使用的。</p>
						</div>
					',`creator`='admin',`created_at`='2019-12-02 12:32:52',`updated_at`='2019-12-12 12:32:52',`click`='1' WHERE `id` = 10 [ RunTime:0.0005s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000022s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000041s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.010243s ]
INFO: [ view_parse ] --END-- [ RunTime:0.010277s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000621s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000641s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000756s ]
INFO: [ app_end ] --END-- [ RunTime:0.000775s ]

[ 2019-12-12T14:01:25+08:00 ] ::1 /Home/Index/ShowDetail?id=10
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.000739s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000842s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000866s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0011s ]
SQL: SELECT * FROM `articles` WHERE `id` = 10 LIMIT 1   [ RunTime:0.0004s ]

[ 2019-12-12T14:01:53+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000006s ]
INFO: [ app_init ] --END-- [ RunTime:0.000555s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001600s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001729s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000021s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000046s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.010527s ]
INFO: [ view_parse ] --END-- [ RunTime:0.010558s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000596s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000617s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000747s ]
INFO: [ app_end ] --END-- [ RunTime:0.000767s ]

[ 2019-12-12T14:01:53+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.000837s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001288s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001380s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0014s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0021s ]

[ 2019-12-12T14:02:01+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000642s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000713s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000739s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000023s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000045s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.010482s ]
INFO: [ view_parse ] --END-- [ RunTime:0.010514s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000545s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000565s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000908s ]
INFO: [ app_end ] --END-- [ RunTime:0.000929s ]

[ 2019-12-12T14:02:01+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000010s ]
INFO: [ app_init ] --END-- [ RunTime:0.001019s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000890s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000916s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0011s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0015s ]

[ 2019-12-12T14:02:08+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000004s ]
INFO: [ app_init ] --END-- [ RunTime:0.000488s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000691s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000708s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0010s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0009s ]

[ 2019-12-12T14:02:22+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000025s ]
INFO: [ app_init ] --END-- [ RunTime:0.001014s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000589s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000611s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000021s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000042s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.010041s ]
INFO: [ view_parse ] --END-- [ RunTime:0.010073s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000523s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000545s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000696s ]
INFO: [ app_end ] --END-- [ RunTime:0.000715s ]

[ 2019-12-12T14:02:22+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000009s ]
INFO: [ app_init ] --END-- [ RunTime:0.000825s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000900s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000929s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0024s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0016s ]

[ 2019-12-12T14:02:23+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000503s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000590s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000606s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0011s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0010s ]

[ 2019-12-12T14:02:59+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000709s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001665s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001712s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000021s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000045s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.012155s ]
INFO: [ view_parse ] --END-- [ RunTime:0.012188s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000843s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000865s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.002017s ]
INFO: [ app_end ] --END-- [ RunTime:0.002036s ]

[ 2019-12-12T14:02:59+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.000714s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000782s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000803s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0010s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0013s ]

[ 2019-12-12T14:03:00+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000022s ]
INFO: [ app_init ] --END-- [ RunTime:0.000530s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000543s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000557s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0012s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0010s ]

[ 2019-12-12T14:03:17+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000018s ]
INFO: [ app_init ] --END-- [ RunTime:0.000573s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000587s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000605s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000018s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000036s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.009437s ]
INFO: [ view_parse ] --END-- [ RunTime:0.009464s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000481s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000497s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000664s ]
INFO: [ app_end ] --END-- [ RunTime:0.000679s ]

[ 2019-12-12T14:03:17+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000717s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001900s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001964s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0011s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0013s ]

[ 2019-12-12T14:03:19+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000004s ]
INFO: [ app_init ] --END-- [ RunTime:0.000504s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000502s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000517s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0010s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0010s ]

[ 2019-12-12T14:03:42+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000004s ]
INFO: [ app_init ] --END-- [ RunTime:0.000435s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000546s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000562s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000018s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000034s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.009968s ]
INFO: [ view_parse ] --END-- [ RunTime:0.010067s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000780s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000802s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000623s ]
INFO: [ app_end ] --END-- [ RunTime:0.000639s ]

[ 2019-12-12T14:03:42+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.000716s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000811s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000832s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0010s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0012s ]

[ 2019-12-12T14:03:43+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000006s ]
INFO: [ app_init ] --END-- [ RunTime:0.000495s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000528s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000543s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0008s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0009s ]

[ 2019-12-12T14:03:45+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000547s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000980s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001034s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000019s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000036s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.008187s ]
INFO: [ view_parse ] --END-- [ RunTime:0.008215s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.001382s ]
INFO: [ view_filter ] --END-- [ RunTime:0.001455s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001129s ]
INFO: [ app_end ] --END-- [ RunTime:0.001201s ]

[ 2019-12-12T14:03:45+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.000686s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000816s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000837s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0012s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0012s ]

[ 2019-12-12T14:03:47+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000004s ]
INFO: [ app_init ] --END-- [ RunTime:0.000470s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000529s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000543s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0008s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0009s ]

[ 2019-12-12T14:04:02+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000490s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000531s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000548s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000018s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000036s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.010165s ]
INFO: [ view_parse ] --END-- [ RunTime:0.010194s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000515s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000532s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000783s ]
INFO: [ app_end ] --END-- [ RunTime:0.000800s ]

[ 2019-12-12T14:04:02+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000006s ]
INFO: [ app_init ] --END-- [ RunTime:0.000558s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000609s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000625s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0010s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0011s ]

[ 2019-12-12T14:04:03+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000004s ]
INFO: [ app_init ] --END-- [ RunTime:0.000434s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000504s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000517s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0010s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0010s ]

[ 2019-12-12T14:04:16+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000437s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000492s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000507s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000017s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000033s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.007856s ]
INFO: [ view_parse ] --END-- [ RunTime:0.007876s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000447s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000461s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000657s ]
INFO: [ app_end ] --END-- [ RunTime:0.000672s ]

[ 2019-12-12T14:04:16+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000006s ]
INFO: [ app_init ] --END-- [ RunTime:0.000508s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000569s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000585s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0010s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0009s ]

[ 2019-12-12T14:04:18+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000004s ]
INFO: [ app_init ] --END-- [ RunTime:0.000458s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000504s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000517s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0010s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0009s ]

[ 2019-12-12T14:04:26+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000004s ]
INFO: [ app_init ] --END-- [ RunTime:0.000429s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000494s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000510s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000031s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000047s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.009258s ]
INFO: [ view_parse ] --END-- [ RunTime:0.009285s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000503s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000519s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000651s ]
INFO: [ app_end ] --END-- [ RunTime:0.000668s ]

[ 2019-12-12T14:04:26+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000601s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000671s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000688s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0010s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0010s ]

[ 2019-12-12T14:04:27+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000004s ]
INFO: [ app_init ] --END-- [ RunTime:0.000416s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000517s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000530s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0010s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0009s ]

[ 2019-12-12T14:04:43+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000545s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000590s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000611s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000022s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000047s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.011403s ]
INFO: [ view_parse ] --END-- [ RunTime:0.011434s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000567s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000586s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000717s ]
INFO: [ app_end ] --END-- [ RunTime:0.000737s ]

[ 2019-12-12T14:04:43+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.001241s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000745s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000768s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0010s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0013s ]

[ 2019-12-12T14:04:44+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000030s ]
INFO: [ app_init ] --END-- [ RunTime:0.000671s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000538s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000553s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0011s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0010s ]

[ 2019-12-12T14:05:04+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000006s ]
INFO: [ app_init ] --END-- [ RunTime:0.000774s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001505s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001613s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000020s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000041s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.011525s ]
INFO: [ view_parse ] --END-- [ RunTime:0.011555s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000816s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000836s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000972s ]
INFO: [ app_end ] --END-- [ RunTime:0.000993s ]

[ 2019-12-12T14:05:04+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.000839s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000972s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000999s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0011s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0014s ]

[ 2019-12-12T14:05:05+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000004s ]
INFO: [ app_init ] --END-- [ RunTime:0.000462s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000515s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000529s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0009s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0010s ]

[ 2019-12-12T14:20:13+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000010s ]
INFO: [ app_init ] --END-- [ RunTime:0.001266s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000977s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001002s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000027s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000050s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.014170s ]
INFO: [ view_parse ] --END-- [ RunTime:0.014204s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000953s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000976s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001170s ]
INFO: [ app_end ] --END-- [ RunTime:0.001193s ]

[ 2019-12-12T14:20:13+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000006s ]
INFO: [ app_init ] --END-- [ RunTime:0.000673s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000727s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000746s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0010s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0031s ]

[ 2019-12-12T14:20:21+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000006s ]
INFO: [ app_init ] --END-- [ RunTime:0.000669s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001064s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001084s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0011s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0023s ]

[ 2019-12-12T14:21:22+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000779s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000868s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000887s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000029s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000051s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.016612s ]
INFO: [ view_parse ] --END-- [ RunTime:0.016647s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.001405s ]
INFO: [ view_filter ] --END-- [ RunTime:0.001427s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001397s ]
INFO: [ app_end ] --END-- [ RunTime:0.001415s ]

[ 2019-12-12T14:21:22+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000896s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001018s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001037s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0010s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0026s ]

[ 2019-12-12T14:22:08+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.001141s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001076s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001100s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000024s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000050s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.013629s ]
INFO: [ view_parse ] --END-- [ RunTime:0.013665s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.001046s ]
INFO: [ view_filter ] --END-- [ RunTime:0.001069s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001143s ]
INFO: [ app_end ] --END-- [ RunTime:0.001165s ]

[ 2019-12-12T14:22:08+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.001000s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001108s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001130s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0013s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0028s ]

[ 2019-12-12T14:22:10+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000699s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000783s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000801s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000021s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000044s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.011830s ]
INFO: [ view_parse ] --END-- [ RunTime:0.011854s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000808s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000826s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000922s ]
INFO: [ app_end ] --END-- [ RunTime:0.000939s ]

[ 2019-12-12T14:22:11+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000006s ]
INFO: [ app_init ] --END-- [ RunTime:0.000823s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.002725s ]
INFO: [ app_begin ] --END-- [ RunTime:0.002748s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0009s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0026s ]

[ 2019-12-12T14:22:12+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000006s ]
INFO: [ app_init ] --END-- [ RunTime:0.000788s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000784s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000803s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000021s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000040s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.011675s ]
INFO: [ view_parse ] --END-- [ RunTime:0.011701s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000796s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000812s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000945s ]
INFO: [ app_end ] --END-- [ RunTime:0.000961s ]

[ 2019-12-12T14:22:12+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000006s ]
INFO: [ app_init ] --END-- [ RunTime:0.000825s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000901s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000919s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0009s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0024s ]

[ 2019-12-12T14:22:13+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000959s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001088s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001112s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000024s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000051s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.014288s ]
INFO: [ view_parse ] --END-- [ RunTime:0.014327s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.001279s ]
INFO: [ view_filter ] --END-- [ RunTime:0.001307s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001353s ]
INFO: [ app_end ] --END-- [ RunTime:0.001376s ]

[ 2019-12-12T14:22:13+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000890s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000935s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000954s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0010s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0026s ]

[ 2019-12-12T14:22:15+08:00 ] 192.168.3.91 /Home/Index/detail?id=34
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000013s ]
INFO: [ app_init ] --END-- [ RunTime:0.002040s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001686s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001728s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0015s ]
SQL: SELECT * FROM `articles` WHERE `id` = 34 LIMIT 1   [ RunTime:0.0006s ]
SQL: UPDATE `articles` SET `origin_url`='https://js.aizhan.com/data/oracle/10562.html',`title`='Oracle中如何实现字符串连接',`text`='<div class=\"container\">
							
<p>在oracle中我们经常会使用<a href=\"https://js.aizhan.com/tags/zifuchuan.html\" target=\"_blank\"><span style=\"color:#002FD9\"><a href=\"https://js.aizhan.com/tags/zifuchuan.html\" target=\"_blank\"><span style=\"color:#002FD9\">字符串</span></a></span></a>，但是有时候需要实现字符串连接，这个问题就难倒了不少的朋友，那么我们现在就去看看<a href=\"https://js.aizhan.com/tags/oracle.html\" target=\"_blank\"><span style=\"color:#002FD9\"><a href=\"https://js.aizhan.com/tags/oracle.html\" target=\"_blank\"><span style=\"color:#002FD9\">Oracle</span></a></span></a>中如何实现字符串连接的吧，希望对大家有所帮助。</p>

<p>和其他数据库系统类似，Oracle字符串连接使用“||”进行字符串拼接，其使用方式和MSSQLServer中的加号“+”一样。<br><br>
比如执行下面的SQL语句：<br>
 </p>

<div class=\"codetitle\">
<span><u>复制代码</u></span> 代码如下:</div>

<div class=\"codebody\" id=\"code51844\">
<br>
SELECT \'工号为\'||FNumber||\'的员工姓名为\'||FName FROM T_Employee<br>
WHERE FName IS NOT NULL</div>

<p> </p>

<p><br>
除了“||”，Oracle还支持使用CONCAT()函数进行字符串拼接，比如执行下面的SQL语句：<br>
SELECT CONCAT(\'工号:\',FNumber) FROM T_Employee<br><br>
如果CONCAT中连接的值不是字符串，Oracle会尝试将其转换为字符串，比如执行下面的SQL语句：<br>
SELECT CONCAT(\'年龄:\',FAge) FROM T_Employee<br><br>
与MYSQL的CONCAT()函数不同，Oracle的CONCAT()函数只支持两个参数，不支持两个以上字符串的拼接，比如下面的SQL语句在Oracle中是错误的：<br>
SELECT CONCAT(\'工号为\',FNumber,\'的员工姓名为\',FName) FROM T_Employee<br>
WHERE FName IS NOT NULL<br>
运行以后Oracle会报出下面的错误信息：<br>
参数个数无效<br><br>
如果要进行多个字符串的拼接的话，可以使用多个CONCAT()函数嵌套使用，上面的SQL可以如下改写：</p>

<p> </p>

<p> </p>

<p> </p>

<div class=\"codetitle\">
<span><a class=\"copybut\" data=\"43558\" id=\"copybut43558\" onclick=\"doCopy(\'code43558\')\" style=\"CURSOR: pointer\"><u>复制代码</u></a></span><a class=\"copybut\" data=\"43558\" id=\"copybut43558\" onclick=\"doCopy(\'code43558\')\" style=\"CURSOR: pointer\"> 代码如下:</a>
</div>

<p> </p>

<p> </p>

<div class=\"codebody\" id=\"code43558\"><a class=\"copybut\" data=\"43558\" id=\"copybut43558\" onclick=\"doCopy(\'code43558\')\" style=\"CURSOR: pointer\"><br>
SELECT CONCAT(CONCAT(CONCAT(\'工号为\',FNumber),\'的员工姓名为\'),FName) FROM<br>
T_Employee<br>
WHERE FName IS NOT NULL </a></div>

<p>看完后你知道Oracle中如何实现字符串连接了吗？ 如果有总结的不好的地方欢迎大家指正，更多精彩内容就在信息管理部技术频道！</p>
						</div>
					',`creator`='信息管理部',`created_at`='2019-12-12 14:22:08',`updated_at`='2019-12-12 14:22:08',`click`='1' WHERE `id` = 34 [ RunTime:0.0009s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000042s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000080s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.020017s ]
INFO: [ view_parse ] --END-- [ RunTime:0.020063s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.001750s ]
INFO: [ view_filter ] --END-- [ RunTime:0.001785s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001828s ]
INFO: [ app_end ] --END-- [ RunTime:0.001859s ]

[ 2019-12-12T14:22:15+08:00 ] 192.168.3.91 /Home/Index/ShowDetail?id=34
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000009s ]
INFO: [ app_init ] --END-- [ RunTime:0.001500s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001787s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001822s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0013s ]
SQL: SELECT * FROM `articles` WHERE `id` = 34 LIMIT 1   [ RunTime:0.0006s ]

[ 2019-12-12T14:23:43+08:00 ] 192.168.3.91 /Home/Index/detail?id=34
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.001061s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001487s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001540s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0010s ]
SQL: SELECT * FROM `articles` WHERE `id` = 34 LIMIT 1   [ RunTime:0.0004s ]
SQL: UPDATE `articles` SET `origin_url`='https://js.aizhan.com/data/oracle/10562.html',`title`='Oracle中如何实现字符串连接',`text`='<div class=\"container\">
							
<p>在oracle中我们经常会使用<a href=\"https://js.aizhan.com/tags/zifuchuan.html\" target=\"_blank\"><span style=\"color:#002FD9\"><a href=\"https://js.aizhan.com/tags/zifuchuan.html\" target=\"_blank\"><span style=\"color:#002FD9\">字符串</span></a></span></a>，但是有时候需要实现字符串连接，这个问题就难倒了不少的朋友，那么我们现在就去看看<a href=\"https://js.aizhan.com/tags/oracle.html\" target=\"_blank\"><span style=\"color:#002FD9\"><a href=\"https://js.aizhan.com/tags/oracle.html\" target=\"_blank\"><span style=\"color:#002FD9\">Oracle</span></a></span></a>中如何实现字符串连接的吧，希望对大家有所帮助。</p>

<p>和其他数据库系统类似，Oracle字符串连接使用“||”进行字符串拼接，其使用方式和MSSQLServer中的加号“+”一样。<br><br>
比如执行下面的SQL语句：<br>
 </p>

<div class=\"codetitle\">
<span><u>复制代码</u></span> 代码如下:</div>

<div class=\"codebody\" id=\"code51844\">
<br>
SELECT \'工号为\'||FNumber||\'的员工姓名为\'||FName FROM T_Employee<br>
WHERE FName IS NOT NULL</div>

<p> </p>

<p><br>
除了“||”，Oracle还支持使用CONCAT()函数进行字符串拼接，比如执行下面的SQL语句：<br>
SELECT CONCAT(\'工号:\',FNumber) FROM T_Employee<br><br>
如果CONCAT中连接的值不是字符串，Oracle会尝试将其转换为字符串，比如执行下面的SQL语句：<br>
SELECT CONCAT(\'年龄:\',FAge) FROM T_Employee<br><br>
与MYSQL的CONCAT()函数不同，Oracle的CONCAT()函数只支持两个参数，不支持两个以上字符串的拼接，比如下面的SQL语句在Oracle中是错误的：<br>
SELECT CONCAT(\'工号为\',FNumber,\'的员工姓名为\',FName) FROM T_Employee<br>
WHERE FName IS NOT NULL<br>
运行以后Oracle会报出下面的错误信息：<br>
参数个数无效<br><br>
如果要进行多个字符串的拼接的话，可以使用多个CONCAT()函数嵌套使用，上面的SQL可以如下改写：</p>

<p> </p>

<p> </p>

<p> </p>

<div class=\"codetitle\">
<span><a class=\"copybut\" data=\"43558\" id=\"copybut43558\" onclick=\"doCopy(\'code43558\')\" style=\"CURSOR: pointer\"><u>复制代码</u></a></span><a class=\"copybut\" data=\"43558\" id=\"copybut43558\" onclick=\"doCopy(\'code43558\')\" style=\"CURSOR: pointer\"> 代码如下:</a>
</div>

<p> </p>

<p> </p>

<div class=\"codebody\" id=\"code43558\"><a class=\"copybut\" data=\"43558\" id=\"copybut43558\" onclick=\"doCopy(\'code43558\')\" style=\"CURSOR: pointer\"><br>
SELECT CONCAT(CONCAT(CONCAT(\'工号为\',FNumber),\'的员工姓名为\'),FName) FROM<br>
T_Employee<br>
WHERE FName IS NOT NULL </a></div>

<p>看完后你知道Oracle中如何实现字符串连接了吗？ 如果有总结的不好的地方欢迎大家指正，更多精彩内容就在信息管理部技术频道！</p>
						</div>
					',`creator`='信息管理部',`created_at`='2019-12-12 14:22:08',`updated_at`='2019-12-12 14:22:08',`click`='2' WHERE `id` = 34 [ RunTime:0.0006s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000025s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000050s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.014735s ]
INFO: [ view_parse ] --END-- [ RunTime:0.014766s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.001134s ]
INFO: [ view_filter ] --END-- [ RunTime:0.001156s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001224s ]
INFO: [ app_end ] --END-- [ RunTime:0.001244s ]

[ 2019-12-12T14:23:43+08:00 ] 192.168.3.91 /Home/Index/ShowDetail?id=34
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000858s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001228s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001292s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0010s ]
SQL: SELECT * FROM `articles` WHERE `id` = 34 LIMIT 1   [ RunTime:0.0004s ]

[ 2019-12-12T14:24:31+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.002584s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000888s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000909s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000023s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000046s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.014250s ]
INFO: [ view_parse ] --END-- [ RunTime:0.014281s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000830s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000848s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000964s ]
INFO: [ app_end ] --END-- [ RunTime:0.000981s ]

[ 2019-12-12T14:24:31+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.001786s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001432s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001461s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0011s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0034s ]

[ 2019-12-12T14:31:31+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000006s ]
INFO: [ app_init ] --END-- [ RunTime:0.000666s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000725s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000742s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000022s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000042s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.011324s ]
INFO: [ view_parse ] --END-- [ RunTime:0.011353s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000801s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000821s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001028s ]
INFO: [ app_end ] --END-- [ RunTime:0.001048s ]

[ 2019-12-12T14:31:31+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000649s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000710s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000728s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0012s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0032s ]

[ 2019-12-12T14:31:34+08:00 ] 192.168.3.91 /Home/Index/detail?id=35
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000028s ]
INFO: [ app_init ] --END-- [ RunTime:0.001497s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001335s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001381s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0014s ]
SQL: SELECT * FROM `articles` WHERE `id` = 35 LIMIT 1   [ RunTime:0.0006s ]
SQL: UPDATE `articles` SET `origin_url`='https://js.aizhan.com/data/oracle/10562.html',`title`='Oracle中如何实现字符串连接',`text`='<div class=\"container\">
							
<p>在oracle中我们经常会使用<a hre1f=\"https://js.aizhan.com/tags/zifuchuan.html\" target=\"_blank\"><span style=\"color:#002FD9\"><a hre1f=\"https://js.aizhan.com/tags/zifuchuan.html\" target=\"_blank\"><span style=\"color:#002FD9\">字符串</span></a></span></a>，但是有时候需要实现字符串连接，这个问题就难倒了不少的朋友，那么我们现在就去看看<a hre1f=\"https://js.aizhan.com/tags/oracle.html\" target=\"_blank\"><span style=\"color:#002FD9\"><a hre1f=\"https://js.aizhan.com/tags/oracle.html\" target=\"_blank\"><span style=\"color:#002FD9\">Oracle</span></a></span></a>中如何实现字符串连接的吧，希望对大家有所帮助。</p>

<p>和其他数据库系统类似，Oracle字符串连接使用“||”进行字符串拼接，其使用方式和MSSQLServer中的加号“+”一样。<br><br>
比如执行下面的SQL语句：<br>
 </p>

<div class=\"codetitle\">
<span><u>复制代码</u></span> 代码如下:</div>

<div class=\"codebody\" id=\"code51844\">
<br>
SELECT \'工号为\'||FNumber||\'的员工姓名为\'||FName FROM T_Employee<br>
WHERE FName IS NOT NULL</div>

<p> </p>

<p><br>
除了“||”，Oracle还支持使用CONCAT()函数进行字符串拼接，比如执行下面的SQL语句：<br>
SELECT CONCAT(\'工号:\',FNumber) FROM T_Employee<br><br>
如果CONCAT中连接的值不是字符串，Oracle会尝试将其转换为字符串，比如执行下面的SQL语句：<br>
SELECT CONCAT(\'年龄:\',FAge) FROM T_Employee<br><br>
与MYSQL的CONCAT()函数不同，Oracle的CONCAT()函数只支持两个参数，不支持两个以上字符串的拼接，比如下面的SQL语句在Oracle中是错误的：<br>
SELECT CONCAT(\'工号为\',FNumber,\'的员工姓名为\',FName) FROM T_Employee<br>
WHERE FName IS NOT NULL<br>
运行以后Oracle会报出下面的错误信息：<br>
参数个数无效<br><br>
如果要进行多个字符串的拼接的话，可以使用多个CONCAT()函数嵌套使用，上面的SQL可以如下改写：</p>

<p> </p>

<p> </p>

<p> </p>

<div class=\"codetitle\">
<span><a class=\"copybut\" data=\"43558\" id=\"copybut43558\" onclick=\"doCopy(\'code43558\')\" style=\"CURSOR: pointer\"><u>复制代码</u></a></span><a class=\"copybut\" data=\"43558\" id=\"copybut43558\" onclick=\"doCopy(\'code43558\')\" style=\"CURSOR: pointer\"> 代码如下:</a>
</div>

<p> </p>

<p> </p>

<div class=\"codebody\" id=\"code43558\"><a class=\"copybut\" data=\"43558\" id=\"copybut43558\" onclick=\"doCopy(\'code43558\')\" style=\"CURSOR: pointer\"><br>
SELECT CONCAT(CONCAT(CONCAT(\'工号为\',FNumber),\'的员工姓名为\'),FName) FROM<br>
T_Employee<br>
WHERE FName IS NOT NULL </a></div>

<p>看完后你知道Oracle中如何实现字符串连接了吗？ 如果有总结的不好的地方欢迎大家指正，更多精彩内容就在信息管理部技术频道！</p>
						</div>
					',`creator`='信息管理部',`created_at`='2019-12-12 14:31:24',`updated_at`='2019-12-12 14:31:24',`click`='1' WHERE `id` = 35 [ RunTime:0.0009s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000029s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000057s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.013221s ]
INFO: [ view_parse ] --END-- [ RunTime:0.013259s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000749s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000774s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001246s ]
INFO: [ app_end ] --END-- [ RunTime:0.001283s ]

[ 2019-12-12T14:31:34+08:00 ] 192.168.3.91 /Home/Index/ShowDetail?id=35
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000754s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001598s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001662s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0011s ]
SQL: SELECT * FROM `articles` WHERE `id` = 35 LIMIT 1   [ RunTime:0.0005s ]

[ 2019-12-12T14:31:50+08:00 ] 192.168.3.91 /Home/Index/detail?id=35
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000009s ]
INFO: [ app_init ] --END-- [ RunTime:0.000906s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001062s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001099s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0013s ]
SQL: SELECT * FROM `articles` WHERE `id` = 35 LIMIT 1   [ RunTime:0.0005s ]
SQL: UPDATE `articles` SET `origin_url`='https://js.aizhan.com/data/oracle/10562.html',`title`='Oracle中如何实现字符串连接',`text`='<div class=\"container\">
							
<p>在oracle中我们经常会使用<a hre1f=\"https://js.aizhan.com/tags/zifuchuan.html\" target=\"_blank\"><span style=\"color:#002FD9\"><a hre1f=\"https://js.aizhan.com/tags/zifuchuan.html\" target=\"_blank\"><span style=\"color:#002FD9\">字符串</span></a></span></a>，但是有时候需要实现字符串连接，这个问题就难倒了不少的朋友，那么我们现在就去看看<a hre1f=\"https://js.aizhan.com/tags/oracle.html\" target=\"_blank\"><span style=\"color:#002FD9\"><a hre1f=\"https://js.aizhan.com/tags/oracle.html\" target=\"_blank\"><span style=\"color:#002FD9\">Oracle</span></a></span></a>中如何实现字符串连接的吧，希望对大家有所帮助。</p>

<p>和其他数据库系统类似，Oracle字符串连接使用“||”进行字符串拼接，其使用方式和MSSQLServer中的加号“+”一样。<br><br>
比如执行下面的SQL语句：<br>
 </p>

<div class=\"codetitle\">
<span><u>复制代码</u></span> 代码如下:</div>

<div class=\"codebody\" id=\"code51844\">
<br>
SELECT \'工号为\'||FNumber||\'的员工姓名为\'||FName FROM T_Employee<br>
WHERE FName IS NOT NULL</div>

<p> </p>

<p><br>
除了“||”，Oracle还支持使用CONCAT()函数进行字符串拼接，比如执行下面的SQL语句：<br>
SELECT CONCAT(\'工号:\',FNumber) FROM T_Employee<br><br>
如果CONCAT中连接的值不是字符串，Oracle会尝试将其转换为字符串，比如执行下面的SQL语句：<br>
SELECT CONCAT(\'年龄:\',FAge) FROM T_Employee<br><br>
与MYSQL的CONCAT()函数不同，Oracle的CONCAT()函数只支持两个参数，不支持两个以上字符串的拼接，比如下面的SQL语句在Oracle中是错误的：<br>
SELECT CONCAT(\'工号为\',FNumber,\'的员工姓名为\',FName) FROM T_Employee<br>
WHERE FName IS NOT NULL<br>
运行以后Oracle会报出下面的错误信息：<br>
参数个数无效<br><br>
如果要进行多个字符串的拼接的话，可以使用多个CONCAT()函数嵌套使用，上面的SQL可以如下改写：</p>

<p> </p>

<p> </p>

<p> </p>

<div class=\"codetitle\">
<span><a class=\"copybut\" data=\"43558\" id=\"copybut43558\" onclick=\"doCopy(\'code43558\')\" style=\"CURSOR: pointer\"><u>复制代码</u></a></span><a class=\"copybut\" data=\"43558\" id=\"copybut43558\" onclick=\"doCopy(\'code43558\')\" style=\"CURSOR: pointer\"> 代码如下:</a>
</div>

<p> </p>

<p> </p>

<div class=\"codebody\" id=\"code43558\"><a class=\"copybut\" data=\"43558\" id=\"copybut43558\" onclick=\"doCopy(\'code43558\')\" style=\"CURSOR: pointer\"><br>
SELECT CONCAT(CONCAT(CONCAT(\'工号为\',FNumber),\'的员工姓名为\'),FName) FROM<br>
T_Employee<br>
WHERE FName IS NOT NULL </a></div>

<p>看完后你知道Oracle中如何实现字符串连接了吗？ 如果有总结的不好的地方欢迎大家指正，更多精彩内容就在信息管理部技术频道！</p>
						</div>
					',`creator`='信息管理部',`created_at`='2019-12-12 14:31:24',`updated_at`='2019-12-12 14:31:24',`click`='2' WHERE `id` = 35 [ RunTime:0.0008s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000030s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000063s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.013994s ]
INFO: [ view_parse ] --END-- [ RunTime:0.014034s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000675s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000700s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000933s ]
INFO: [ app_end ] --END-- [ RunTime:0.000958s ]

[ 2019-12-12T14:31:50+08:00 ] 192.168.3.91 /Home/Index/ShowDetail?id=35
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000010s ]
INFO: [ app_init ] --END-- [ RunTime:0.000904s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000973s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001005s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0014s ]
SQL: SELECT * FROM `articles` WHERE `id` = 35 LIMIT 1   [ RunTime:0.0007s ]

[ 2019-12-12T14:31:53+08:00 ] 192.168.3.91 /Home/Index/detail?id=35
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000016s ]
INFO: [ app_init ] --END-- [ RunTime:0.001601s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001679s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001734s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0016s ]
SQL: SELECT * FROM `articles` WHERE `id` = 35 LIMIT 1   [ RunTime:0.0008s ]
SQL: UPDATE `articles` SET `origin_url`='https://js.aizhan.com/data/oracle/10562.html',`title`='Oracle中如何实现字符串连接',`text`='<div class=\"container\">
							
<p>在oracle中我们经常会使用<a hre1f=\"https://js.aizhan.com/tags/zifuchuan.html\" target=\"_blank\"><span style=\"color:#002FD9\"><a hre1f=\"https://js.aizhan.com/tags/zifuchuan.html\" target=\"_blank\"><span style=\"color:#002FD9\">字符串</span></a></span></a>，但是有时候需要实现字符串连接，这个问题就难倒了不少的朋友，那么我们现在就去看看<a hre1f=\"https://js.aizhan.com/tags/oracle.html\" target=\"_blank\"><span style=\"color:#002FD9\"><a hre1f=\"https://js.aizhan.com/tags/oracle.html\" target=\"_blank\"><span style=\"color:#002FD9\">Oracle</span></a></span></a>中如何实现字符串连接的吧，希望对大家有所帮助。</p>

<p>和其他数据库系统类似，Oracle字符串连接使用“||”进行字符串拼接，其使用方式和MSSQLServer中的加号“+”一样。<br><br>
比如执行下面的SQL语句：<br>
 </p>

<div class=\"codetitle\">
<span><u>复制代码</u></span> 代码如下:</div>

<div class=\"codebody\" id=\"code51844\">
<br>
SELECT \'工号为\'||FNumber||\'的员工姓名为\'||FName FROM T_Employee<br>
WHERE FName IS NOT NULL</div>

<p> </p>

<p><br>
除了“||”，Oracle还支持使用CONCAT()函数进行字符串拼接，比如执行下面的SQL语句：<br>
SELECT CONCAT(\'工号:\',FNumber) FROM T_Employee<br><br>
如果CONCAT中连接的值不是字符串，Oracle会尝试将其转换为字符串，比如执行下面的SQL语句：<br>
SELECT CONCAT(\'年龄:\',FAge) FROM T_Employee<br><br>
与MYSQL的CONCAT()函数不同，Oracle的CONCAT()函数只支持两个参数，不支持两个以上字符串的拼接，比如下面的SQL语句在Oracle中是错误的：<br>
SELECT CONCAT(\'工号为\',FNumber,\'的员工姓名为\',FName) FROM T_Employee<br>
WHERE FName IS NOT NULL<br>
运行以后Oracle会报出下面的错误信息：<br>
参数个数无效<br><br>
如果要进行多个字符串的拼接的话，可以使用多个CONCAT()函数嵌套使用，上面的SQL可以如下改写：</p>

<p> </p>

<p> </p>

<p> </p>

<div class=\"codetitle\">
<span><a class=\"copybut\" data=\"43558\" id=\"copybut43558\" onclick=\"doCopy(\'code43558\')\" style=\"CURSOR: pointer\"><u>复制代码</u></a></span><a class=\"copybut\" data=\"43558\" id=\"copybut43558\" onclick=\"doCopy(\'code43558\')\" style=\"CURSOR: pointer\"> 代码如下:</a>
</div>

<p> </p>

<p> </p>

<div class=\"codebody\" id=\"code43558\"><a class=\"copybut\" data=\"43558\" id=\"copybut43558\" onclick=\"doCopy(\'code43558\')\" style=\"CURSOR: pointer\"><br>
SELECT CONCAT(CONCAT(CONCAT(\'工号为\',FNumber),\'的员工姓名为\'),FName) FROM<br>
T_Employee<br>
WHERE FName IS NOT NULL </a></div>

<p>看完后你知道Oracle中如何实现字符串连接了吗？ 如果有总结的不好的地方欢迎大家指正，更多精彩内容就在信息管理部技术频道！</p>
						</div>
					',`creator`='信息管理部',`created_at`='2019-12-12 14:31:24',`updated_at`='2019-12-12 14:31:24',`click`='3' WHERE `id` = 35 [ RunTime:0.0011s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000051s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000116s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.021142s ]
INFO: [ view_parse ] --END-- [ RunTime:0.021199s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000958s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000992s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001213s ]
INFO: [ app_end ] --END-- [ RunTime:0.001245s ]

[ 2019-12-12T14:31:53+08:00 ] 192.168.3.91 /Home/Index/ShowDetail?id=35
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000016s ]
INFO: [ app_init ] --END-- [ RunTime:0.001072s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001410s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001452s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0014s ]
SQL: SELECT * FROM `articles` WHERE `id` = 35 LIMIT 1   [ RunTime:0.0005s ]

[ 2019-12-12T14:33:40+08:00 ] 192.168.3.91 /Home/Index/detail?id=35
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.001062s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001208s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001240s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0014s ]
SQL: SELECT * FROM `articles` WHERE `id` = 35 LIMIT 1   [ RunTime:0.0005s ]
SQL: UPDATE `articles` SET `origin_url`='https://js.aizhan.com/data/oracle/10562.html',`title`='Oracle中如何实现字符串连接',`text`='<div class=\"container\">
							
<p>在oracle中我们经常会使用<a hre1f=\"https://js.aizhan.com/tags/zifuchuan.html\" target=\"_blank\"><span style=\"color:#002FD9\"><a hre1f=\"https://js.aizhan.com/tags/zifuchuan.html\" target=\"_blank\"><span style=\"color:#002FD9\">字符串</span></a></span></a>，但是有时候需要实现字符串连接，这个问题就难倒了不少的朋友，那么我们现在就去看看<a hre1f=\"https://js.aizhan.com/tags/oracle.html\" target=\"_blank\"><span style=\"color:#002FD9\"><a hre1f=\"https://js.aizhan.com/tags/oracle.html\" target=\"_blank\"><span style=\"color:#002FD9\">Oracle</span></a></span></a>中如何实现字符串连接的吧，希望对大家有所帮助。</p>

<p>和其他数据库系统类似，Oracle字符串连接使用“||”进行字符串拼接，其使用方式和MSSQLServer中的加号“+”一样。<br><br>
比如执行下面的SQL语句：<br>
 </p>

<div class=\"codetitle\">
<span><u>复制代码</u></span> 代码如下:</div>

<div class=\"codebody\" id=\"code51844\">
<br>
SELECT \'工号为\'||FNumber||\'的员工姓名为\'||FName FROM T_Employee<br>
WHERE FName IS NOT NULL</div>

<p> </p>

<p><br>
除了“||”，Oracle还支持使用CONCAT()函数进行字符串拼接，比如执行下面的SQL语句：<br>
SELECT CONCAT(\'工号:\',FNumber) FROM T_Employee<br><br>
如果CONCAT中连接的值不是字符串，Oracle会尝试将其转换为字符串，比如执行下面的SQL语句：<br>
SELECT CONCAT(\'年龄:\',FAge) FROM T_Employee<br><br>
与MYSQL的CONCAT()函数不同，Oracle的CONCAT()函数只支持两个参数，不支持两个以上字符串的拼接，比如下面的SQL语句在Oracle中是错误的：<br>
SELECT CONCAT(\'工号为\',FNumber,\'的员工姓名为\',FName) FROM T_Employee<br>
WHERE FName IS NOT NULL<br>
运行以后Oracle会报出下面的错误信息：<br>
参数个数无效<br><br>
如果要进行多个字符串的拼接的话，可以使用多个CONCAT()函数嵌套使用，上面的SQL可以如下改写：</p>

<p> </p>

<p> </p>

<p> </p>

<div class=\"codetitle\">
<span><a class=\"copybut\" data=\"43558\" id=\"copybut43558\" onclick=\"doCopy(\'code43558\')\" style=\"CURSOR: pointer\"><u>复制代码</u></a></span><a class=\"copybut\" data=\"43558\" id=\"copybut43558\" onclick=\"doCopy(\'code43558\')\" style=\"CURSOR: pointer\"> 代码如下:</a>
</div>

<p> </p>

<p> </p>

<div class=\"codebody\" id=\"code43558\"><a class=\"copybut\" data=\"43558\" id=\"copybut43558\" onclick=\"doCopy(\'code43558\')\" style=\"CURSOR: pointer\"><br>
SELECT CONCAT(CONCAT(CONCAT(\'工号为\',FNumber),\'的员工姓名为\'),FName) FROM<br>
T_Employee<br>
WHERE FName IS NOT NULL </a></div>

<p>看完后你知道Oracle中如何实现字符串连接了吗？ 如果有总结的不好的地方欢迎大家指正，更多精彩内容就在信息管理部技术频道！</p>
						</div>
					',`creator`='信息管理部',`created_at`='2019-12-12 14:31:24',`updated_at`='2019-12-12 14:31:24',`click`='4' WHERE `id` = 35 [ RunTime:0.0007s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000028s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000057s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.015649s ]
INFO: [ view_parse ] --END-- [ RunTime:0.015692s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000987s ]
INFO: [ view_filter ] --END-- [ RunTime:0.001013s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001204s ]
INFO: [ app_end ] --END-- [ RunTime:0.001228s ]

[ 2019-12-12T14:33:40+08:00 ] 192.168.3.91 /Home/Index/ShowDetail?id=35
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000029s ]
INFO: [ app_init ] --END-- [ RunTime:0.001238s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000842s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000866s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0010s ]
SQL: SELECT * FROM `articles` WHERE `id` = 35 LIMIT 1   [ RunTime:0.0005s ]

[ 2019-12-12T14:40:25+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000791s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000884s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000910s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000026s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000057s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.013195s ]
INFO: [ view_parse ] --END-- [ RunTime:0.013228s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000823s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000844s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001034s ]
INFO: [ app_end ] --END-- [ RunTime:0.001056s ]

[ 2019-12-12T14:40:25+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000681s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000743s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000763s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0011s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0031s ]

[ 2019-12-12T14:44:09+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000771s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000827s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000847s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000023s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000047s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.012634s ]
INFO: [ view_parse ] --END-- [ RunTime:0.012667s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000823s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000842s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000972s ]
INFO: [ app_end ] --END-- [ RunTime:0.000992s ]

[ 2019-12-12T14:44:09+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000688s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000743s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000778s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0010s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0027s ]

[ 2019-12-12T14:44:11+08:00 ] 192.168.3.91 /Home/Index/detail?id=36
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.000841s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000887s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000916s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0010s ]
SQL: SELECT * FROM `articles` WHERE `id` = 36 LIMIT 1   [ RunTime:0.0005s ]
SQL: UPDATE `articles` SET `origin_url`='https://js.aizhan.com/data/oracle/10562.html',`title`='Oracle中如何实现字符串连接',`text`='<div class=\"container\">
							
<p>在oracle中我们经常会使用<span style=\"color:#002FD9\"><span style=\"color:#002FD9\">字符串</span></span>，但是有时候需要实现字符串连接，这个问题就难倒了不少的朋友，那么我们现在就去看看<span style=\"color:#002FD9\"><span style=\"color:#002FD9\">Oracle</span></span>中如何实现字符串连接的吧，希望对大家有所帮助。</p>

<p>和其他数据库系统类似，Oracle字符串连接使用“||”进行字符串拼接，其使用方式和MSSQLServer中的加号“+”一样。<br><br>
比如执行下面的SQL语句：<br>
 </p>

<div class=\"codetitle\">
<span><u>复制代码</u></span> 代码如下:</div>

<div class=\"codebody\" id=\"code51844\">
<br>
SELECT \'工号为\'||FNumber||\'的员工姓名为\'||FName FROM T_Employee<br>
WHERE FName IS NOT NULL</div>

<p> </p>

<p><br>
除了“||”，Oracle还支持使用CONCAT()函数进行字符串拼接，比如执行下面的SQL语句：<br>
SELECT CONCAT(\'工号:\',FNumber) FROM T_Employee<br><br>
如果CONCAT中连接的值不是字符串，Oracle会尝试将其转换为字符串，比如执行下面的SQL语句：<br>
SELECT CONCAT(\'年龄:\',FAge) FROM T_Employee<br><br>
与MYSQL的CONCAT()函数不同，Oracle的CONCAT()函数只支持两个参数，不支持两个以上字符串的拼接，比如下面的SQL语句在Oracle中是错误的：<br>
SELECT CONCAT(\'工号为\',FNumber,\'的员工姓名为\',FName) FROM T_Employee<br>
WHERE FName IS NOT NULL<br>
运行以后Oracle会报出下面的错误信息：<br>
参数个数无效<br><br>
如果要进行多个字符串的拼接的话，可以使用多个CONCAT()函数嵌套使用，上面的SQL可以如下改写：</p>

<p> </p>

<p> </p>

<p> </p>

<div class=\"codetitle\">
<span><u>复制代码</u></span> 代码如下:
</div>

<p> </p>

<p> </p>

<div class=\"codebody\" id=\"code43558\"><br>
SELECT CONCAT(CONCAT(CONCAT(\'工号为\',FNumber),\'的员工姓名为\'),FName) FROM<br>
T_Employee<br>
WHERE FName IS NOT NULL </div>

<p>看完后你知道Oracle中如何实现字符串连接了吗？ 如果有总结的不好的地方欢迎大家指正，更多精彩内容就在信息管理部技术频道！</p>
						</div>
					',`creator`='信息管理部',`created_at`='2019-12-12 14:44:01',`updated_at`='2019-12-12 14:44:01',`click`='1' WHERE `id` = 36 [ RunTime:0.0007s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000026s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000053s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.012205s ]
INFO: [ view_parse ] --END-- [ RunTime:0.012238s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000662s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000684s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000847s ]
INFO: [ app_end ] --END-- [ RunTime:0.000868s ]

[ 2019-12-12T14:44:11+08:00 ] 192.168.3.91 /Home/Index/ShowDetail?id=36
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000030s ]
INFO: [ app_init ] --END-- [ RunTime:0.001952s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000863s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000892s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0012s ]
SQL: SELECT * FROM `articles` WHERE `id` = 36 LIMIT 1   [ RunTime:0.0005s ]

[ 2019-12-12T14:45:11+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000004s ]
INFO: [ app_init ] --END-- [ RunTime:0.000548s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000641s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000660s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000021s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000040s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.010458s ]
INFO: [ view_parse ] --END-- [ RunTime:0.010489s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000595s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000613s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000760s ]
INFO: [ app_end ] --END-- [ RunTime:0.000778s ]

[ 2019-12-12T14:45:12+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000584s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000699s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000718s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0012s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0025s ]

[ 2019-12-12T14:45:27+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000528s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000601s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000620s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000019s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000037s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.011151s ]
INFO: [ view_parse ] --END-- [ RunTime:0.011183s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000550s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000568s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000700s ]
INFO: [ app_end ] --END-- [ RunTime:0.000717s ]

[ 2019-12-12T14:45:28+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000006s ]
INFO: [ app_init ] --END-- [ RunTime:0.000674s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000795s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000816s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0018s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0028s ]

[ 2019-12-12T14:45:29+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.000923s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001946s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001984s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000028s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000061s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.013624s ]
INFO: [ view_parse ] --END-- [ RunTime:0.013669s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000773s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000800s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001010s ]
INFO: [ app_end ] --END-- [ RunTime:0.001038s ]

[ 2019-12-12T14:45:29+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000739s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000829s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000854s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0014s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0041s ]

[ 2019-12-12T14:45:32+08:00 ] 192.168.3.91 /Home/Index/detail?id=37
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.000842s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000890s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000918s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0012s ]
SQL: SELECT * FROM `articles` WHERE `id` = 37 LIMIT 1   [ RunTime:0.0005s ]
SQL: UPDATE `articles` SET `origin_url`='https://js.aizhan.com/data/oracle/10562.html',`title`='Oracle中如何实现字符串连接',`text`='<div class=\"container\">
							
<p>在oracle中我们经常会使用<span style=\"color:#002FD9\"><span style=\"color:#002FD9\">字符串</span></span>，但是有时候需要实现字符串连接，这个问题就难倒了不少的朋友，那么我们现在就去看看<span style=\"color:#002FD9\"><span style=\"color:#002FD9\">Oracle</span></span>中如何实现字符串连接的吧，希望对大家有所帮助。</p>

<p>和其他数据库系统类似，Oracle字符串连接使用“||”进行字符串拼接，其使用方式和MSSQLServer中的加号“+”一样。<br><br>
比如执行下面的SQL语句：<br>
 </p>

<div class=\"codetitle\">
<span><u></u></span> 代码如下:</div>

<div class=\"codebody\" id=\"code51844\">
<br>
SELECT \'工号为\'||FNumber||\'的员工姓名为\'||FName FROM T_Employee<br>
WHERE FName IS NOT NULL</div>

<p> </p>

<p><br>
除了“||”，Oracle还支持使用CONCAT()函数进行字符串拼接，比如执行下面的SQL语句：<br>
SELECT CONCAT(\'工号:\',FNumber) FROM T_Employee<br><br>
如果CONCAT中连接的值不是字符串，Oracle会尝试将其转换为字符串，比如执行下面的SQL语句：<br>
SELECT CONCAT(\'年龄:\',FAge) FROM T_Employee<br><br>
与MYSQL的CONCAT()函数不同，Oracle的CONCAT()函数只支持两个参数，不支持两个以上字符串的拼接，比如下面的SQL语句在Oracle中是错误的：<br>
SELECT CONCAT(\'工号为\',FNumber,\'的员工姓名为\',FName) FROM T_Employee<br>
WHERE FName IS NOT NULL<br>
运行以后Oracle会报出下面的错误信息：<br>
参数个数无效<br><br>
如果要进行多个字符串的拼接的话，可以使用多个CONCAT()函数嵌套使用，上面的SQL可以如下改写：</p>

<p> </p>

<p> </p>

<p> </p>

<div class=\"codetitle\">
<span><u></u></span> 代码如下:
</div>

<p> </p>

<p> </p>

<div class=\"codebody\" id=\"code43558\"><br>
SELECT CONCAT(CONCAT(CONCAT(\'工号为\',FNumber),\'的员工姓名为\'),FName) FROM<br>
T_Employee<br>
WHERE FName IS NOT NULL </div>

<p>看完后你知道Oracle中如何实现字符串连接了吗？ 如果有总结的不好的地方欢迎大家指正，更多精彩内容就在信息管理部技术频道！</p>
						</div>
					',`creator`='信息管理部',`created_at`='2019-12-12 14:45:29',`updated_at`='2019-12-12 14:45:29',`click`='1' WHERE `id` = 37 [ RunTime:0.0006s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000028s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000053s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.012088s ]
INFO: [ view_parse ] --END-- [ RunTime:0.012126s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000727s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000755s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000953s ]
INFO: [ app_end ] --END-- [ RunTime:0.000976s ]

[ 2019-12-12T14:45:33+08:00 ] 192.168.3.91 /Home/Index/ShowDetail?id=37
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.000723s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000843s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000865s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0012s ]
SQL: SELECT * FROM `articles` WHERE `id` = 37 LIMIT 1   [ RunTime:0.0015s ]

[ 2019-12-12T14:46:10+08:00 ] 192.168.3.91 /Home/Index/detail?id=37
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.001003s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001125s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001153s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0011s ]
SQL: SELECT * FROM `articles` WHERE `id` = 37 LIMIT 1   [ RunTime:0.0004s ]
SQL: UPDATE `articles` SET `origin_url`='https://js.aizhan.com/data/oracle/10562.html',`title`='Oracle中如何实现字符串连接',`text`='<div class=\"container\">
							
<p>在oracle中我们经常会使用<span style=\"color:#002FD9\"><span style=\"color:#002FD9\">字符串</span></span>，但是有时候需要实现字符串连接，这个问题就难倒了不少的朋友，那么我们现在就去看看<span style=\"color:#002FD9\"><span style=\"color:#002FD9\">Oracle</span></span>中如何实现字符串连接的吧，希望对大家有所帮助。</p>

<p>和其他数据库系统类似，Oracle字符串连接使用“||”进行字符串拼接，其使用方式和MSSQLServer中的加号“+”一样。<br><br>
比如执行下面的SQL语句：<br>
 </p>

<div class=\"codetitle\">
<span><u></u></span> 代码如下:</div>

<div class=\"codebody\" id=\"code51844\">
<br>
SELECT \'工号为\'||FNumber||\'的员工姓名为\'||FName FROM T_Employee<br>
WHERE FName IS NOT NULL</div>

<p> </p>

<p><br>
除了“||”，Oracle还支持使用CONCAT()函数进行字符串拼接，比如执行下面的SQL语句：<br>
SELECT CONCAT(\'工号:\',FNumber) FROM T_Employee<br><br>
如果CONCAT中连接的值不是字符串，Oracle会尝试将其转换为字符串，比如执行下面的SQL语句：<br>
SELECT CONCAT(\'年龄:\',FAge) FROM T_Employee<br><br>
与MYSQL的CONCAT()函数不同，Oracle的CONCAT()函数只支持两个参数，不支持两个以上字符串的拼接，比如下面的SQL语句在Oracle中是错误的：<br>
SELECT CONCAT(\'工号为\',FNumber,\'的员工姓名为\',FName) FROM T_Employee<br>
WHERE FName IS NOT NULL<br>
运行以后Oracle会报出下面的错误信息：<br>
参数个数无效<br><br>
如果要进行多个字符串的拼接的话，可以使用多个CONCAT()函数嵌套使用，上面的SQL可以如下改写：</p>

<p> </p>

<p> </p>

<p> </p>

<div class=\"codetitle\">
<span><u></u></span> 代码如下:
</div>

<p> </p>

<p> </p>

<div class=\"codebody\" id=\"code43558\"><br>
SELECT CONCAT(CONCAT(CONCAT(\'工号为\',FNumber),\'的员工姓名为\'),FName) FROM<br>
T_Employee<br>
WHERE FName IS NOT NULL </div>

<p>看完后你知道Oracle中如何实现字符串连接了吗？ 如果有总结的不好的地方欢迎大家指正，更多精彩内容就在信息管理部技术频道！</p>
						</div>
					',`creator`='信息管理部',`created_at`='2019-12-12 14:45:29',`updated_at`='2019-12-12 14:45:29',`click`='2' WHERE `id` = 37 [ RunTime:0.0006s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000026s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000052s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.012784s ]
INFO: [ view_parse ] --END-- [ RunTime:0.012843s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.001919s ]
INFO: [ view_filter ] --END-- [ RunTime:0.001965s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001095s ]
INFO: [ app_end ] --END-- [ RunTime:0.001117s ]

[ 2019-12-12T14:46:10+08:00 ] 192.168.3.91 /Home/Index/ShowDetail?id=37
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000006s ]
INFO: [ app_init ] --END-- [ RunTime:0.000680s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000771s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000793s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0009s ]
SQL: SELECT * FROM `articles` WHERE `id` = 37 LIMIT 1   [ RunTime:0.0004s ]

[ 2019-12-12T14:46:20+08:00 ] 192.168.3.91 /Home/Index/detail?id=37
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.001135s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000931s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000962s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0012s ]
SQL: SELECT * FROM `articles` WHERE `id` = 37 LIMIT 1   [ RunTime:0.0005s ]
SQL: UPDATE `articles` SET `origin_url`='https://js.aizhan.com/data/oracle/10562.html',`title`='Oracle中如何实现字符串连接',`text`='<div class=\"container\">
							
<p>在oracle中我们经常会使用<span style=\"color:#002FD9\"><span style=\"color:#002FD9\">字符串</span></span>，但是有时候需要实现字符串连接，这个问题就难倒了不少的朋友，那么我们现在就去看看<span style=\"color:#002FD9\"><span style=\"color:#002FD9\">Oracle</span></span>中如何实现字符串连接的吧，希望对大家有所帮助。</p>

<p>和其他数据库系统类似，Oracle字符串连接使用“||”进行字符串拼接，其使用方式和MSSQLServer中的加号“+”一样。<br><br>
比如执行下面的SQL语句：<br>
 </p>

<div class=\"codetitle\">
<span><u></u></span> 代码如下:</div>

<div class=\"codebody\" id=\"code51844\">
<br>
SELECT \'工号为\'||FNumber||\'的员工姓名为\'||FName FROM T_Employee<br>
WHERE FName IS NOT NULL</div>

<p> </p>

<p><br>
除了“||”，Oracle还支持使用CONCAT()函数进行字符串拼接，比如执行下面的SQL语句：<br>
SELECT CONCAT(\'工号:\',FNumber) FROM T_Employee<br><br>
如果CONCAT中连接的值不是字符串，Oracle会尝试将其转换为字符串，比如执行下面的SQL语句：<br>
SELECT CONCAT(\'年龄:\',FAge) FROM T_Employee<br><br>
与MYSQL的CONCAT()函数不同，Oracle的CONCAT()函数只支持两个参数，不支持两个以上字符串的拼接，比如下面的SQL语句在Oracle中是错误的：<br>
SELECT CONCAT(\'工号为\',FNumber,\'的员工姓名为\',FName) FROM T_Employee<br>
WHERE FName IS NOT NULL<br>
运行以后Oracle会报出下面的错误信息：<br>
参数个数无效<br><br>
如果要进行多个字符串的拼接的话，可以使用多个CONCAT()函数嵌套使用，上面的SQL可以如下改写：</p>

<p> </p>

<p> </p>

<p> </p>

<div class=\"codetitle\">
<span><u></u></span> 代码如下:
</div>

<p> </p>

<p> </p>

<div class=\"codebody\" id=\"code43558\"><br>
SELECT CONCAT(CONCAT(CONCAT(\'工号为\',FNumber),\'的员工姓名为\'),FName) FROM<br>
T_Employee<br>
WHERE FName IS NOT NULL </div>

<p>看完后你知道Oracle中如何实现字符串连接了吗？ 如果有总结的不好的地方欢迎大家指正，更多精彩内容就在信息管理部技术频道！</p>
						</div>
					',`creator`='信息管理部',`created_at`='2019-12-12 14:45:29',`updated_at`='2019-12-12 14:45:29',`click`='3' WHERE `id` = 37 [ RunTime:0.0008s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000030s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000062s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.015521s ]
INFO: [ view_parse ] --END-- [ RunTime:0.015570s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000808s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000836s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001040s ]
INFO: [ app_end ] --END-- [ RunTime:0.001067s ]

[ 2019-12-12T14:46:21+08:00 ] 192.168.3.91 /Home/Index/ShowDetail?id=37
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000009s ]
INFO: [ app_init ] --END-- [ RunTime:0.001796s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000995s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001021s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0011s ]
SQL: SELECT * FROM `articles` WHERE `id` = 37 LIMIT 1   [ RunTime:0.0005s ]

[ 2019-12-12T14:46:23+08:00 ] 192.168.3.91 /Home/Index/detail?id=37
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000004s ]
INFO: [ app_init ] --END-- [ RunTime:0.000546s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000608s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000626s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0021s ]
SQL: SELECT * FROM `articles` WHERE `id` = 37 LIMIT 1   [ RunTime:0.0003s ]
SQL: UPDATE `articles` SET `origin_url`='https://js.aizhan.com/data/oracle/10562.html',`title`='Oracle中如何实现字符串连接',`text`='<div class=\"container\">
							
<p>在oracle中我们经常会使用<span style=\"color:#002FD9\"><span style=\"color:#002FD9\">字符串</span></span>，但是有时候需要实现字符串连接，这个问题就难倒了不少的朋友，那么我们现在就去看看<span style=\"color:#002FD9\"><span style=\"color:#002FD9\">Oracle</span></span>中如何实现字符串连接的吧，希望对大家有所帮助。</p>

<p>和其他数据库系统类似，Oracle字符串连接使用“||”进行字符串拼接，其使用方式和MSSQLServer中的加号“+”一样。<br><br>
比如执行下面的SQL语句：<br>
 </p>

<div class=\"codetitle\">
<span><u></u></span> 代码如下:</div>

<div class=\"codebody\" id=\"code51844\">
<br>
SELECT \'工号为\'||FNumber||\'的员工姓名为\'||FName FROM T_Employee<br>
WHERE FName IS NOT NULL</div>

<p> </p>

<p><br>
除了“||”，Oracle还支持使用CONCAT()函数进行字符串拼接，比如执行下面的SQL语句：<br>
SELECT CONCAT(\'工号:\',FNumber) FROM T_Employee<br><br>
如果CONCAT中连接的值不是字符串，Oracle会尝试将其转换为字符串，比如执行下面的SQL语句：<br>
SELECT CONCAT(\'年龄:\',FAge) FROM T_Employee<br><br>
与MYSQL的CONCAT()函数不同，Oracle的CONCAT()函数只支持两个参数，不支持两个以上字符串的拼接，比如下面的SQL语句在Oracle中是错误的：<br>
SELECT CONCAT(\'工号为\',FNumber,\'的员工姓名为\',FName) FROM T_Employee<br>
WHERE FName IS NOT NULL<br>
运行以后Oracle会报出下面的错误信息：<br>
参数个数无效<br><br>
如果要进行多个字符串的拼接的话，可以使用多个CONCAT()函数嵌套使用，上面的SQL可以如下改写：</p>

<p> </p>

<p> </p>

<p> </p>

<div class=\"codetitle\">
<span><u></u></span> 代码如下:
</div>

<p> </p>

<p> </p>

<div class=\"codebody\" id=\"code43558\"><br>
SELECT CONCAT(CONCAT(CONCAT(\'工号为\',FNumber),\'的员工姓名为\'),FName) FROM<br>
T_Employee<br>
WHERE FName IS NOT NULL </div>

<p>看完后你知道Oracle中如何实现字符串连接了吗？ 如果有总结的不好的地方欢迎大家指正，更多精彩内容就在信息管理部技术频道！</p>
						</div>
					',`creator`='信息管理部',`created_at`='2019-12-12 14:45:29',`updated_at`='2019-12-12 14:45:29',`click`='4' WHERE `id` = 37 [ RunTime:0.0004s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000021s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000040s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.008312s ]
INFO: [ view_parse ] --END-- [ RunTime:0.008335s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000503s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000519s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000640s ]
INFO: [ app_end ] --END-- [ RunTime:0.000657s ]

[ 2019-12-12T14:46:23+08:00 ] 192.168.3.91 /Home/Index/ShowDetail?id=37
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000571s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000669s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000686s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0022s ]
SQL: SELECT * FROM `articles` WHERE `id` = 37 LIMIT 1   [ RunTime:0.0004s ]

[ 2019-12-12T14:46:29+08:00 ] 192.168.3.91 /Home/Index/detail?id=32
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.000781s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001069s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001121s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0012s ]
SQL: SELECT * FROM `articles` WHERE `id` = 32 LIMIT 1   [ RunTime:0.0005s ]
SQL: UPDATE `articles` SET `origin_url`='https://js.aizhan.com/develop/java/10665.html',`title`='详解Java API的使用方法',`text`='<div class=\"container\">
							
<p>当程序员使用java开发程序时，要学会熟练地使用java API，这样才能达到事半功倍的效果，下面信息管理部技术频道小编给大家详解<a href=\"https://js.aizhan.com/tags/java.html\" target=\"_blank\"><span style=\"color:#002FD9\"><a href=\"https://js.aizhan.com/tags/java.html\" target=\"_blank\"><span style=\"color:#002FD9\">Java</span></a></span></a> API的使用方法，一起来看看吧。</p>

<p><strong>什么是Java类库</strong></p>

<p>在编写程序的时候，通常有很多功能是通用的，或者是很基础的，可以用这些功能来组成更发杂的功能代码。比如文件操作，不同程序对文件的操作基本都是一样的，打开文件，关闭文件，读取文件里面的数据，往文件中写数据等等。所不同的仅仅是文件路径不相同，文件内容不同。如果把文件相关的操作编写成一个通用的类，不管哪个程序员都可以直接使用，而不必自己重新编写一遍操作文件的所有代码，那么程序员的工作效率就会大大提高。像这样把一些具有通用的功能编写成相应的类代码，就形成了类库。</p>

<p>Java 的类库是 Java 语言提供的已经实现的标准类的集合，是 Java 编程的 API（Application Program Interface），它可以帮助开发者方便、快捷地开发 Java 程序。程序员在开发程序的时候，直接调用这些现成的类就可以了。这些类根据实现的功能不同，可以划分为不同的集合，每个集合组成一个包，称为类库。Java 类库中大部分都是由Sun 公司提供的，这些类库称为基础类库。</p>

<p><strong>什么是程序包</strong></p>

<p>包是一种概念，用来组织类。我们可以借助“行政区划”这个概念来帮助理解程序包。一个国家分很多省，省内又分很多市，还可以继续往下细分更多行政单位。这些行政单位界定了一个区域和这片区域上的所有人和物。程序包就相当于行政区划，行政区划里的人和物就相当于程序包里面的类。所以行政区划是一种抽象的概念。包和行政区划一样，都是一个抽象的概念。包里面还可以包含子包。如：com.myJava.utils这样的一个包名，就好比广东省.广州市.天河区。</p>

<p><span style=\"color: #ff0000\">需注意：</span></p>

<p>(1) package 前面还不能有空格。包声明应该在源文件的第一行，每个源文件只能有一个包声明（即只有一条package声明语句），这个文件中的每个类型都属于该包。</p>

<p>(2) 包名的命名规范，一般全部小写，Java要求包要有域名前缀，用来区分不同的作者，同时是域名的反写，如com.google.guava.guava-parent。</p>

<p>(3) 包的命名通常和代码文件的存储位置相关联。如上述Something.java文件的保存路径是 net/java/util/Something.java。因为Something.java文件中声明的包名是net.java.util</p>

<p>(4) 如果一个源文件中没有使用包声明，那么该类会被编译器认为放在一个默认的没有名称的默认包中。尽管默认包对于短的例子程序很好用，但对于实际的应用程序它是不适当的。多数情况，需要为自己的代码定义一个包。</p>

<p><strong>使用Java类库</strong></p>

<p>使用Java类库（或Java API）的方法是使用import语句，即在 java 源文件中 import语句应位于 package 语句之后，所有类的定义之前，可以没有，也可以有多条。import导入包有两种语法形式：</p>

<p>单类型导入(single-type-import)， 例如 import java.io.File;</p>

<p>按需类型导入(type-import-on-demand)，例如 import java.io.*;</p>

<p>对于按需类型导入( import java.io.*; )，有人误解为导入一个包下的所有类，其实不然，看名字就知道，他只会按需导入，也就是说它并非导入整个包，而仅仅导入当前类需要使用的类。</p>

<p>那么以上两种import程序包的方法是否一样呢？不一样！单类型导入和按需类型导入对类文件的定位算法是不一样的，具体说明请读者自己查找相关资料了解。</p>

<p>查看JDK的源代码就知道SUN的软件工程师一般不会使用按需类型导入。因为使用单类型导入至少有以下两点好处：</p>

<p>1。提高编译速度。</p>

<p>2。避免命名冲突。（例如：当你import java.awt.*;import java.util.*后，使用List的时候编译器将会出编译错误）</p>

<p>当然，使用单类型导入会使用你的import语句看起来很长。</p>

<p>JAVA类库在线中文文档参考：http://tool.oschina.net/apidocs/apidoc?api=jdk-zh</p>

<p><strong>实践训练</strong></p>

<p>第一步：新建一个小游戏项目，项目名称为MySee。</p>

<p>第二步：网项目中添加一个游戏窗口类，类名称为：DrawSee。在DrawSee.java文件头部，添加以下程序包：</p>

<div class=\"aizhancode\">
<div class=\"codebody\"><pre class=\"brush:java;\">
import java.awt.Color;//颜色
import java.awt.Container;//容器
import java.awt.Font;//字体
import java.awt.Graphics;//所有图形上下文的抽象基类，允许应用程序在组件上绘制线条、文字等内容
import java.awt.event.MouseAdapter;//接收鼠标事件的抽象适配器类
import java.awt.event.MouseEvent;//鼠标事件

import javax.swing.JFrame;</pre></div>
</div>

<p>以上主要使用到java.awt包和javax.swing包。</p>

<p>java.awt：java.awt是一个软件包，早期编写图形界面应用程序的包。如Color类，Font类。</p>

<p>javax.swing：为解决 AWT 存在的问题而新开发的图形界面包。Swing是对AWT的改良和扩展。</p>

<p>第三步：在DrawSee.java文件中，添加窗口配置的代码：</p>

<div class=\"aizhancode\">
<div class=\"codebody\"><pre class=\"brush:java;\">
import java.awt.Color;
import java.awt.Container;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

import javax.swing.JFrame;

public class DrawSee extends JFrame {
  // 背景颜色
  private Color rectColor = new Color(0xf5f5f5);
  
  public DrawSee(){
    Container p = getContentPane();//获取窗口的内容面板
    setBounds(100, 100, 500, 500);//调用父类setBounds方法，移动窗口到(100,100)位置，并设置窗口大小为宽500，高500
    setVisible(true);//调用父类setVisible方法
    p.setBackground(rectColor);//调用对象p的setBackground方法，设置窗口背景颜色
    setLayout(null);  
    setResizable(false);//调用父类setResizable方法，false表示不允许窗口最大化
    this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);//调用父类setDefaultCloseOperation方法，指定窗口关闭时退出程序。  
  }
}</pre></div>
</div>

<p>窗口配置的代码通常放置在初始化方法中，这样在实例化对象时，窗口的一些属性就被指定，随后窗口就会按此设置来显示。</p>

<p>第四步：给项目添加入口方法。在MySee项目中新增加一个类：AppMain类，类代码如下：</p>

<div class=\"aizhancode\">
<div class=\"codebody\"><pre class=\"brush:java;\">
public class AppMain {

  public static void main(String[] args) {
    // TODO Auto-generated method stub
    new DrawSee();
  }

}</pre></div>
</div>

<p>第五步：运行程序，即可看到一个空白内容的窗口。</p>

<p><img alt=\"\" id=\"theimg\" src=\"https://js.aizhan.com/jishu/static/dlimg/201912/157562503465379.png\" style=\"height: 167px; width: 418px\"></p>

<p>以上就是信息管理部技术频道小编给大家介绍的详解Java API的使用方法，其实今天介绍的操作方法很简单，可以在实际操作中演练一下。</p>
						</div>
					',`creator`='信息管理部',`created_at`='2019-12-12 14:22:05',`updated_at`='2019-12-12 14:22:05',`click`='1' WHERE `id` = 32 [ RunTime:0.0011s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000031s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000074s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.013227s ]
INFO: [ view_parse ] --END-- [ RunTime:0.013266s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000684s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000710s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000900s ]
INFO: [ app_end ] --END-- [ RunTime:0.000925s ]

[ 2019-12-12T14:46:29+08:00 ] 192.168.3.91 /Home/Index/ShowDetail?id=32
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000010s ]
INFO: [ app_init ] --END-- [ RunTime:0.001308s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000888s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000914s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0012s ]
SQL: SELECT * FROM `articles` WHERE `id` = 32 LIMIT 1   [ RunTime:0.0006s ]

[ 2019-12-12T14:48:12+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000749s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000789s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000809s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000020s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000041s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.012154s ]
INFO: [ view_parse ] --END-- [ RunTime:0.012183s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000797s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000818s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000975s ]
INFO: [ app_end ] --END-- [ RunTime:0.000995s ]

[ 2019-12-12T14:48:12+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000006s ]
INFO: [ app_init ] --END-- [ RunTime:0.000628s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000767s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000786s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0016s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0027s ]

[ 2019-12-12T14:48:15+08:00 ] 192.168.3.91 /Home/Index/detail?id=26
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000743s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000845s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000875s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0019s ]
SQL: SELECT * FROM `articles` WHERE `id` = 26 LIMIT 1   [ RunTime:0.0005s ]
SQL: UPDATE `articles` SET `origin_url`='https://js.aizhan.com/data/oracle/10562.html',`title`='Oracle中如何实现字符串连接',`text`='<div class=\"container\">
							
<p>在oracle中我们经常会使用<span style=\"color:#002FD9\"><span style=\"color:#002FD9\">字符串</span></span>，但是有时候需要实现字符串连接，这个问题就难倒了不少的朋友，那么我们现在就去看看<span style=\"color:#002FD9\"><span style=\"color:#002FD9\">Oracle</span></span>中如何实现字符串连接的吧，希望对大家有所帮助。</p>

<p>和其他数据库系统类似，Oracle字符串连接使用“||”进行字符串拼接，其使用方式和MSSQLServer中的加号“+”一样。<br><br>
比如执行下面的SQL语句：<br>
 </p>

<div class=\"codetitle\">
<span><u></u></span> 代码如下:</div>

<div class=\"codebody\" id=\"code51844\">
<br>
SELECT \'工号为\'||FNumber||\'的员工姓名为\'||FName FROM T_Employee<br>
WHERE FName IS NOT NULL</div>

<p> </p>

<p><br>
除了“||”，Oracle还支持使用CONCAT()函数进行字符串拼接，比如执行下面的SQL语句：<br>
SELECT CONCAT(\'工号:\',FNumber) FROM T_Employee<br><br>
如果CONCAT中连接的值不是字符串，Oracle会尝试将其转换为字符串，比如执行下面的SQL语句：<br>
SELECT CONCAT(\'年龄:\',FAge) FROM T_Employee<br><br>
与MYSQL的CONCAT()函数不同，Oracle的CONCAT()函数只支持两个参数，不支持两个以上字符串的拼接，比如下面的SQL语句在Oracle中是错误的：<br>
SELECT CONCAT(\'工号为\',FNumber,\'的员工姓名为\',FName) FROM T_Employee<br>
WHERE FName IS NOT NULL<br>
运行以后Oracle会报出下面的错误信息：<br>
参数个数无效<br><br>
如果要进行多个字符串的拼接的话，可以使用多个CONCAT()函数嵌套使用，上面的SQL可以如下改写：</p>

<p> </p>

<p> </p>

<p> </p>

<div class=\"codetitle\">
<span><u></u></span> 代码如下:
</div>

<p> </p>

<p> </p>

<div class=\"codebody\" id=\"code43558\"><br>
SELECT CONCAT(CONCAT(CONCAT(\'工号为\',FNumber),\'的员工姓名为\'),FName) FROM<br>
T_Employee<br>
WHERE FName IS NOT NULL </div>

<p>看完后你知道Oracle中如何实现字符串连接了吗？ 如果有总结的不好的地方欢迎大家指正，更多精彩内容就在信息管理部技术频道！</p>
						</div>
					',`creator`='信息管理部',`created_at`='2019-12-12 14:47:56',`updated_at`='2019-12-12 14:47:56',`click`='1' WHERE `id` = 26 [ RunTime:0.0007s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000028s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000059s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.012623s ]
INFO: [ view_parse ] --END-- [ RunTime:0.012658s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000694s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000717s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000952s ]
INFO: [ app_end ] --END-- [ RunTime:0.000976s ]

[ 2019-12-12T14:48:15+08:00 ] 192.168.3.91 /Home/Index/ShowDetail?id=26
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.000764s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000949s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000979s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0010s ]
SQL: SELECT * FROM `articles` WHERE `id` = 26 LIMIT 1   [ RunTime:0.0004s ]

[ 2019-12-12T14:48:26+08:00 ] 192.168.3.91 /Home/Index/detail?id=25
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000019s ]
INFO: [ app_init ] --END-- [ RunTime:0.001496s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001126s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001163s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0011s ]
SQL: SELECT * FROM `articles` WHERE `id` = 25 LIMIT 1   [ RunTime:0.0005s ]
SQL: UPDATE `articles` SET `origin_url`='https://js.aizhan.com/data/oracle/10598.html',`title`='设计大型Oracle数据库的方法',`text`='<div class=\"container\">
							
<p>　　<span style=\"color:#002FD9\"><span style=\"color:#002FD9\">Oracle</span></span><span style=\"color:#002FD9\"><span style=\"color:#002FD9\">数据库</span></span>可以为我们存储很多数重要数据，但是有时候数据过多的时候就会空间不足，那么你知道如何设计大型oracle数据吗?如果你还不知道的话就跟小编一起去看看设计大型Oracle数据库的方法。</p>

<p>　　<strong>一、概论</strong>　　超大型系统的特点为：</p>

<p>　　1、处理的用户数一般都超过百万，有的还超过千万，数据库的数据量一般超过1TB;</p>

<p>　　2、系统必须提供实时响应功能，系统需不停机运行，要求系统有很高的可用性及可扩展性。</p>

<p>　　为了能达到以上要求，除了需要性能优越的计算机和海量存储设备外，还需要先进的数据库结构设计和优化的应用系统。</p>

<p>　　一般的超大型系统采用双机或多机集群系统。下面以数据库采用Oracle 8.0.6并行服务器为例来谈谈超大型数据库设计方法：</p>

<p>　　确定系统的ORACLE并行服务器应用划分策略</p>

<p>　　数据库物理结构的设计</p>

<p>　　系统硬盘的划分及分配</p>

<p>　　备份及恢复策略的考虑</p>

<p>　　<strong>二、Oracle并行服务器应用划分策略</strong></p>

<p>　　Oracle并行服务器允许不同节点上的多个INSTANCE实例同时访问一个数据库，以提高系统的可用性、可扩展性及性能。Oracle并行服务器中的每个INSTANCE实例都可将共享数据库中的表或索引的数据块读入本地的缓冲区中，这就意味着一个数据块可存在于多个INSTANCE实例的SGA区中。那么保持这些缓冲区的数据的一致性就很重要。Oracle使用 PCM( Parallel Cache Management)锁维护缓冲区的一致性，Oracle同时通过I DLM(集成的分布式锁管理器)实现PCM 锁,并通过专门的LCK进程实现INSTANCE实例间的数据一致。</p>

<p>　　考虑这种情况：INSTANCE1对BLOCK X块修改，这时INSTANCE2对BLOCK X块也需要修改。Oracle并行服务器利用PCM锁机制，使BLOCK X从INSTANCE 1的SGA区写入数据库数据文件中，又从数据文件中把BLOCK X块读入INSTANCE2的SGA区中。发生这种情况即为一个PING。PING使原来1个MEMORY IO可以完成的工作变成2个DISK IO和1个 MEMORY IO才能够完成,如果系统中有过多的PING，将大大降低系统的性能。</p>

<p>　　Oracle并行服务器中的每个PCM锁可管理多个数据块。PCM锁管理的数据块的个数与分配给一个数据文件的PCM锁的个数及该数据文件的大小有关。当INSTANCE 1和INSTANCE 2要操作不同的BLOCK，如果这些BLOCK 是由同一个PCM锁管理的,仍然会发生PING。这些PING称为FALSE PING。当多个INSTANCE访问相同的BLOCK而产生的PING是TRUE PING。</p>

<p>　　合理的应用划分使不同的应用访问不同的数据，可避免或减少TRUE PING;通过给FALSE PING较多的数据文件分配更多的PCM锁可减少 FALSE PING的次数，增加PCM锁不能减少TRUE PING。</p>

<p>　　所以，Oracle并行服务器设计的目的是使系统交易处理合理的分布在INSTANCE实例间，以最小化PING，同时合理的分配PCM锁，减少FALSE PING。设计的关键是找出可能产生的冲突，从而决定应用划分的策略。应用划分有如下四种方法：</p>

<p>　　1、根据功能模块划分，不同的节点运行不同的应用</p>

<p>　　2、根据用户划分，不同类型的用户运行在不同的节点上</p>

<p>　　3、根据数据划分，不同的节点访问不同的数据或索引</p>

<p>　　4、根据时间划分，不同的应用在不同的时间段运行</p>

<p>　　应用划分的两个重要原则是使PING最小化及使各节点的负载大致均衡。</p>

<p>　　<strong>三、数据库物理结构的设计</strong></p>

<p>　　数据库物理结构设计包括确定表及索引的物理存储参数，确定及分配数据库表空间，确定初始的回滚段，临时表空间，redo log files等，并确定主要的初始化参数。物理设计的目的是提高系统的性能。整个物理设计的参数可以根据实际运行情况作调整。</p>

<p>　　表及索引数据量估算及物理存储参数的设置</p>

<p>　　表及索引的存储容量估算是根据其记录长度及估算的最大记录数确定的。在容量计算中考虑了数据块的头开销及记录和字段的头开销等等。表及索引的initial和next存储参数一般设为相等，pctincrease设为0。</p>

<p>　　上文就是小编为大家介绍设计大型Oracle数据库的方法，如果你也有这样的需要，那就赶快来学习一下吧。如果大家喜欢信息管理部技术频道的话，不妨可以推荐更多的朋友来哟!</p>
						</div>
					',`creator`='信息管理部',`created_at`='2019-12-12 14:47:55',`updated_at`='2019-12-12 14:47:55',`click`='1' WHERE `id` = 25 [ RunTime:0.0007s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000052s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000080s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.013132s ]
INFO: [ view_parse ] --END-- [ RunTime:0.013165s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000606s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000627s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000853s ]
INFO: [ app_end ] --END-- [ RunTime:0.000873s ]

[ 2019-12-12T14:48:26+08:00 ] 192.168.3.91 /Home/Index/ShowDetail?id=25
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000649s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000786s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000807s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0018s ]
SQL: SELECT * FROM `articles` WHERE `id` = 25 LIMIT 1   [ RunTime:0.0005s ]

[ 2019-12-12T14:49:27+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000004s ]
INFO: [ app_init ] --END-- [ RunTime:0.000506s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000560s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000575s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000016s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000033s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.008284s ]
INFO: [ view_parse ] --END-- [ RunTime:0.008310s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000497s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000513s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000676s ]
INFO: [ app_end ] --END-- [ RunTime:0.000692s ]

[ 2019-12-12T14:49:27+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000026s ]
INFO: [ app_init ] --END-- [ RunTime:0.001424s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000758s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000779s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0015s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0026s ]

[ 2019-12-12T14:49:33+08:00 ] 192.168.3.91 /Home/Index/detail?id=28
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000017s ]
INFO: [ app_init ] --END-- [ RunTime:0.001032s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000929s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000959s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0017s ]
SQL: SELECT * FROM `articles` WHERE `id` = 28 LIMIT 1   [ RunTime:0.0007s ]
SQL: UPDATE `articles` SET `origin_url`='https://js.aizhan.com/data/oracle/10560.html',`title`='关于oracle的常用函数',`text`='<div class=\"container\">
							
<p>在oracle中经常会需要使用到<span style=\"color:#002FD9\">函数</span>，那么你知道oracle的常用函数有哪些吗？那么今天小编就为大家分享关于oracle的常用函数，不了解的朋友们可以一起来参考下。</p>

<p><strong><font style=\"COLOR: #ff0000\">一、运算符</font></strong><br>
算术运算符：+ - * / 可以在select 语句中使用<br>
连接运算符：|| select deptno|| dname from dept;<br>
比较运算符：> >= = != < <= like between is null in<br>
逻辑运算符：not and or<br>
集合运算符： intersect ，union， union all， minus<br><strong>要求：</strong>对应集合的列数和数据类型相同<br>
     查询中不能包含long 列<br>
     列的标签是第一个集合的标签<br>
     使用order by时，必须使用位置序号，不能使用列名<br><br>
例：集合运算符的使用：</p>

<div class=\"codetitle\">
<span><u></u></span> 代码如下:</div>

<div class=\"codebody\" id=\"code46360\">
<br>
intersect ，union， union all， minus<br>
select * from emp intersect select * from emp where deptno=10 ;<br>
select * from emp minus select * from emp where deptno=10;<br>
select * from emp where deptno=10 union select * from emp where deptno in (10,20); --不包括重复行<br>
select * from emp where deptno=10 union all select * from emp where deptno in (10,20); --包括重复行</div>

<p><br><strong><font style=\"COLOR: #ff0000\">二.ORACLE日期时间函数大全</font> </strong><br>
   TO_DATE格式(以时间:2007-11-02   13:45:25为例)<br><br>
        Year:     <br>
        yy two digits 两位年                显示值:07<br>
        yyy three digits 三位年                显示值:007<br>
        yyyy four digits 四位年                显示值:2007<br><br>
        Month:     <br>
        mm    number     两位月              显示值:11<br>
        mon    abbreviated 字符集表示          显示值:11月,若是英文版,显示nov    <br>
        month spelled out 字符集表示          显示值:11月,若是英文版,显示november<br><br>
        Day:     <br>
        dd    number         当月第几天        显示值:02<br>
        ddd    number         当年第几天        显示值:02<br>
        dy    abbreviated 当周第几天简写    显示值:星期五,若是英文版,显示fri<br>
        day    spelled out   当周第几天全写    显示值:星期五,若是英文版,显示friday       <br>
        ddspth spelled out, ordinal twelfth<br><br>
              Hour:<br>
              hh    two digits 12小时进制            显示值:01<br>
              hh24 two digits 24小时进制            显示值:13<br><br>
              Minute:<br>
              mi    two digits 60进制                显示值:45<br><br>
              Second:<br>
              ss    two digits 60进制                显示值:25<br><br>
              其它<br>
              Q     digit         季度                  显示值:4<br>
              WW    digit         当年第几周            显示值:44<br>
              W    digit          当月第几周            显示值:1<br><br>
        24小时格式下时间范围为： 0:00:00 - 23:59:59....     <br>
        12小时格式下时间范围为： 1:00:00 - 12:59:59 ....<br><br><strong>1. 日期和字符转换函数用法（to_date,to_char）</strong><br>
        <br>
select to_char(sysdate,\'yyyy-mm-dd hh24:mi:ss\') as nowTime from dual;   //日期转化为字符串  <br>
select to_char(sysdate,\'yyyy\') as nowYear   from dual;   //获取时间的年  <br>
select to_char(sysdate,\'mm\')    as nowMonth from dual;   //获取时间的月  <br>
select to_char(sysdate,\'dd\')    as nowDay    from dual;   //获取时间的日  <br>
select to_char(sysdate,\'hh24\') as nowHour   from dual;   //获取时间的时  <br>
select to_char(sysdate,\'mi\')    as nowMinute from dual;   //获取时间的分  <br>
select to_char(sysdate,\'ss\')    as nowSecond from dual;   //获取时间的秒<br><br>
select to_date(\'2004-05-07 13:23:44\',\'yyyy-mm-dd hh24:mi:ss\')    from dual//<br><br><strong>2. select to_char( to_date(222,\'J\'),\'Jsp\') from dual</strong>     <br><br>
    显示Two Hundred Twenty-Two  <br><br><strong>3.求某天是星期几</strong>     <br>
   select to_char(to_date(\'2002-08-26\',\'yyyy-mm-dd\'),\'day\') from dual;     <br>
   星期一     <br>
   select to_char(to_date(\'2002-08-26\',\'yyyy-mm-dd\'),\'day\',\'NLS_DATE_LANGUAGE = American\') from dual;     <br>
   monday     <br>
   设置日期语言     <br>
   ALTER SESSION SET NLS_DATE_LANGUAGE=\'AMERICAN\';     <br>
   也可以这样     <br>
   TO_DATE (\'2002-08-26\', \'YYYY-mm-dd\', \'NLS_DATE_LANGUAGE = American\')     <br><br><strong>4. 两个日期间的天数</strong>     <br>
    select floor(sysdate - to_date(\'20020405\',\'yyyymmdd\')) from dual;  <br><br><strong>5. 时间为null的用法</strong>     <br>
   select id, active_date from table1     <br>
   UNION     <br>
   select 1, TO_DATE(null) from dual;      <br>
   注意要用TO_DATE(null)     <br><br><strong>6.月份差</strong>  <br>
   a_date between to_date(\'20011201\',\'yyyymmdd\') and to_date(\'20011231\',\'yyyymmdd\')     <br>
   那么12月31号中午12点之后和12月1号的12点之前是不包含在这个范围之内的。     <br>
   所以，当时间需要精确的时候，觉得to_char还是必要的<br><br><strong>7. 日期格式冲突问题</strong>     <br>
    输入的格式要看你安装的ORACLE字符集的类型, 比如: US7ASCII, date格式的类型就是: \'01-Jan-01\'     <br>
    alter system set NLS_DATE_LANGUAGE = American     <br>
    alter session set NLS_DATE_LANGUAGE = American     <br>
    或者在to_date中写     <br>
    select to_char(to_date(\'2002-08-26\',\'yyyy-mm-dd\'),\'day\',\'NLS_DATE_LANGUAGE = American\') from dual;     <br>
    注意我这只是举了NLS_DATE_LANGUAGE，当然还有很多，     <br>
    可查看     <br>
    select * from nls_session_parameters     <br>
    select * from V$NLS_PARAMETERS     <br><strong>8.</strong>     </p>

<p> </p>

<div class=\"codetitle\">
<span><u></u></span> 代码如下:</div>

<p> </p>

<div class=\"codebody\" id=\"code38074\">
<br>
   select count(*)     <br>
   from ( select rownum-1 rnum     <br>
       from all_objects     <br>
       where rownum <= to_date(\'2002-02-28\',\'yyyy-mm-dd\') - to_date(\'2002-     <br>
       02-01\',\'yyyy-mm-dd\')+1     <br>
      )     <br>
   where to_char( to_date(\'2002-02-01\',\'yyyy-mm-dd\')+rnum-1, \'D\' )     <br>
        not in ( \'1\', \'7\' )     </div>

<p><br>
   查找2002-02-28至2002-02-01间除星期一和七的天数     <br>
   在前后分别调用DBMS_UTILITY.GET_TIME, 让后将结果相减(得到的是1/100秒, 而不是毫秒).     <br><br><strong>9. 查找月份</strong>  </p>

<p> </p>

<div class=\"codetitle\">
<span><u></u></span> 代码如下:</div>

<p> </p>

<div class=\"codebody\" id=\"code16048\">
<br>
    select months_between(to_date(\'01-31-1999\',\'MM-DD-YYYY\'),to_date(\'12-31-1998\',\'MM-DD-YYYY\')) \"MONTHS\" FROM DUAL;     <br>
    1     <br>
   select months_between(to_date(\'02-01-1999\',\'MM-DD-YYYY\'),to_date(\'12-31-1998\',\'MM-DD-YYYY\')) \"MONTHS\" FROM DUAL;     <br>
    1.03225806451613</div>

<p><br><strong>10. Next_day的用法</strong>     </p>

<p> </p>

<div class=\"codetitle\">
<span><u></u></span> 代码如下:</div>

<p> </p>

<div class=\"codebody\" id=\"code55569\">
<br>
    Next_day(date, day)     <br><br>
    Monday-Sunday, for format code DAY     <br>
    Mon-Sun, for format code DY     <br>
    1-7, for format code D    </div>

<p><br><strong>11</strong>     <br>
   select to_char(sysdate,\'hh:mi:ss\') TIME from all_objects     <br>
   注意：第一条记录的TIME 与最后一行是一样的     <br>
   可以建立一个函数来处理这个问题     </p>

<p> </p>

<div class=\"codetitle\">
<span><u></u></span> 代码如下:</div>

<p> </p>

<div class=\"codebody\" id=\"code37006\">
<br>
   create or replace function sys_date return date is     <br>
   begin     <br>
   return sysdate;     <br>
   end;     <br><br>
   select to_char(sys_date,\'hh:mi:ss\') from all_objects;  </div>

<p><br><strong>12.获得小时数</strong>     <br>
     extract()找出日期或间隔值的字段值</p>

<p> </p>

<div class=\"codetitle\">
<span><u></u></span> 代码如下:</div>

<p> </p>

<div class=\"codebody\" id=\"code19252\">
<br>
    SELECT EXTRACT(HOUR FROM TIMESTAMP \'2001-02-16 2:38:40\') from offer     <br>
    SQL> select sysdate ,to_char(sysdate,\'hh\') from dual;     <br><br>
    SYSDATE TO_CHAR(SYSDATE,\'HH\')     <br>
    -------------------- ---------------------     <br>
    2003-10-13 19:35:21 07     <br><br>
    SQL> select sysdate ,to_char(sysdate,\'hh24\') from dual;     <br><br>
    SYSDATE TO_CHAR(SYSDATE,\'HH24\')     <br>
    -------------------- -----------------------     <br>
    2003-10-13 19:35:21 19     </div>

<p><br><strong>13.年月日的处理</strong>     </p>

<p> </p>

<div class=\"codetitle\">
<span><u></u></span> 代码如下:</div>

<p> </p>

<div class=\"codebody\" id=\"code45955\">
<br>
   select older_date,     <br>
       newer_date,     <br>
       years,     <br>
       months,     <br>
       abs(     <br>
        trunc(     <br>
         newer_date-     <br>
         add_months( older_date,years*12+months )     <br>
        )     <br>
       ) days<br><br>
   from ( select     <br>
        trunc(months_between( newer_date, older_date )/12) YEARS,     <br>
        mod(trunc(months_between( newer_date, older_date )),12 ) MONTHS,     <br>
        newer_date,     <br>
        older_date     <br>
        from (<br>
              select hiredate older_date, add_months(hiredate,rownum)+rownum newer_date     <br>
              from emp<br>
             )     <br>
      )     </div>

<p><br><strong>14.处理月份天数不定的办法</strong>     <br>
   select to_char(add_months(last_day(sysdate) +1, -2), \'yyyymmdd\'),last_day(sysdate) from dual     <br><strong>16.找出今年的天数</strong>     <br>
   select add_months(trunc(sysdate,\'year\'), 12) - trunc(sysdate,\'year\') from dual     <br>
   闰年的处理方法     <br>
   to_char( last_day( to_date(\'02\'    | | :year,\'mmyyyy\') ), \'dd\' )     <br>
   如果是28就不是闰年     <br><strong>17.yyyy与rrrr的区别</strong>     </p>

<p> </p>

<div class=\"codetitle\">
<span><u></u></span> 代码如下:</div>

<p> </p>

<div class=\"codebody\" id=\"code65845\">
<br>
   \'YYYY99 TO_C     <br>
   ------- ----     <br>
   yyyy 99 0099     <br>
   rrrr 99 1999     <br>
   yyyy 01 0001     <br>
   rrrr 01 2001     </div>

<p><br><strong>18.不同时区的处理</strong>     <br>
   select to_char( NEW_TIME( sysdate, \'GMT\',\'EST\'), \'dd/mm/yyyy hh:mi:ss\') ,sysdate     <br>
   from dual;   <br><br><strong>19.5秒钟一个间隔</strong>  </p>

<p> </p>

<div class=\"codetitle\">
<span><u></u></span> 代码如下:</div>

<p> </p>

<div class=\"codebody\" id=\"code32733\">
<br>
   Select TO_DATE(FLOOR(TO_CHAR(sysdate,\'SSSSS\')/300) * 300,\'SSSSS\') ,TO_CHAR(sysdate,\'SSSSS\')     <br>
   from dual     <br>
   2002-11-1 9:55:00 35786     <br>
   SSSSS表示5位秒数    <br>
  </div>

<p><br><strong>20.一年的第几天</strong>     <br>
   select TO_CHAR(SYSDATE,\'DDD\'),sysdate from dual<br><br>
   310 2002-11-6 10:03:51     <br><br><strong>21.计算小时,分,秒,毫秒</strong> </p>

<p> </p>

<div class=\"codetitle\">
<span><u></u></span> 代码如下:</div>

<p> </p>

<div class=\"codebody\" id=\"code32070\">
<br>
     select     <br>
     Days,     <br>
     A,     <br>
     TRUNC(A*24) Hours,     <br>
     TRUNC(A*24*60 - 60*TRUNC(A*24)) Minutes,     <br>
     TRUNC(A*24*60*60 - 60*TRUNC(A*24*60)) Seconds,     <br>
     TRUNC(A*24*60*60*100 - 100*TRUNC(A*24*60*60)) mSeconds     <br>
    from     <br>
    (     <br>
     select     <br>
     trunc(sysdate) Days,     <br>
     sysdate - trunc(sysdate) A     <br>
     from dual     <br>
   )     <br>
   select * from tabname     <br>
   order by decode(mode,\'FIFO\',1,-1)*to_char(rq,\'yyyymmddhh24miss\');     <br><br>
   //     <br>
   floor((date2-date1) /365) 作为年     <br>
   floor((date2-date1, 365) /30) 作为月     <br>
   d(mod(date2-date1, 365), 30)作为日.</div>

<p><br><strong>23.next_day函数</strong>      返回下个星期的日期,day为1-7或星期日-星期六,1表示星期日<br>
   next_day(sysdate,6)是从当前开始下一个星期五。后面的数字是从星期日开始算起。     <br>
   1 2 3 4 5 6 7     <br>
   日 一 二 三 四 五 六   <br><br>
   ---------------------------------------------------------------<br><br>
   select    (sysdate-to_date(\'2003-12-03 12:55:45\',\'yyyy-mm-dd hh24:mi:ss\'))*24*60*60 from ddual<br>
   日期 返回的是天 然后 转换为ss<br><br><strong>24,round[舍入到最接近的日期](day:舍入到最接近的星期日)</strong><br>
   select sysdate S1,<br>
   round(sysdate) S2 ,<br>
   round(sysdate,\'year\') YEAR,<br>
   round(sysdate,\'month\') MONTH ,<br>
   round(sysdate,\'day\') DAY from dual<br><br><strong>25,trunc[截断到最接近的日期,单位为天] ,返回的是日期类型</strong><br>
   select sysdate S1,                    <br>
     trunc(sysdate) S2,                 //返回当前日期,无时分秒<br>
     trunc(sysdate,\'year\') YEAR,        //返回当前年的1月1日,无时分秒<br>
     trunc(sysdate,\'month\') MONTH ,     //返回当前月的1日,无时分秒<br>
     trunc(sysdate,\'day\') DAY           //返回当前星期的星期天,无时分秒<br>
   from dual<br><br><strong>26,返回日期列表中最晚日期</strong><br>
   select greatest(\'01-1月-04\',\'04-1月-04\',\'10-2月-04\') from dual<br><br><strong>27.计算时间差</strong><br>
     注:oracle时间差是以天数为单位,所以换算成年月,日<br><br>
      select floor(to_number(sysdate-to_date(\'2007-11-02 15:55:03\',\'yyyy-mm-dd hh24:mi:ss\'))/365) as spanYears from dual        //时间差-年<br>
      select ceil(moths_between(sysdate-to_date(\'2007-11-02 15:55:03\',\'yyyy-mm-dd hh24:mi:ss\'))) as spanMonths from dual        //时间差-月<br>
      select floor(to_number(sysdate-to_date(\'2007-11-02 15:55:03\',\'yyyy-mm-dd hh24:mi:ss\'))) as spanDays from dual             //时间差-天<br>
      select floor(to_number(sysdate-to_date(\'2007-11-02 15:55:03\',\'yyyy-mm-dd hh24:mi:ss\'))*24) as spanHours from dual         //时间差-时<br>
      select floor(to_number(sysdate-to_date(\'2007-11-02 15:55:03\',\'yyyy-mm-dd hh24:mi:ss\'))*24*60) as spanMinutes from dual    //时间差-分<br>
      select floor(to_number(sysdate-to_date(\'2007-11-02 15:55:03\',\'yyyy-mm-dd hh24:mi:ss\'))*24*60*60) as spanSeconds from dual //时间差-秒<br><br><strong>28.更新时间</strong><br>
     注:oracle时间加减是以天数为单位,设改变量为n,所以换算成年月,日<br>
     select to_char(sysdate,\'yyyy-mm-dd hh24:mi:ss\'),to_char(sysdate+n*365,\'yyyy-mm-dd hh24:mi:ss\') as newTime from dual        //改变时间-年<br>
     select to_char(sysdate,\'yyyy-mm-dd hh24:mi:ss\'),add_months(sysdate,n) as newTime from dual                                 //改变时间-月<br>
     select to_char(sysdate,\'yyyy-mm-dd hh24:mi:ss\'),to_char(sysdate+n,\'yyyy-mm-dd hh24:mi:ss\') as newTime from dual            //改变时间-日<br>
     select to_char(sysdate,\'yyyy-mm-dd hh24:mi:ss\'),to_char(sysdate+n/24,\'yyyy-mm-dd hh24:mi:ss\') as newTime from dual         //改变时间-时<br>
     select to_char(sysdate,\'yyyy-mm-dd hh24:mi:ss\'),to_char(sysdate+n/24/60,\'yyyy-mm-dd hh24:mi:ss\') as newTime from dual      //改变时间-分<br>
     select to_char(sysdate,\'yyyy-mm-dd hh24:mi:ss\'),to_char(sysdate+n/24/60/60,\'yyyy-mm-dd hh24:mi:ss\') as newTime from dual   //改变时间-秒<br><br><strong>29.查找月的第一天,最后一天</strong><br>
     SELECT Trunc(Trunc(SYSDATE, \'MONTH\') - 1, \'MONTH\') First_Day_Last_Month,<br>
       Trunc(SYSDATE, \'MONTH\') - 1 / 86400 Last_Day_Last_Month,<br>
       Trunc(SYSDATE, \'MONTH\') First_Day_Cur_Month,<br>
       LAST_DAY(Trunc(SYSDATE, \'MONTH\')) + 1 - 1 / 86400 Last_Day_Cur_Month<br>
   FROM dual;<br><br><strong><font style=\"COLOR: #ff0000\">三. 字符函数(可用于字面字符或数据库列)</font><br>
1，字符串截取</strong><br>
   select substr(\'abcdef\',1,3) from dual<br><br><strong>2,查找子串位置</strong><br>
   select instr(\'abcfdgfdhd\',\'fd\') from dual<br><br><strong>3,字符串连接</strong><br>
   select \'HELLO\'||\'hello world\' from dual;<br><br><strong>4, 1)去掉字符串中的空格</strong><br>
    select ltrim(\' abc\') s1,<br>
    rtrim(\'zhang \') s2,<br>
    trim(\' zhang \') s3 from dual<br><br>
   <strong>2)去掉前导和后缀</strong><br>
    select trim(leading 9 from 9998767999) s1,<br>
    trim(trailing 9 from 9998767999) s2,<br>
    trim(9 from 9998767999) s3 from dual;<br><br><strong>5,返回字符串首字母的Ascii值</strong><br>
   select ascii(\'a\') from dual<br><br><strong>6,返回ascii值对应的字母</strong><br>
   select chr(97) from dual<br><br><strong>7,计算字符串长度 </strong><br>
   select length(\'abcdef\') from dual<br><br><strong>8,initcap（首字母变大写） ,lower(变小写),upper(变大写)</strong><br>
   select lower(\'ABC\') s1, <br>
       upper(\'def\') s2,<br>
       initcap(\'efg\') s3<br>
   from dual;<br><br><strong>9,Replace</strong><br>
   select replace(\'abc\',\'b\',\'xy\') from dual;<br><br><strong>10,translate</strong><br>
   select translate(\'abc\',\'b\',\'xx\') from dual; -- x是1位<br><br><strong>11,lpad [左添充] rpad [右填充](用于控制输出格式)</strong><br>
   select lpad(\'func\',15,\'=\') s1, rpad(\'func\',15,\'-\') s2 from dual;<br>
   select lpad(dname,14,\'=\') from dept;<br><br><strong>12, decode[实现if ..then 逻辑]</strong>   注:第一个是表达式,最后一个是不满足任何一个条件的值<br>
   select deptno,decode(deptno,10,\'1\',20,\'2\',30,\'3\',\'其他\') from dept;<br>
   例:<br>
   select seed,account_name,decode(seed,111,1000,200,2000,0) from t_userInfo//如果seed为111,则取1000;为200,取2000;其它取0<br>
   select seed,account_name,decode(sign(seed-111),1,\'big seed\',-1,\'little seed\',\'equal seed\') from t_userInfo//如果seed>111,则显示大;为200,则显示小;其它则显示相等<br><br><strong>13 case[实现switch ..case 逻辑]</strong></p>

<p> </p>

<div class=\"codetitle\">
<span><u></u></span> 代码如下:</div>

<p> </p>

<div class=\"codebody\" id=\"code7503\">
<br>
    SELECT CASE X-FIELD<br>
         WHEN X-FIELD < 40 THEN \'X-FIELD 小于 40\'<br>
         WHEN X-FIELD < 50 THEN \'X-FIELD 小于 50\'<br>
         WHEN X-FIELD < 60 THEN \'X-FIELD 小于 60\'<br>
         ELSE \'UNBEKNOWN\'<br>
        END<br>
   FROM DUAL</div>

<p>  <br>
注:CASE语句在处理类似问题就显得非常灵活。当只是需要匹配少量数值时，用Decode更为简洁。<br><br><strong><font style=\"COLOR: #ff0000\">四.数字函数</font><br>
1，取整函数（ceil 向上取整,floor 向下取整）</strong><br>
   select ceil(66.6) N1,floor(66.6) N2 from dual;<br><br><strong>2, 取幂(power) 和 求平方根(sqrt)</strong><br>
   select power(3,2) N1,sqrt(9) N2 from dual;<br><br><strong>3,求余</strong><br>
   select mod(9,5) from dual;<br><br><strong>4,返回固定小数位数 (round:四舍五入，trunc:直接截断)</strong><br>
   select round(66.667,2) N1,trunc(66.667,2) N2 from dual;<br><br><strong>5,返回值的符号(正数返回为1,负数为-1)</strong><br>
   select sign(-32),sign(293) from dual;<br><br><strong><font style=\"COLOR: #ff0000\">五.转换函数</font></strong><br><strong>1，to_char()[将日期和数字类型转换成字符类型]</strong><br>
   1) select to_char(sysdate) s1,<br>
        to_char(sysdate,\'yyyy-mm-dd\') s2,<br>
        to_char(sysdate,\'yyyy\') s3,<br>
        to_char(sysdate,\'yyyy-mm-dd hh12:mi:ss\') s4,<br>
        to_char(sysdate, \'hh24:mi:ss\') s5,<br>
        to_char(sysdate,\'DAY\') s6<br>
    from dual;<br>
   2) select sal,to_char(sal,\'＄99999\') n1,to_char(sal,\'＄99,999\') n2 from emp<br><br><strong>2, to_date()[将字符类型转换为日期类型] </strong><br>
    insert into emp(empno,hiredate) values(8000,to_date(\'2004-10-10\',\'yyyy-mm-dd\'));<br><br><strong>3, to_number() 转换为数字类型 </strong><br>
    select to_number(to_char(sysdate,\'hh12\')) from dual; //以数字显示的小时数<br><br><strong><font style=\"COLOR: #ff0000\">六.其他函数</font></strong><br>
   <strong>1.user:</strong><br>
    返回登录的用户名称<br>
    select user from dual;<br><br>
   <strong>2.vsize: </strong><br>
    返回表达式所需的字节数<br>
    select vsize(\'HELLO\') from dual;<br><br>
   <strong>3.nvl(ex1,ex2): 　</strong><br>
    ex1值为空则返回ex2,否则返回该值本身ex1（常用）<br>
    例：如果雇员没有佣金，将显示0，否则显示佣金<br>
    select comm,nvl(comm,0) from emp;<br><br>
   <strong>4.nullif(ex1,ex2): </strong><br>
    值相等返空，否则返回第一个值<br>
    例：如果工资和佣金相等，则显示空，否则显示工资<br>
    select nullif(sal,comm),sal,comm from emp;<br><br>
  <strong> 5.coalesce: 　</strong><br>
    返回列表中第一个非空表达式<br>
    select comm,sal,coalesce(comm,sal,sal*10) from emp;<br><br>
   <strong>6.nvl2(ex1,ex2,ex3) :</strong><br>
    如果ex1不为空，显示ex2,否则显示ex3<br>
    如：查看有佣金的雇员姓名以及他们的佣金<br>
    select nvl2(comm,ename,\') as HaveCommName,comm from emp;<br><br>
  <br><strong><font style=\"COLOR: #ff0000\">七.分组函数</font></strong><br>
max min avg count sum<br><strong>1，整个结果集是一个组</strong><br>
   1) 求部门30 的最高工资，最低工资,平均工资，总人数，有工作的人数，工种数量及工资总和</p>

<div class=\"codetitle\">
<span><u></u></span> 代码如下:</div>

<div class=\"codebody\" id=\"code81204\">
<br>
     select max(ename),max(sal),<br>
     min(ename),min(sal),<br>
     avg(sal),<br>
     count(*) ,count(job),count(distinct(job)) ,<br>
     sum(sal) from emp where deptno=30;</div>

<p><br><strong>2, 带group by 和 having 的分组</strong><br>
   1)按部门分组求最高工资，最低工资，总人数，有工作的人数，工种数量及工资总和</p>

<p> </p>

<div class=\"codetitle\">
<span><u></u></span> 代码如下:</div>

<p> </p>

<div class=\"codebody\" id=\"code33542\">   <br>
    select deptno, max(ename),max(sal),<br>
    min(ename),min(sal),<br>
    avg(sal),<br>
    count(*) ,count(job),count(distinct(job)) ,<br>
    sum(sal) from emp group by deptno;</div>

<p>  <br>
   2)部门30的最高工资，最低工资，总人数，有工作的人数，工种数量及工资总和</p>

<div class=\"codetitle\">
<span><u></u></span> 代码如下:</div>

<div class=\"codebody\" id=\"code76527\">   <br>
    select deptno, max(ename),max(sal),<br>
    min(ename),min(sal),<br>
    avg(sal),<br>
    count(*) ,count(job),count(distinct(job)) ,<br>
    sum(sal) from emp group by deptno having deptno=30;</div>

<p>  <br><strong>3, stddev 返回一组值的标准偏差</strong><br>
    select deptno,stddev(sal) from emp group by deptno;<br>
    variance 返回一组值的方差差<br>
    select deptno,variance(sal) from emp group by deptno;<br><br><strong>4, 带有rollup和cube操作符的Group By</strong><br>
    rollup 按分组的第一个列进行统计和最后的小计<br>
    cube 按分组的所有列的进行统计和最后的小计<br>
    select deptno,job ,sum(sal) from emp group by deptno,job;<br>
    select deptno,job ,sum(sal) from emp group by rollup(deptno,job);<br>
    cube 产生组内所有列的统计和最后的小计<br>
    select deptno,job ,sum(sal) from emp group by cube(deptno,job);<br><br><strong><font style=\"COLOR: #ff0000\">八、临时表</font></strong><br>
   只在会话期间或在事务处理期间存在的表.<br>
   临时表在插入数据时，动态分配空间</p>

<div class=\"codetitle\">
<span><u></u></span> 代码如下:</div>

<div class=\"codebody\" id=\"code689\">
<br>
   create global temporary table temp_dept<br>
   (dno number,<br>
   dname varchar2(10))<br>
   on commit delete rows;<br>
   insert into temp_dept values(10,\'ABC\');<br>
   commit;<br>
   select * from temp_dept; --无数据显示,数据自动清除<br>
   on commit preserve rows:在会话期间表一直可以存在（保留数据）<br>
   on commit delete rows:事务结束清除数据（在事务结束时自动删除表的数据）</div>

<p><br>
除法：</p>

<p> </p>

<div class=\"codetitle\">
<span><u></u></span> 代码如下:
</div>

<p> </p>

<div class=\"codebody\" id=\"code28202\"><br>
select MOD(65,50) from dual     --取余<br>
select  trunc( 65/33) from dual  -- 取整 trunc (1.9) = 1<br>
select ceil(65/60) from dual          -- 取整 ceil(1.1) = 2</div>

<p> </p>

<p>关于oracle的常用函数就为大家介绍到这里了，大家不妨可以尝试一下。只要你去发现，去努力，没有什么是不可能的。</p>
						</div>
					',`creator`='信息管理部',`created_at`='2019-12-12 14:48:00',`updated_at`='2019-12-12 14:48:00',`click`='1' WHERE `id` = 28 [ RunTime:0.0019s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000028s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000056s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.012256s ]
INFO: [ view_parse ] --END-- [ RunTime:0.012290s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000617s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000639s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000881s ]
INFO: [ app_end ] --END-- [ RunTime:0.000902s ]

[ 2019-12-12T14:49:33+08:00 ] 192.168.3.91 /Home/Index/ShowDetail?id=28
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000758s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000789s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000811s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0016s ]
SQL: SELECT * FROM `articles` WHERE `id` = 28 LIMIT 1   [ RunTime:0.0007s ]

[ 2019-12-12T14:49:56+08:00 ] 192.168.3.91 /Home/Index/detail?id=28
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000006s ]
INFO: [ app_init ] --END-- [ RunTime:0.000549s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000613s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000633s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0016s ]
SQL: SELECT * FROM `articles` WHERE `id` = 28 LIMIT 1   [ RunTime:0.0006s ]
SQL: UPDATE `articles` SET `origin_url`='https://js.aizhan.com/data/oracle/10560.html',`title`='关于oracle的常用函数',`text`='<div class=\"container\">
							
<p>在oracle中经常会需要使用到<span style=\"color:#002FD9\">函数</span>，那么你知道oracle的常用函数有哪些吗？那么今天小编就为大家分享关于oracle的常用函数，不了解的朋友们可以一起来参考下。</p>

<p><strong><font style=\"COLOR: #ff0000\">一、运算符</font></strong><br>
算术运算符：+ - * / 可以在select 语句中使用<br>
连接运算符：|| select deptno|| dname from dept;<br>
比较运算符：> >= = != < <= like between is null in<br>
逻辑运算符：not and or<br>
集合运算符： intersect ，union， union all， minus<br><strong>要求：</strong>对应集合的列数和数据类型相同<br>
     查询中不能包含long 列<br>
     列的标签是第一个集合的标签<br>
     使用order by时，必须使用位置序号，不能使用列名<br><br>
例：集合运算符的使用：</p>

<div class=\"codetitle\">
<span><u></u></span> 代码如下:</div>

<div class=\"codebody\" id=\"code46360\">
<br>
intersect ，union， union all， minus<br>
select * from emp intersect select * from emp where deptno=10 ;<br>
select * from emp minus select * from emp where deptno=10;<br>
select * from emp where deptno=10 union select * from emp where deptno in (10,20); --不包括重复行<br>
select * from emp where deptno=10 union all select * from emp where deptno in (10,20); --包括重复行</div>

<p><br><strong><font style=\"COLOR: #ff0000\">二.ORACLE日期时间函数大全</font> </strong><br>
   TO_DATE格式(以时间:2007-11-02   13:45:25为例)<br><br>
        Year:     <br>
        yy two digits 两位年                显示值:07<br>
        yyy three digits 三位年                显示值:007<br>
        yyyy four digits 四位年                显示值:2007<br><br>
        Month:     <br>
        mm    number     两位月              显示值:11<br>
        mon    abbreviated 字符集表示          显示值:11月,若是英文版,显示nov    <br>
        month spelled out 字符集表示          显示值:11月,若是英文版,显示november<br><br>
        Day:     <br>
        dd    number         当月第几天        显示值:02<br>
        ddd    number         当年第几天        显示值:02<br>
        dy    abbreviated 当周第几天简写    显示值:星期五,若是英文版,显示fri<br>
        day    spelled out   当周第几天全写    显示值:星期五,若是英文版,显示friday       <br>
        ddspth spelled out, ordinal twelfth<br><br>
              Hour:<br>
              hh    two digits 12小时进制            显示值:01<br>
              hh24 two digits 24小时进制            显示值:13<br><br>
              Minute:<br>
              mi    two digits 60进制                显示值:45<br><br>
              Second:<br>
              ss    two digits 60进制                显示值:25<br><br>
              其它<br>
              Q     digit         季度                  显示值:4<br>
              WW    digit         当年第几周            显示值:44<br>
              W    digit          当月第几周            显示值:1<br><br>
        24小时格式下时间范围为： 0:00:00 - 23:59:59....     <br>
        12小时格式下时间范围为： 1:00:00 - 12:59:59 ....<br><br><strong>1. 日期和字符转换函数用法（to_date,to_char）</strong><br>
        <br>
select to_char(sysdate,\'yyyy-mm-dd hh24:mi:ss\') as nowTime from dual;   //日期转化为字符串  <br>
select to_char(sysdate,\'yyyy\') as nowYear   from dual;   //获取时间的年  <br>
select to_char(sysdate,\'mm\')    as nowMonth from dual;   //获取时间的月  <br>
select to_char(sysdate,\'dd\')    as nowDay    from dual;   //获取时间的日  <br>
select to_char(sysdate,\'hh24\') as nowHour   from dual;   //获取时间的时  <br>
select to_char(sysdate,\'mi\')    as nowMinute from dual;   //获取时间的分  <br>
select to_char(sysdate,\'ss\')    as nowSecond from dual;   //获取时间的秒<br><br>
select to_date(\'2004-05-07 13:23:44\',\'yyyy-mm-dd hh24:mi:ss\')    from dual//<br><br><strong>2. select to_char( to_date(222,\'J\'),\'Jsp\') from dual</strong>     <br><br>
    显示Two Hundred Twenty-Two  <br><br><strong>3.求某天是星期几</strong>     <br>
   select to_char(to_date(\'2002-08-26\',\'yyyy-mm-dd\'),\'day\') from dual;     <br>
   星期一     <br>
   select to_char(to_date(\'2002-08-26\',\'yyyy-mm-dd\'),\'day\',\'NLS_DATE_LANGUAGE = American\') from dual;     <br>
   monday     <br>
   设置日期语言     <br>
   ALTER SESSION SET NLS_DATE_LANGUAGE=\'AMERICAN\';     <br>
   也可以这样     <br>
   TO_DATE (\'2002-08-26\', \'YYYY-mm-dd\', \'NLS_DATE_LANGUAGE = American\')     <br><br><strong>4. 两个日期间的天数</strong>     <br>
    select floor(sysdate - to_date(\'20020405\',\'yyyymmdd\')) from dual;  <br><br><strong>5. 时间为null的用法</strong>     <br>
   select id, active_date from table1     <br>
   UNION     <br>
   select 1, TO_DATE(null) from dual;      <br>
   注意要用TO_DATE(null)     <br><br><strong>6.月份差</strong>  <br>
   a_date between to_date(\'20011201\',\'yyyymmdd\') and to_date(\'20011231\',\'yyyymmdd\')     <br>
   那么12月31号中午12点之后和12月1号的12点之前是不包含在这个范围之内的。     <br>
   所以，当时间需要精确的时候，觉得to_char还是必要的<br><br><strong>7. 日期格式冲突问题</strong>     <br>
    输入的格式要看你安装的ORACLE字符集的类型, 比如: US7ASCII, date格式的类型就是: \'01-Jan-01\'     <br>
    alter system set NLS_DATE_LANGUAGE = American     <br>
    alter session set NLS_DATE_LANGUAGE = American     <br>
    或者在to_date中写     <br>
    select to_char(to_date(\'2002-08-26\',\'yyyy-mm-dd\'),\'day\',\'NLS_DATE_LANGUAGE = American\') from dual;     <br>
    注意我这只是举了NLS_DATE_LANGUAGE，当然还有很多，     <br>
    可查看     <br>
    select * from nls_session_parameters     <br>
    select * from V$NLS_PARAMETERS     <br><strong>8.</strong>     </p>

<p> </p>

<div class=\"codetitle\">
<span><u></u></span> 代码如下:</div>

<p> </p>

<div class=\"codebody\" id=\"code38074\">
<br>
   select count(*)     <br>
   from ( select rownum-1 rnum     <br>
       from all_objects     <br>
       where rownum <= to_date(\'2002-02-28\',\'yyyy-mm-dd\') - to_date(\'2002-     <br>
       02-01\',\'yyyy-mm-dd\')+1     <br>
      )     <br>
   where to_char( to_date(\'2002-02-01\',\'yyyy-mm-dd\')+rnum-1, \'D\' )     <br>
        not in ( \'1\', \'7\' )     </div>

<p><br>
   查找2002-02-28至2002-02-01间除星期一和七的天数     <br>
   在前后分别调用DBMS_UTILITY.GET_TIME, 让后将结果相减(得到的是1/100秒, 而不是毫秒).     <br><br><strong>9. 查找月份</strong>  </p>

<p> </p>

<div class=\"codetitle\">
<span><u></u></span> 代码如下:</div>

<p> </p>

<div class=\"codebody\" id=\"code16048\">
<br>
    select months_between(to_date(\'01-31-1999\',\'MM-DD-YYYY\'),to_date(\'12-31-1998\',\'MM-DD-YYYY\')) \"MONTHS\" FROM DUAL;     <br>
    1     <br>
   select months_between(to_date(\'02-01-1999\',\'MM-DD-YYYY\'),to_date(\'12-31-1998\',\'MM-DD-YYYY\')) \"MONTHS\" FROM DUAL;     <br>
    1.03225806451613</div>

<p><br><strong>10. Next_day的用法</strong>     </p>

<p> </p>

<div class=\"codetitle\">
<span><u></u></span> 代码如下:</div>

<p> </p>

<div class=\"codebody\" id=\"code55569\">
<br>
    Next_day(date, day)     <br><br>
    Monday-Sunday, for format code DAY     <br>
    Mon-Sun, for format code DY     <br>
    1-7, for format code D    </div>

<p><br><strong>11</strong>     <br>
   select to_char(sysdate,\'hh:mi:ss\') TIME from all_objects     <br>
   注意：第一条记录的TIME 与最后一行是一样的     <br>
   可以建立一个函数来处理这个问题     </p>

<p> </p>

<div class=\"codetitle\">
<span><u></u></span> 代码如下:</div>

<p> </p>

<div class=\"codebody\" id=\"code37006\">
<br>
   create or replace function sys_date return date is     <br>
   begin     <br>
   return sysdate;     <br>
   end;     <br><br>
   select to_char(sys_date,\'hh:mi:ss\') from all_objects;  </div>

<p><br><strong>12.获得小时数</strong>     <br>
     extract()找出日期或间隔值的字段值</p>

<p> </p>

<div class=\"codetitle\">
<span><u></u></span> 代码如下:</div>

<p> </p>

<div class=\"codebody\" id=\"code19252\">
<br>
    SELECT EXTRACT(HOUR FROM TIMESTAMP \'2001-02-16 2:38:40\') from offer     <br>
    SQL> select sysdate ,to_char(sysdate,\'hh\') from dual;     <br><br>
    SYSDATE TO_CHAR(SYSDATE,\'HH\')     <br>
    -------------------- ---------------------     <br>
    2003-10-13 19:35:21 07     <br><br>
    SQL> select sysdate ,to_char(sysdate,\'hh24\') from dual;     <br><br>
    SYSDATE TO_CHAR(SYSDATE,\'HH24\')     <br>
    -------------------- -----------------------     <br>
    2003-10-13 19:35:21 19     </div>

<p><br><strong>13.年月日的处理</strong>     </p>

<p> </p>

<div class=\"codetitle\">
<span><u></u></span> 代码如下:</div>

<p> </p>

<div class=\"codebody\" id=\"code45955\">
<br>
   select older_date,     <br>
       newer_date,     <br>
       years,     <br>
       months,     <br>
       abs(     <br>
        trunc(     <br>
         newer_date-     <br>
         add_months( older_date,years*12+months )     <br>
        )     <br>
       ) days<br><br>
   from ( select     <br>
        trunc(months_between( newer_date, older_date )/12) YEARS,     <br>
        mod(trunc(months_between( newer_date, older_date )),12 ) MONTHS,     <br>
        newer_date,     <br>
        older_date     <br>
        from (<br>
              select hiredate older_date, add_months(hiredate,rownum)+rownum newer_date     <br>
              from emp<br>
             )     <br>
      )     </div>

<p><br><strong>14.处理月份天数不定的办法</strong>     <br>
   select to_char(add_months(last_day(sysdate) +1, -2), \'yyyymmdd\'),last_day(sysdate) from dual     <br><strong>16.找出今年的天数</strong>     <br>
   select add_months(trunc(sysdate,\'year\'), 12) - trunc(sysdate,\'year\') from dual     <br>
   闰年的处理方法     <br>
   to_char( last_day( to_date(\'02\'    | | :year,\'mmyyyy\') ), \'dd\' )     <br>
   如果是28就不是闰年     <br><strong>17.yyyy与rrrr的区别</strong>     </p>

<p> </p>

<div class=\"codetitle\">
<span><u></u></span> 代码如下:</div>

<p> </p>

<div class=\"codebody\" id=\"code65845\">
<br>
   \'YYYY99 TO_C     <br>
   ------- ----     <br>
   yyyy 99 0099     <br>
   rrrr 99 1999     <br>
   yyyy 01 0001     <br>
   rrrr 01 2001     </div>

<p><br><strong>18.不同时区的处理</strong>     <br>
   select to_char( NEW_TIME( sysdate, \'GMT\',\'EST\'), \'dd/mm/yyyy hh:mi:ss\') ,sysdate     <br>
   from dual;   <br><br><strong>19.5秒钟一个间隔</strong>  </p>

<p> </p>

<div class=\"codetitle\">
<span><u></u></span> 代码如下:</div>

<p> </p>

<div class=\"codebody\" id=\"code32733\">
<br>
   Select TO_DATE(FLOOR(TO_CHAR(sysdate,\'SSSSS\')/300) * 300,\'SSSSS\') ,TO_CHAR(sysdate,\'SSSSS\')     <br>
   from dual     <br>
   2002-11-1 9:55:00 35786     <br>
   SSSSS表示5位秒数    <br>
  </div>

<p><br><strong>20.一年的第几天</strong>     <br>
   select TO_CHAR(SYSDATE,\'DDD\'),sysdate from dual<br><br>
   310 2002-11-6 10:03:51     <br><br><strong>21.计算小时,分,秒,毫秒</strong> </p>

<p> </p>

<div class=\"codetitle\">
<span><u></u></span> 代码如下:</div>

<p> </p>

<div class=\"codebody\" id=\"code32070\">
<br>
     select     <br>
     Days,     <br>
     A,     <br>
     TRUNC(A*24) Hours,     <br>
     TRUNC(A*24*60 - 60*TRUNC(A*24)) Minutes,     <br>
     TRUNC(A*24*60*60 - 60*TRUNC(A*24*60)) Seconds,     <br>
     TRUNC(A*24*60*60*100 - 100*TRUNC(A*24*60*60)) mSeconds     <br>
    from     <br>
    (     <br>
     select     <br>
     trunc(sysdate) Days,     <br>
     sysdate - trunc(sysdate) A     <br>
     from dual     <br>
   )     <br>
   select * from tabname     <br>
   order by decode(mode,\'FIFO\',1,-1)*to_char(rq,\'yyyymmddhh24miss\');     <br><br>
   //     <br>
   floor((date2-date1) /365) 作为年     <br>
   floor((date2-date1, 365) /30) 作为月     <br>
   d(mod(date2-date1, 365), 30)作为日.</div>

<p><br><strong>23.next_day函数</strong>      返回下个星期的日期,day为1-7或星期日-星期六,1表示星期日<br>
   next_day(sysdate,6)是从当前开始下一个星期五。后面的数字是从星期日开始算起。     <br>
   1 2 3 4 5 6 7     <br>
   日 一 二 三 四 五 六   <br><br>
   ---------------------------------------------------------------<br><br>
   select    (sysdate-to_date(\'2003-12-03 12:55:45\',\'yyyy-mm-dd hh24:mi:ss\'))*24*60*60 from ddual<br>
   日期 返回的是天 然后 转换为ss<br><br><strong>24,round[舍入到最接近的日期](day:舍入到最接近的星期日)</strong><br>
   select sysdate S1,<br>
   round(sysdate) S2 ,<br>
   round(sysdate,\'year\') YEAR,<br>
   round(sysdate,\'month\') MONTH ,<br>
   round(sysdate,\'day\') DAY from dual<br><br><strong>25,trunc[截断到最接近的日期,单位为天] ,返回的是日期类型</strong><br>
   select sysdate S1,                    <br>
     trunc(sysdate) S2,                 //返回当前日期,无时分秒<br>
     trunc(sysdate,\'year\') YEAR,        //返回当前年的1月1日,无时分秒<br>
     trunc(sysdate,\'month\') MONTH ,     //返回当前月的1日,无时分秒<br>
     trunc(sysdate,\'day\') DAY           //返回当前星期的星期天,无时分秒<br>
   from dual<br><br><strong>26,返回日期列表中最晚日期</strong><br>
   select greatest(\'01-1月-04\',\'04-1月-04\',\'10-2月-04\') from dual<br><br><strong>27.计算时间差</strong><br>
     注:oracle时间差是以天数为单位,所以换算成年月,日<br><br>
      select floor(to_number(sysdate-to_date(\'2007-11-02 15:55:03\',\'yyyy-mm-dd hh24:mi:ss\'))/365) as spanYears from dual        //时间差-年<br>
      select ceil(moths_between(sysdate-to_date(\'2007-11-02 15:55:03\',\'yyyy-mm-dd hh24:mi:ss\'))) as spanMonths from dual        //时间差-月<br>
      select floor(to_number(sysdate-to_date(\'2007-11-02 15:55:03\',\'yyyy-mm-dd hh24:mi:ss\'))) as spanDays from dual             //时间差-天<br>
      select floor(to_number(sysdate-to_date(\'2007-11-02 15:55:03\',\'yyyy-mm-dd hh24:mi:ss\'))*24) as spanHours from dual         //时间差-时<br>
      select floor(to_number(sysdate-to_date(\'2007-11-02 15:55:03\',\'yyyy-mm-dd hh24:mi:ss\'))*24*60) as spanMinutes from dual    //时间差-分<br>
      select floor(to_number(sysdate-to_date(\'2007-11-02 15:55:03\',\'yyyy-mm-dd hh24:mi:ss\'))*24*60*60) as spanSeconds from dual //时间差-秒<br><br><strong>28.更新时间</strong><br>
     注:oracle时间加减是以天数为单位,设改变量为n,所以换算成年月,日<br>
     select to_char(sysdate,\'yyyy-mm-dd hh24:mi:ss\'),to_char(sysdate+n*365,\'yyyy-mm-dd hh24:mi:ss\') as newTime from dual        //改变时间-年<br>
     select to_char(sysdate,\'yyyy-mm-dd hh24:mi:ss\'),add_months(sysdate,n) as newTime from dual                                 //改变时间-月<br>
     select to_char(sysdate,\'yyyy-mm-dd hh24:mi:ss\'),to_char(sysdate+n,\'yyyy-mm-dd hh24:mi:ss\') as newTime from dual            //改变时间-日<br>
     select to_char(sysdate,\'yyyy-mm-dd hh24:mi:ss\'),to_char(sysdate+n/24,\'yyyy-mm-dd hh24:mi:ss\') as newTime from dual         //改变时间-时<br>
     select to_char(sysdate,\'yyyy-mm-dd hh24:mi:ss\'),to_char(sysdate+n/24/60,\'yyyy-mm-dd hh24:mi:ss\') as newTime from dual      //改变时间-分<br>
     select to_char(sysdate,\'yyyy-mm-dd hh24:mi:ss\'),to_char(sysdate+n/24/60/60,\'yyyy-mm-dd hh24:mi:ss\') as newTime from dual   //改变时间-秒<br><br><strong>29.查找月的第一天,最后一天</strong><br>
     SELECT Trunc(Trunc(SYSDATE, \'MONTH\') - 1, \'MONTH\') First_Day_Last_Month,<br>
       Trunc(SYSDATE, \'MONTH\') - 1 / 86400 Last_Day_Last_Month,<br>
       Trunc(SYSDATE, \'MONTH\') First_Day_Cur_Month,<br>
       LAST_DAY(Trunc(SYSDATE, \'MONTH\')) + 1 - 1 / 86400 Last_Day_Cur_Month<br>
   FROM dual;<br><br><strong><font style=\"COLOR: #ff0000\">三. 字符函数(可用于字面字符或数据库列)</font><br>
1，字符串截取</strong><br>
   select substr(\'abcdef\',1,3) from dual<br><br><strong>2,查找子串位置</strong><br>
   select instr(\'abcfdgfdhd\',\'fd\') from dual<br><br><strong>3,字符串连接</strong><br>
   select \'HELLO\'||\'hello world\' from dual;<br><br><strong>4, 1)去掉字符串中的空格</strong><br>
    select ltrim(\' abc\') s1,<br>
    rtrim(\'zhang \') s2,<br>
    trim(\' zhang \') s3 from dual<br><br>
   <strong>2)去掉前导和后缀</strong><br>
    select trim(leading 9 from 9998767999) s1,<br>
    trim(trailing 9 from 9998767999) s2,<br>
    trim(9 from 9998767999) s3 from dual;<br><br><strong>5,返回字符串首字母的Ascii值</strong><br>
   select ascii(\'a\') from dual<br><br><strong>6,返回ascii值对应的字母</strong><br>
   select chr(97) from dual<br><br><strong>7,计算字符串长度 </strong><br>
   select length(\'abcdef\') from dual<br><br><strong>8,initcap（首字母变大写） ,lower(变小写),upper(变大写)</strong><br>
   select lower(\'ABC\') s1, <br>
       upper(\'def\') s2,<br>
       initcap(\'efg\') s3<br>
   from dual;<br><br><strong>9,Replace</strong><br>
   select replace(\'abc\',\'b\',\'xy\') from dual;<br><br><strong>10,translate</strong><br>
   select translate(\'abc\',\'b\',\'xx\') from dual; -- x是1位<br><br><strong>11,lpad [左添充] rpad [右填充](用于控制输出格式)</strong><br>
   select lpad(\'func\',15,\'=\') s1, rpad(\'func\',15,\'-\') s2 from dual;<br>
   select lpad(dname,14,\'=\') from dept;<br><br><strong>12, decode[实现if ..then 逻辑]</strong>   注:第一个是表达式,最后一个是不满足任何一个条件的值<br>
   select deptno,decode(deptno,10,\'1\',20,\'2\',30,\'3\',\'其他\') from dept;<br>
   例:<br>
   select seed,account_name,decode(seed,111,1000,200,2000,0) from t_userInfo//如果seed为111,则取1000;为200,取2000;其它取0<br>
   select seed,account_name,decode(sign(seed-111),1,\'big seed\',-1,\'little seed\',\'equal seed\') from t_userInfo//如果seed>111,则显示大;为200,则显示小;其它则显示相等<br><br><strong>13 case[实现switch ..case 逻辑]</strong></p>

<p> </p>

<div class=\"codetitle\">
<span><u></u></span> 代码如下:</div>

<p> </p>

<div class=\"codebody\" id=\"code7503\">
<br>
    SELECT CASE X-FIELD<br>
         WHEN X-FIELD < 40 THEN \'X-FIELD 小于 40\'<br>
         WHEN X-FIELD < 50 THEN \'X-FIELD 小于 50\'<br>
         WHEN X-FIELD < 60 THEN \'X-FIELD 小于 60\'<br>
         ELSE \'UNBEKNOWN\'<br>
        END<br>
   FROM DUAL</div>

<p>  <br>
注:CASE语句在处理类似问题就显得非常灵活。当只是需要匹配少量数值时，用Decode更为简洁。<br><br><strong><font style=\"COLOR: #ff0000\">四.数字函数</font><br>
1，取整函数（ceil 向上取整,floor 向下取整）</strong><br>
   select ceil(66.6) N1,floor(66.6) N2 from dual;<br><br><strong>2, 取幂(power) 和 求平方根(sqrt)</strong><br>
   select power(3,2) N1,sqrt(9) N2 from dual;<br><br><strong>3,求余</strong><br>
   select mod(9,5) from dual;<br><br><strong>4,返回固定小数位数 (round:四舍五入，trunc:直接截断)</strong><br>
   select round(66.667,2) N1,trunc(66.667,2) N2 from dual;<br><br><strong>5,返回值的符号(正数返回为1,负数为-1)</strong><br>
   select sign(-32),sign(293) from dual;<br><br><strong><font style=\"COLOR: #ff0000\">五.转换函数</font></strong><br><strong>1，to_char()[将日期和数字类型转换成字符类型]</strong><br>
   1) select to_char(sysdate) s1,<br>
        to_char(sysdate,\'yyyy-mm-dd\') s2,<br>
        to_char(sysdate,\'yyyy\') s3,<br>
        to_char(sysdate,\'yyyy-mm-dd hh12:mi:ss\') s4,<br>
        to_char(sysdate, \'hh24:mi:ss\') s5,<br>
        to_char(sysdate,\'DAY\') s6<br>
    from dual;<br>
   2) select sal,to_char(sal,\'＄99999\') n1,to_char(sal,\'＄99,999\') n2 from emp<br><br><strong>2, to_date()[将字符类型转换为日期类型] </strong><br>
    insert into emp(empno,hiredate) values(8000,to_date(\'2004-10-10\',\'yyyy-mm-dd\'));<br><br><strong>3, to_number() 转换为数字类型 </strong><br>
    select to_number(to_char(sysdate,\'hh12\')) from dual; //以数字显示的小时数<br><br><strong><font style=\"COLOR: #ff0000\">六.其他函数</font></strong><br>
   <strong>1.user:</strong><br>
    返回登录的用户名称<br>
    select user from dual;<br><br>
   <strong>2.vsize: </strong><br>
    返回表达式所需的字节数<br>
    select vsize(\'HELLO\') from dual;<br><br>
   <strong>3.nvl(ex1,ex2): 　</strong><br>
    ex1值为空则返回ex2,否则返回该值本身ex1（常用）<br>
    例：如果雇员没有佣金，将显示0，否则显示佣金<br>
    select comm,nvl(comm,0) from emp;<br><br>
   <strong>4.nullif(ex1,ex2): </strong><br>
    值相等返空，否则返回第一个值<br>
    例：如果工资和佣金相等，则显示空，否则显示工资<br>
    select nullif(sal,comm),sal,comm from emp;<br><br>
  <strong> 5.coalesce: 　</strong><br>
    返回列表中第一个非空表达式<br>
    select comm,sal,coalesce(comm,sal,sal*10) from emp;<br><br>
   <strong>6.nvl2(ex1,ex2,ex3) :</strong><br>
    如果ex1不为空，显示ex2,否则显示ex3<br>
    如：查看有佣金的雇员姓名以及他们的佣金<br>
    select nvl2(comm,ename,\') as HaveCommName,comm from emp;<br><br>
  <br><strong><font style=\"COLOR: #ff0000\">七.分组函数</font></strong><br>
max min avg count sum<br><strong>1，整个结果集是一个组</strong><br>
   1) 求部门30 的最高工资，最低工资,平均工资，总人数，有工作的人数，工种数量及工资总和</p>

<div class=\"codetitle\">
<span><u></u></span> 代码如下:</div>

<div class=\"codebody\" id=\"code81204\">
<br>
     select max(ename),max(sal),<br>
     min(ename),min(sal),<br>
     avg(sal),<br>
     count(*) ,count(job),count(distinct(job)) ,<br>
     sum(sal) from emp where deptno=30;</div>

<p><br><strong>2, 带group by 和 having 的分组</strong><br>
   1)按部门分组求最高工资，最低工资，总人数，有工作的人数，工种数量及工资总和</p>

<p> </p>

<div class=\"codetitle\">
<span><u></u></span> 代码如下:</div>

<p> </p>

<div class=\"codebody\" id=\"code33542\">   <br>
    select deptno, max(ename),max(sal),<br>
    min(ename),min(sal),<br>
    avg(sal),<br>
    count(*) ,count(job),count(distinct(job)) ,<br>
    sum(sal) from emp group by deptno;</div>

<p>  <br>
   2)部门30的最高工资，最低工资，总人数，有工作的人数，工种数量及工资总和</p>

<div class=\"codetitle\">
<span><u></u></span> 代码如下:</div>

<div class=\"codebody\" id=\"code76527\">   <br>
    select deptno, max(ename),max(sal),<br>
    min(ename),min(sal),<br>
    avg(sal),<br>
    count(*) ,count(job),count(distinct(job)) ,<br>
    sum(sal) from emp group by deptno having deptno=30;</div>

<p>  <br><strong>3, stddev 返回一组值的标准偏差</strong><br>
    select deptno,stddev(sal) from emp group by deptno;<br>
    variance 返回一组值的方差差<br>
    select deptno,variance(sal) from emp group by deptno;<br><br><strong>4, 带有rollup和cube操作符的Group By</strong><br>
    rollup 按分组的第一个列进行统计和最后的小计<br>
    cube 按分组的所有列的进行统计和最后的小计<br>
    select deptno,job ,sum(sal) from emp group by deptno,job;<br>
    select deptno,job ,sum(sal) from emp group by rollup(deptno,job);<br>
    cube 产生组内所有列的统计和最后的小计<br>
    select deptno,job ,sum(sal) from emp group by cube(deptno,job);<br><br><strong><font style=\"COLOR: #ff0000\">八、临时表</font></strong><br>
   只在会话期间或在事务处理期间存在的表.<br>
   临时表在插入数据时，动态分配空间</p>

<div class=\"codetitle\">
<span><u></u></span> 代码如下:</div>

<div class=\"codebody\" id=\"code689\">
<br>
   create global temporary table temp_dept<br>
   (dno number,<br>
   dname varchar2(10))<br>
   on commit delete rows;<br>
   insert into temp_dept values(10,\'ABC\');<br>
   commit;<br>
   select * from temp_dept; --无数据显示,数据自动清除<br>
   on commit preserve rows:在会话期间表一直可以存在（保留数据）<br>
   on commit delete rows:事务结束清除数据（在事务结束时自动删除表的数据）</div>

<p><br>
除法：</p>

<p> </p>

<div class=\"codetitle\">
<span><u></u></span> 代码如下:
</div>

<p> </p>

<div class=\"codebody\" id=\"code28202\"><br>
select MOD(65,50) from dual     --取余<br>
select  trunc( 65/33) from dual  -- 取整 trunc (1.9) = 1<br>
select ceil(65/60) from dual          -- 取整 ceil(1.1) = 2</div>

<p> </p>

<p>关于oracle的常用函数就为大家介绍到这里了，大家不妨可以尝试一下。只要你去发现，去努力，没有什么是不可能的。</p>
						</div>
					',`creator`='信息管理部',`created_at`='2019-12-12 14:48:00',`updated_at`='2019-12-12 14:48:00',`click`='2' WHERE `id` = 28 [ RunTime:0.0014s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000027s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000051s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.009322s ]
INFO: [ view_parse ] --END-- [ RunTime:0.009350s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000511s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000528s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000689s ]
INFO: [ app_end ] --END-- [ RunTime:0.000706s ]

[ 2019-12-12T14:49:56+08:00 ] 192.168.3.91 /Home/Index/ShowDetail?id=28
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000006s ]
INFO: [ app_init ] --END-- [ RunTime:0.000672s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000754s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000775s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0017s ]
SQL: SELECT * FROM `articles` WHERE `id` = 28 LIMIT 1   [ RunTime:0.0007s ]

[ 2019-12-12T14:49:58+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000545s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000605s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000625s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000023s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000048s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.011216s ]
INFO: [ view_parse ] --END-- [ RunTime:0.011248s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000553s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000573s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000725s ]
INFO: [ app_end ] --END-- [ RunTime:0.000745s ]

[ 2019-12-12T14:49:58+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000009s ]
INFO: [ app_init ] --END-- [ RunTime:0.000688s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001538s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001596s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0018s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0044s ]

[ 2019-12-12T14:50:47+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000006s ]
INFO: [ app_init ] --END-- [ RunTime:0.000654s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000738s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000754s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0017s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0025s ]

[ 2019-12-12T14:56:41+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000004s ]
INFO: [ app_init ] --END-- [ RunTime:0.000617s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000694s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000714s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000019s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000035s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.009318s ]
INFO: [ view_parse ] --END-- [ RunTime:0.009352s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000618s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000633s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000772s ]
INFO: [ app_end ] --END-- [ RunTime:0.000786s ]

[ 2019-12-12T14:56:41+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000006s ]
INFO: [ app_init ] --END-- [ RunTime:0.000520s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000549s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000564s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0010s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0025s ]

[ 2019-12-12T14:56:43+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000005s ]
INFO: [ app_init ] --END-- [ RunTime:0.000573s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000572s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000590s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0008s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0025s ]

[ 2019-12-12T14:58:51+08:00 ] 192.168.3.91 /Home/Index/detail?id=1
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.001019s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001171s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001207s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0012s ]
SQL: SELECT * FROM `articles` WHERE `id` = 1 LIMIT 1   [ RunTime:0.0005s ]
SQL: UPDATE `articles` SET `origin_url`='https://js.aizhan.com/qukuailian/10143.html',`title`='区块链“不可能三角”',`text`='<div class=\"container\">
							
<p>　　在前面的讨论中我们提到，一个基础公链要同时兼顾功能、性能、网络三个要素。在<span style=\"color:#002FD9\">区块链</span>的设计中，还有一个更知名的“不可能三角”(见图1)，它指的是，一个区块链项目无法同时满足三个条件，最多只能同时满足两个条件：</p>

<p>　　可扩展性(scalability)</p>

<p>　　<span style=\"color:#002FD9\">去中心化</span>(decentralization)</p>

<p>　　安全(security)</p>

<p style=\"text-align:center\"><img align=\"\" alt=\"区块链的“不可能三角”\" border=\"0\" src=\"https://js.aizhan.com/jishu/static/dlimg/201911/157354912296159.gif\" width=\"370\"></p>

<p style=\"text-align: center;\">　　图1：区块链的“不可能三角”</p>

<p>　　对比一下比特币和EOS：比特币系统看重的是去中心化和安全，而牺牲了可扩展性;EOS 在一定程度上牺牲了去中心化，而去追求可扩展性与安全。</p>

<p>　　在很多领域中都有这样的不可能三角，我们要在三个因素间权衡：</p>

<p>　　比如在软件工程中的时间(time)、成本(money)、功能性(scope)。</p>

<p>　　比如在分布式系统中的一致性(consistency)、可用性(availability)、网络分区(partition tolerance)。</p>

<p>　　比如在货币汇率政策中的三元悖论或保罗·克鲁格曼所画的永恒的三角形，即调节性(adjustment)、置信度(confidence)、流动性(liquidity)(见图2)。</p>

<p style=\"text-align:center\"><img align=\"\" alt=\"保罗·克鲁格曼的永恒的三角形\" border=\"0\" src=\"https://js.aizhan.com/jishu/static/dlimg/201911/157354912254410.gif\" width=\"390\"></p>

<p style=\"text-align: center;\">　　图2：保罗·克鲁格曼的永恒的三角形</p>

<p>　　以上便是这篇文章所要阐述的全部内容，对于区块链“不可能三角”，你有别的见解吗？如果有，那不妨留言和信息管理部技术一起探讨下。</p>
						</div>
					',`creator`='信息管理部',`created_at`='2019-12-12 14:46:57',`updated_at`='2019-12-12 14:46:57',`click`='1' WHERE `id` = 1 [ RunTime:0.0012s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000040s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000072s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.015166s ]
INFO: [ view_parse ] --END-- [ RunTime:0.015205s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000919s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000944s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001097s ]
INFO: [ app_end ] --END-- [ RunTime:0.001120s ]

[ 2019-12-12T14:58:52+08:00 ] 192.168.3.91 /Home/Index/ShowDetail?id=1
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000008s ]
INFO: [ app_init ] --END-- [ RunTime:0.000681s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000831s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000856s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0011s ]
SQL: SELECT * FROM `articles` WHERE `id` = 1 LIMIT 1   [ RunTime:0.0004s ]

[ 2019-12-12T15:40:39+08:00 ] ::1 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000006s ]
INFO: [ app_init ] --END-- [ RunTime:0.000796s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000819s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000840s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000047s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000074s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.013774s ]
INFO: [ view_parse ] --END-- [ RunTime:0.013803s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000746s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000765s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000947s ]
INFO: [ app_end ] --END-- [ RunTime:0.000965s ]

[ 2019-12-12T15:40:39+08:00 ] ::1 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000796s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000957s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000987s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0014s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0040s ]

[ 2019-12-12T15:59:33+08:00 ] 192.168.3.91 /
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000006s ]
INFO: [ app_init ] --END-- [ RunTime:0.000740s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000814s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000834s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000022s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000043s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.011899s ]
INFO: [ view_parse ] --END-- [ RunTime:0.011932s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000808s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000827s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001028s ]
INFO: [ app_end ] --END-- [ RunTime:0.001050s ]

[ 2019-12-12T15:59:33+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000006s ]
INFO: [ app_init ] --END-- [ RunTime:0.000595s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000676s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000694s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0017s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0028s ]

[ 2019-12-12T15:59:35+08:00 ] 192.168.3.91 /Home/Index/GetArticlesList
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000572s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000647s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000667s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0014s ]
SQL: SELECT * FROM `articles` ORDER BY id desc  [ RunTime:0.0030s ]

[ 2019-12-12T15:59:36+08:00 ] 192.168.3.91 /Home/Index/detail?id=30
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000023s ]
INFO: [ app_init ] --END-- [ RunTime:0.001006s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000736s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000760s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0016s ]
SQL: SELECT * FROM `articles` WHERE `id` = 30 LIMIT 1   [ RunTime:0.0005s ]
SQL: UPDATE `articles` SET `origin_url`='https://js.aizhan.com/data/oracle/10558.html',`title`='oracle如何使用nvl函数',`text`='<div class=\"container\">
							
<p>关于nvl<span style=\"color:#002FD9\"><span style=\"color:#002FD9\">函数</span></span>的了解你知道多少呢？在oracle中难免会需要使用到nvl函数，那么你知道oracle如何使用nvl函数吗？今天小编就将为大家解答oracle如何使用nvl函数这个问题，大家可以参考一下。</p>

<p><span style=\"color:#002FD9\"><span style=\"color:#002FD9\">Oracle</span></span>的Nvl函数</p>

<p>nvl( ) 函数</p>

<p>从两个表达式返回一个非null 值。</p>

<p>语法</p>

<p>NVL(eExpression1, eExpression2)<br><br>
参数</p>

<p>eExpression1, eExpression2</p>

<p>如 果 eExpression1 的计算结果为 null 值，则 NVL( ) 返回 eExpression2。如果 eExpression1 的计算结果不是 null 值，则返回 eExpression1。eExpression1 和 eExpression2 可以是任意一种数据类型。如果 eExpression1 与 eExpression2 的结果皆为 null 值，则 NVL( ) 返回 .NULL.。</p>

<p>返回值类型</p>

<p>字符型、日期型、日期时间型、数值型、货币型、逻辑型或 null 值</p>

<p>说明</p>

<p>在不支持 null 值或 null 值无关紧要的情况下，可以使用 NVL( ) 来移去计算或操作中的 null 值。</p>

<p>select nvl(a.name,\'空得\') as name from student a joinschool b on a.ID=b.ID</p>

<p>注意：两个参数得类型要匹配</p>

<p>问：什么是NULL？</p>

<p>答：在我们不知道具体有什么数据的时候，也即未知，可以用NULL，</p>

<p>我们称它为空，ORACLE中，含有空值的表列长度为零。</p>

<p>ORACLE允许任何一种数据类型的字段为空，除了以下两种情况：</p>

<p>1、主键字段（primary key），</p>

<p>2、定义时已经加了NOT NULL限制条件的字段</p>

<p>说明：</p>

<p>1、等价于没有任何值、是未知数。</p>

<p>2、NULL与0、空字符串、空格都不同。</p>

<p>3、对空值做加、减、乘、除等运算操作，结果仍为空。</p>

<p>4、NULL的处理使用NVL函数。</p>

<p>5、比较时使用关键字用“is null”和“is not null”。</p>

<p>6、空值不能被索引，所以查询时有些符合条件的数据可能查不出来，</p>

<p>count(*)中，用nvl(列名,0)处理后再查。</p>

<p>7、排序时比其他数据都大（索引默认是降序排列，小→大），</p>

<p>所以NULL值总是排在最后。</p>

<p>以上就是关于oracle如何使用nvl函数的内容，在上文中，小编为大家做了简单的介绍。其实，在日常的操作oracle过程中是经常使可以使用的。</p>
						</div>
					',`creator`='信息管理部',`created_at`='2019-12-12 14:48:03',`updated_at`='2019-12-12 14:48:03',`click`='1' WHERE `id` = 30 [ RunTime:0.0006s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000025s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000047s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.010744s ]
INFO: [ view_parse ] --END-- [ RunTime:0.010775s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000515s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000534s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000679s ]
INFO: [ app_end ] --END-- [ RunTime:0.000696s ]

[ 2019-12-12T15:59:36+08:00 ] 192.168.3.91 /Home/Index/ShowDetail?id=30
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000033s ]
INFO: [ app_init ] --END-- [ RunTime:0.000935s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000926s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000955s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0020s ]
SQL: SELECT * FROM `articles` WHERE `id` = 30 LIMIT 1   [ RunTime:0.0010s ]

[ 2019-12-12T15:59:51+08:00 ] 192.168.3.91 /Home/Index/detail?id=30
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000769s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000866s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000894s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0018s ]
SQL: SELECT * FROM `articles` WHERE `id` = 30 LIMIT 1   [ RunTime:0.0005s ]
SQL: UPDATE `articles` SET `origin_url`='https://js.aizhan.com/data/oracle/10558.html',`title`='oracle如何使用nvl函数',`text`='<div class=\"container\">
							
<p>关于nvl<span style=\"color:#002FD9\"><span style=\"color:#002FD9\">函数</span></span>的了解你知道多少呢？在oracle中难免会需要使用到nvl函数，那么你知道oracle如何使用nvl函数吗？今天小编就将为大家解答oracle如何使用nvl函数这个问题，大家可以参考一下。</p>

<p><span style=\"color:#002FD9\"><span style=\"color:#002FD9\">Oracle</span></span>的Nvl函数</p>

<p>nvl( ) 函数</p>

<p>从两个表达式返回一个非null 值。</p>

<p>语法</p>

<p>NVL(eExpression1, eExpression2)<br><br>
参数</p>

<p>eExpression1, eExpression2</p>

<p>如 果 eExpression1 的计算结果为 null 值，则 NVL( ) 返回 eExpression2。如果 eExpression1 的计算结果不是 null 值，则返回 eExpression1。eExpression1 和 eExpression2 可以是任意一种数据类型。如果 eExpression1 与 eExpression2 的结果皆为 null 值，则 NVL( ) 返回 .NULL.。</p>

<p>返回值类型</p>

<p>字符型、日期型、日期时间型、数值型、货币型、逻辑型或 null 值</p>

<p>说明</p>

<p>在不支持 null 值或 null 值无关紧要的情况下，可以使用 NVL( ) 来移去计算或操作中的 null 值。</p>

<p>select nvl(a.name,\'空得\') as name from student a joinschool b on a.ID=b.ID</p>

<p>注意：两个参数得类型要匹配</p>

<p>问：什么是NULL？</p>

<p>答：在我们不知道具体有什么数据的时候，也即未知，可以用NULL，</p>

<p>我们称它为空，ORACLE中，含有空值的表列长度为零。</p>

<p>ORACLE允许任何一种数据类型的字段为空，除了以下两种情况：</p>

<p>1、主键字段（primary key），</p>

<p>2、定义时已经加了NOT NULL限制条件的字段</p>

<p>说明：</p>

<p>1、等价于没有任何值、是未知数。</p>

<p>2、NULL与0、空字符串、空格都不同。</p>

<p>3、对空值做加、减、乘、除等运算操作，结果仍为空。</p>

<p>4、NULL的处理使用NVL函数。</p>

<p>5、比较时使用关键字用“is null”和“is not null”。</p>

<p>6、空值不能被索引，所以查询时有些符合条件的数据可能查不出来，</p>

<p>count(*)中，用nvl(列名,0)处理后再查。</p>

<p>7、排序时比其他数据都大（索引默认是降序排列，小→大），</p>

<p>所以NULL值总是排在最后。</p>

<p>以上就是关于oracle如何使用nvl函数的内容，在上文中，小编为大家做了简单的介绍。其实，在日常的操作oracle过程中是经常使可以使用的。</p>
						</div>
					',`creator`='信息管理部',`created_at`='2019-12-12 14:48:03',`updated_at`='2019-12-12 14:48:03',`click`='2' WHERE `id` = 30 [ RunTime:0.0007s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000025s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000051s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.011557s ]
INFO: [ view_parse ] --END-- [ RunTime:0.011589s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000602s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000624s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000815s ]
INFO: [ app_end ] --END-- [ RunTime:0.000835s ]

[ 2019-12-12T15:59:51+08:00 ] 192.168.3.91 /Home/Index/ShowDetail?id=30
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000007s ]
INFO: [ app_init ] --END-- [ RunTime:0.000653s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001498s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001525s ]
SQL: SHOW COLUMNS FROM `articles` [ RunTime:0.0015s ]
SQL: SELECT * FROM `articles` WHERE `id` = 30 LIMIT 1   [ RunTime:0.0003s ]

